{"version":3,"sources":["webpack:///./src/views/Project.vue?d503","webpack:///src/views/Project.vue","webpack:///./src/views/Project.vue?1e80","webpack:///./src/views/Project.vue","webpack:///./node_modules/core-js/internals/regexp-exec-abstract.js","webpack:///./src/markdown/technology.md","webpack:///./src/markdown sync nonrecursive .md","webpack:///./src/views/Home.vue?60be","webpack:///./node_modules/core-js/modules/es.string.replace.js","webpack:///./src/markdown/SpringBoot.md","webpack:///./src/markdown/Spring.md","webpack:///./node_modules/core-js/internals/string-multibyte.js","webpack:///./src/views/DocumentSpringCloud.vue?ea30","webpack:///src/views/DocumentSpringCloud.vue","webpack:///./src/views/DocumentSpringCloud.vue?581c","webpack:///./src/views/DocumentSpringCloud.vue","webpack:///./src/views/Other.vue?f9b3","webpack:///./src/img/github.png","webpack:///./src/views/DocumentList.vue?24ac","webpack:///src/views/DocumentList.vue","webpack:///./src/views/DocumentList.vue?e936","webpack:///./src/views/DocumentList.vue","webpack:///./node_modules/core-js/internals/advance-string-index.js","webpack:///./node_modules/core-js/internals/regexp-exec.js","webpack:///./src/img/gmail.png","webpack:///./node_modules/core-js/internals/regexp-sticky-helpers.js","webpack:///./src/views/DocumentSpringCloud.vue?80e0","webpack:///./node_modules/core-js/modules/es.regexp.exec.js","webpack:///./node_modules/core-js/internals/regexp-flags.js","webpack:///./src/img/wechat.png","webpack:///./src/views/Home.vue?fe63","webpack:///src/views/Home.vue","webpack:///./src/views/Home.vue?493c","webpack:///./src/views/Home.vue","webpack:///./src/views/notFound404.vue?6779","webpack:///src/views/notFound404.vue","webpack:///./src/views/notFound404.vue?b7c8","webpack:///./src/views/notFound404.vue","webpack:///./src/markdown/MySql.md","webpack:///./src/markdown sync nonrecursive ^\\.\\/.*\\.md$","webpack:///./src/views/Other.vue?f332","webpack:///./src/components/Timeline.vue?1a3c","webpack:///src/components/Timeline.vue","webpack:///./src/components/Timeline.vue?8837","webpack:///./src/components/Timeline.vue","webpack:///src/views/Other.vue","webpack:///./src/views/Other.vue?b098","webpack:///./src/views/Other.vue","webpack:///./node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","webpack:///./src/markdown lazy ^\\.\\/.*\\.md$ namespace object","webpack:///./node_modules/core-js/modules/web.dom-collections.iterator.js","webpack:///./src/markdown/computer.md","webpack:///./src/img/telegram.png","webpack:///./node_modules/core-js/internals/dom-iterables.js"],"names":["render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","staticStyle","_v","component","classof","regexpExec","module","exports","R","S","exec","result","call","TypeError","code","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","keys","Object","resolve","fixRegExpWellKnownSymbolLogic","anObject","toObject","toLength","toInteger","requireObjectCoercible","advanceStringIndex","regExpExec","max","Math","min","floor","SUBSTITUTION_SYMBOLS","SUBSTITUTION_SYMBOLS_NO_NAMED","maybeToString","it","undefined","String","REPLACE","nativeReplace","maybeCallNative","reason","REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE","REPLACE_KEEPS_$0","UNSAFE_SUBSTITUTE","searchValue","replaceValue","O","replacer","regexp","indexOf","res","done","value","rx","functionalReplace","global","fullUnicode","unicode","lastIndex","results","push","matchStr","accumulatedResult","nextSourcePosition","i","length","matched","position","index","captures","j","namedCaptures","groups","replacerArgs","concat","replacement","apply","getSubstitution","slice","str","tailPos","m","symbols","match","ch","capture","charAt","n","f","createMethod","CONVERT_TO_STRING","$this","pos","first","second","size","charCodeAt","codeAt","staticClass","directives","name","rawName","attrs","domProps","_s","msg","data","md","key","methods","testMd","mounted","console","log","list","_l","nativeOn","$event","docSkip","components","$router","temp","replace","regexpFlags","stickyHelpers","nativeExec","RegExp","prototype","patchedExec","UPDATES_LAST_INDEX_WRONG","re1","re2","UNSUPPORTED_Y","BROKEN_CARET","NPCG_INCLUDED","PATCH","reCopy","re","sticky","flags","source","charsAdded","strCopy","multiline","input","arguments","fails","RE","s","$","target","proto","forced","that","ignoreCase","dotAll","$t","profession","Contact","email","wechat","saying","imgSrc","user","responseResult","language","activity","icon","type","color","timestamp","content","activities","redefine","wellKnownSymbol","createNonEnumerableProperty","SPECIES","REPLACE_SUPPORTS_NAMED_GROUPS","a","SPLIT_WORKS_WITH_OVERWRITTEN_EXEC","originalExec","split","KEY","sham","SYMBOL","DELEGATES_TO_SYMBOL","DELEGATES_TO_EXEC","execCalled","constructor","nativeRegExpMethod","nativeMethod","arg2","forceStringMethod","stringMethod","regexMethod","string","arg","webpackAsyncContext","Promise","then","t","DOMIterables","ArrayIteratorMethods","ITERATOR","TO_STRING_TAG","ArrayValues","values","COLLECTION_NAME","Collection","CollectionPrototype","error","METHOD_NAME","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList"],"mappings":"gHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAsBH,EAAII,MAAMC,GAAO,OAAOL,EAAIM,GAAG,IACnGC,EAAkB,CAAC,WAAa,IAAIP,EAAIC,KAASC,EAAGF,EAAIG,eAAmBE,EAAGL,EAAII,MAAMC,IAAIH,EAAG,OAAOG,EAAG,MAAM,CAACG,YAAY,CAAC,MAAQ,OAAO,OAAS,SAAS,CAACH,EAAG,KAAK,CAACL,EAAIS,GAAG,cCMnL,GACE,KAAF,UACE,WAAF,ICTiV,I,YCO7UC,EAAY,eACd,EACAX,EACAQ,GACA,EACA,KACA,WACA,MAIa,aAAAG,E,gCClBf,IAAIC,EAAU,EAAQ,QAClBC,EAAa,EAAQ,QAIzBC,EAAOC,QAAU,SAAUC,EAAGC,GAC5B,IAAIC,EAAOF,EAAEE,KACb,GAAoB,oBAATA,EAAqB,CAC9B,IAAIC,EAASD,EAAKE,KAAKJ,EAAGC,GAC1B,GAAsB,kBAAXE,EACT,MAAME,UAAU,sEAElB,OAAOF,EAGT,GAAmB,WAAfP,EAAQI,GACV,MAAMK,UAAU,+CAGlB,OAAOR,EAAWO,KAAKJ,EAAGC,K,qBClB5B,IAAIK,EAAO,smoBAEXR,EAAOC,QAAUO,G,iDCHjB,IAAIC,EAAM,CACT,aAAc,OACd,cAAe,OACf,kBAAmB,OACnB,gBAAiB,OACjB,kBAAmB,QAIpB,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAER,KAAO,mBACHQ,EAEP,OAAOP,EAAIE,GAEZD,EAAeQ,KAAO,WACrB,OAAOC,OAAOD,KAAKT,IAEpBC,EAAeU,QAAUP,EACzBb,EAAOC,QAAUS,EACjBA,EAAeE,GAAK,Q,6DC1BpB,W,yDCCA,IAAIS,EAAgC,EAAQ,QACxCC,EAAW,EAAQ,QACnBC,EAAW,EAAQ,QACnBC,EAAW,EAAQ,QACnBC,EAAY,EAAQ,QACpBC,EAAyB,EAAQ,QACjCC,EAAqB,EAAQ,QAC7BC,EAAa,EAAQ,QAErBC,EAAMC,KAAKD,IACXE,EAAMD,KAAKC,IACXC,EAAQF,KAAKE,MACbC,EAAuB,4BACvBC,EAAgC,oBAEhCC,EAAgB,SAAUC,GAC5B,YAAcC,IAAPD,EAAmBA,EAAKE,OAAOF,IAIxCf,EAA8B,UAAW,GAAG,SAAUkB,EAASC,EAAeC,EAAiBC,GAC7F,IAAIC,EAA+CD,EAAOC,6CACtDC,EAAmBF,EAAOE,iBAC1BC,EAAoBF,EAA+C,IAAM,KAE7E,MAAO,CAGL,SAAiBG,EAAaC,GAC5B,IAAIC,EAAItB,EAAuBtC,MAC3B6D,OAA0BZ,GAAfS,OAA2BT,EAAYS,EAAYP,GAClE,YAAoBF,IAAbY,EACHA,EAAS3C,KAAKwC,EAAaE,EAAGD,GAC9BP,EAAclC,KAAKgC,OAAOU,GAAIF,EAAaC,IAIjD,SAAUG,EAAQH,GAChB,IACIJ,GAAgDC,GACzB,kBAAjBG,IAA0E,IAA7CA,EAAaI,QAAQN,GAC1D,CACA,IAAIO,EAAMX,EAAgBD,EAAeU,EAAQ9D,KAAM2D,GACvD,GAAIK,EAAIC,KAAM,OAAOD,EAAIE,MAG3B,IAAIC,EAAKjC,EAAS4B,GACd/C,EAAImC,OAAOlD,MAEXoE,EAA4C,oBAAjBT,EAC1BS,IAAmBT,EAAeT,OAAOS,IAE9C,IAAIU,EAASF,EAAGE,OAChB,GAAIA,EAAQ,CACV,IAAIC,EAAcH,EAAGI,QACrBJ,EAAGK,UAAY,EAEjB,IAAIC,EAAU,GACd,MAAO,EAAM,CACX,IAAIxD,EAASuB,EAAW2B,EAAIpD,GAC5B,GAAe,OAAXE,EAAiB,MAGrB,GADAwD,EAAQC,KAAKzD,IACRoD,EAAQ,MAEb,IAAIM,EAAWzB,OAAOjC,EAAO,IACZ,KAAb0D,IAAiBR,EAAGK,UAAYjC,EAAmBxB,EAAGqB,EAAS+B,EAAGK,WAAYF,IAKpF,IAFA,IAAIM,EAAoB,GACpBC,EAAqB,EAChBC,EAAI,EAAGA,EAAIL,EAAQM,OAAQD,IAAK,CACvC7D,EAASwD,EAAQK,GAUjB,IARA,IAAIE,EAAU9B,OAAOjC,EAAO,IACxBgE,EAAWxC,EAAIE,EAAIN,EAAUpB,EAAOiE,OAAQnE,EAAEgE,QAAS,GACvDI,EAAW,GAMNC,EAAI,EAAGA,EAAInE,EAAO8D,OAAQK,IAAKD,EAAST,KAAK3B,EAAc9B,EAAOmE,KAC3E,IAAIC,EAAgBpE,EAAOqE,OAC3B,GAAIlB,EAAmB,CACrB,IAAImB,EAAe,CAACP,GAASQ,OAAOL,EAAUF,EAAUlE,QAClCkC,IAAlBoC,GAA6BE,EAAab,KAAKW,GACnD,IAAII,EAAcvC,OAAOS,EAAa+B,WAAMzC,EAAWsC,SAEvDE,EAAcE,EAAgBX,EAASjE,EAAGkE,EAAUE,EAAUE,EAAe1B,GAE3EsB,GAAYJ,IACdD,GAAqB7D,EAAE6E,MAAMf,EAAoBI,GAAYQ,EAC7DZ,EAAqBI,EAAWD,EAAQD,QAG5C,OAAOH,EAAoB7D,EAAE6E,MAAMf,KAKvC,SAASc,EAAgBX,EAASa,EAAKZ,EAAUE,EAAUE,EAAeI,GACxE,IAAIK,EAAUb,EAAWD,EAAQD,OAC7BgB,EAAIZ,EAASJ,OACbiB,EAAUlD,EAKd,YAJsBG,IAAlBoC,IACFA,EAAgBlD,EAASkD,GACzBW,EAAUnD,GAELO,EAAclC,KAAKuE,EAAaO,GAAS,SAAUC,EAAOC,GAC/D,IAAIC,EACJ,OAAQD,EAAGE,OAAO,IAChB,IAAK,IAAK,MAAO,IACjB,IAAK,IAAK,OAAOpB,EACjB,IAAK,IAAK,OAAOa,EAAID,MAAM,EAAGX,GAC9B,IAAK,IAAK,OAAOY,EAAID,MAAME,GAC3B,IAAK,IACHK,EAAUd,EAAca,EAAGN,MAAM,GAAI,IACrC,MACF,QACE,IAAIS,GAAKH,EACT,GAAU,IAANG,EAAS,OAAOJ,EACpB,GAAII,EAAIN,EAAG,CACT,IAAIO,EAAI1D,EAAMyD,EAAI,IAClB,OAAU,IAANC,EAAgBL,EAChBK,GAAKP,OAA8B9C,IAApBkC,EAASmB,EAAI,GAAmBJ,EAAGE,OAAO,GAAKjB,EAASmB,EAAI,GAAKJ,EAAGE,OAAO,GACvFH,EAETE,EAAUhB,EAASkB,EAAI,GAE3B,YAAmBpD,IAAZkD,EAAwB,GAAKA,U,qBClI1C,IAAI/E,EAAO,4+6BAEXR,EAAOC,QAAUO,G,qBCFjB,IAAIA,EAAO,infAEXR,EAAOC,QAAUO,G,qBCHjB,IAAIiB,EAAY,EAAQ,QACpBC,EAAyB,EAAQ,QAGjCiE,EAAe,SAAUC,GAC3B,OAAO,SAAUC,EAAOC,GACtB,IAGIC,EAAOC,EAHP7F,EAAImC,OAAOZ,EAAuBmE,IAClCxB,EAAW5C,EAAUqE,GACrBG,EAAO9F,EAAEgE,OAEb,OAAIE,EAAW,GAAKA,GAAY4B,EAAaL,EAAoB,QAAKvD,GACtE0D,EAAQ5F,EAAE+F,WAAW7B,GACd0B,EAAQ,OAAUA,EAAQ,OAAU1B,EAAW,IAAM4B,IACtDD,EAAS7F,EAAE+F,WAAW7B,EAAW,IAAM,OAAU2B,EAAS,MAC1DJ,EAAoBzF,EAAEqF,OAAOnB,GAAY0B,EACzCH,EAAoBzF,EAAE6E,MAAMX,EAAUA,EAAW,GAA+B2B,EAAS,OAAlCD,EAAQ,OAAU,IAA0B,SAI7G/F,EAAOC,QAAU,CAGfkG,OAAQR,GAAa,GAGrBH,OAAQG,GAAa,K,2CCzBvB,IAAIzG,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBE,EAAGL,EAAII,MAAMC,IAAIH,EAAG,OAAOG,EAAG,MAAM,CAAC4G,YAAY,iBAAiB,CAAC5G,EAAG,MAAM,CAAC6G,WAAW,CAAC,CAACC,KAAK,YAAYC,QAAQ,gBAAgBH,YAAY,gBAAgBzG,YAAY,CAAC,cAAc,qBAAqB,aAAa,OAAO,YAAY,QAAQ6G,MAAM,CAAC,GAAK,OAAOC,SAAS,CAAC,UAAYtH,EAAIuH,GAAGvH,EAAIwH,WAC5WjH,EAAkB,GCStB,G,oBAAA,CACE4G,KAAM,sBACNM,KAFF,WAGI,MAAO,CACLC,GAAI,GAGJF,IAAK,GAELG,IAAK,IAGTC,QAAS,CAEPC,OAFJ,SAEA,cAGM,UAAN,gCACQ,EAAR,iBAGM5H,KAAK0H,KAAO,IAGhBG,QAxBF,WAyBI,IAAJ,wBACIC,QAAQC,IAAIvG,GACZxB,KAAK4H,OAAOpG,GAEZxB,KAAKgI,KAAO,EAAhB,kBCvC6V,I,wBCQzVvH,EAAY,eACd,EACAX,EACAQ,GACA,EACA,KACA,WACA,MAIa,aAAAG,E,6CCnBf,W,uBCAAG,EAAOC,QAAU,IAA0B,2B,2CCA3C,IAAIf,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBE,EAAGL,EAAII,MAAMC,IAAIH,EAAG,OAAOG,EAAG,MAAM,CAAC4G,YAAY,iBAAiB,CAAC5G,EAAG,MAAM,CAACG,YAAY,CAAC,MAAQ,cAAc,cAAc,QAAQR,EAAIkI,GAAIlI,EAAQ,MAAE,SAASmE,GAAO,OAAO9D,EAAG,OAAO,CAACsH,IAAIxD,GAAO,CAAC9D,EAAG,UAAU,CAACgH,MAAM,CAAC,GAAKlD,GAAOgE,SAAS,CAAC,MAAQ,SAASC,GAAQ,OAAOpI,EAAIqI,QAAQlE,MAAU,CAACnE,EAAIS,GAAG,IAAIT,EAAIuH,GAAGpD,GAAO,QAAQ,MAAK,MAC/Y5D,EAAkB,GCYtB,G,wCAAA,CACE4G,KAAM,eACNmB,WAAY,GACZb,KAHF,WAII,MAAO,CACLQ,KAAMjG,SAGV4F,QAAS,CACPS,QADJ,SACA,GACMpI,KAAKsI,QAAQ5D,KAAK,UAAxB,GACMoD,QAAQC,IAAI7D,KAGhB2D,QAdF,WAmBI,IAFA,IAAJ,mBACA,KACA,oBACM,IAAN,OACMU,EAAOA,EAAKC,QAAQ,KAA1B,IACMD,EAAOA,EAAKC,QAAQ,MAA1B,IAEM/D,EAAQC,KAAK6D,GAEfvI,KAAKgI,KAAOvD,KCvCsU,I,YCOlVhE,EAAY,eACd,EACAX,EACAQ,GACA,EACA,KACA,WACA,MAIa,aAAAG,E,6CCjBf,IAAI2F,EAAS,EAAQ,QAAiCA,OAItDxF,EAAOC,QAAU,SAAUE,EAAGmE,EAAOX,GACnC,OAAOW,GAASX,EAAU6B,EAAOrF,EAAGmE,GAAOH,OAAS,K,kCCLtD,IAAI0D,EAAc,EAAQ,QACtBC,EAAgB,EAAQ,SAExBC,EAAaC,OAAOC,UAAU7H,KAI9BoC,EAAgBF,OAAO2F,UAAUL,QAEjCM,EAAcH,EAEdI,EAA2B,WAC7B,IAAIC,EAAM,IACNC,EAAM,MAGV,OAFAN,EAAWzH,KAAK8H,EAAK,KACrBL,EAAWzH,KAAK+H,EAAK,KACI,IAAlBD,EAAIxE,WAAqC,IAAlByE,EAAIzE,UALL,GAQ3B0E,EAAgBR,EAAcQ,eAAiBR,EAAcS,aAG7DC,OAAuCnG,IAAvB,OAAOjC,KAAK,IAAI,GAEhCqI,EAAQN,GAA4BK,GAAiBF,EAErDG,IACFP,EAAc,SAAcjD,GAC1B,IACIrB,EAAW8E,EAAQrD,EAAOnB,EAD1ByE,EAAKvJ,KAELwJ,EAASN,GAAiBK,EAAGC,OAC7BC,EAAQhB,EAAYvH,KAAKqI,GACzBG,EAASH,EAAGG,OACZC,EAAa,EACbC,EAAU/D,EA+Cd,OA7CI2D,IACFC,EAAQA,EAAMjB,QAAQ,IAAK,KACC,IAAxBiB,EAAM1F,QAAQ,OAChB0F,GAAS,KAGXG,EAAU1G,OAAO2C,GAAKD,MAAM2D,EAAG/E,WAE3B+E,EAAG/E,UAAY,KAAO+E,EAAGM,WAAaN,EAAGM,WAAuC,OAA1BhE,EAAI0D,EAAG/E,UAAY,MAC3EkF,EAAS,OAASA,EAAS,IAC3BE,EAAU,IAAMA,EAChBD,KAIFL,EAAS,IAAIV,OAAO,OAASc,EAAS,IAAKD,IAGzCL,IACFE,EAAS,IAAIV,OAAO,IAAMc,EAAS,WAAYD,IAE7CV,IAA0BvE,EAAY+E,EAAG/E,WAE7CyB,EAAQ0C,EAAWzH,KAAKsI,EAASF,EAASC,EAAIK,GAE1CJ,EACEvD,GACFA,EAAM6D,MAAQ7D,EAAM6D,MAAMlE,MAAM+D,GAChC1D,EAAM,GAAKA,EAAM,GAAGL,MAAM+D,GAC1B1D,EAAMf,MAAQqE,EAAG/E,UACjB+E,EAAG/E,WAAayB,EAAM,GAAGlB,QACpBwE,EAAG/E,UAAY,EACbuE,GAA4B9C,IACrCsD,EAAG/E,UAAY+E,EAAGlF,OAAS4B,EAAMf,MAAQe,EAAM,GAAGlB,OAASP,GAEzD4E,GAAiBnD,GAASA,EAAMlB,OAAS,GAG3C3B,EAAclC,KAAK+E,EAAM,GAAIqD,GAAQ,WACnC,IAAKxE,EAAI,EAAGA,EAAIiF,UAAUhF,OAAS,EAAGD,SACf7B,IAAjB8G,UAAUjF,KAAkBmB,EAAMnB,QAAK7B,MAK1CgD,IAIXrF,EAAOC,QAAUiI,G,qBCtFjBlI,EAAOC,QAAU,IAA0B,0B,qCCE3C,IAAImJ,EAAQ,EAAQ,QAIpB,SAASC,EAAGC,EAAG5D,GACb,OAAOsC,OAAOsB,EAAG5D,GAGnBzF,EAAQqI,cAAgBc,GAAM,WAE5B,IAAIT,EAAKU,EAAG,IAAK,KAEjB,OADAV,EAAG/E,UAAY,EACW,MAAnB+E,EAAGvI,KAAK,WAGjBH,EAAQsI,aAAea,GAAM,WAE3B,IAAIT,EAAKU,EAAG,KAAM,MAElB,OADAV,EAAG/E,UAAY,EACU,MAAlB+E,EAAGvI,KAAK,W,kCCrBjB,W,yDCCA,IAAImJ,EAAI,EAAQ,QACZnJ,EAAO,EAAQ,QAEnBmJ,EAAE,CAAEC,OAAQ,SAAUC,OAAO,EAAMC,OAAQ,IAAItJ,OAASA,GAAQ,CAC9DA,KAAMA,K,kCCJR,IAAIkB,EAAW,EAAQ,QAIvBtB,EAAOC,QAAU,WACf,IAAI0J,EAAOrI,EAASlC,MAChBiB,EAAS,GAOb,OANIsJ,EAAKlG,SAAQpD,GAAU,KACvBsJ,EAAKC,aAAYvJ,GAAU,KAC3BsJ,EAAKV,YAAW5I,GAAU,KAC1BsJ,EAAKE,SAAQxJ,GAAU,KACvBsJ,EAAKhG,UAAStD,GAAU,KACxBsJ,EAAKf,SAAQvI,GAAU,KACpBA,I,qBCdTL,EAAOC,QAAU,IAA0B,2B,yCCA3C,IAAIf,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBE,EAAGL,EAAII,MAAMC,IAAIH,EAAG,OAAOG,EAAG,MAAM,CAAC4G,YAAY,gBAAgBzG,YAAY,CAAC,cAAc,qBAAqB,aAAa,WAAW,CAACH,EAAG,KAAK,CAACL,EAAIS,GAAGT,EAAIuH,GAAGvH,EAAI2K,GAAG,sBAAsBtK,EAAG,cAAcA,EAAG,MAAM,CAAC4G,YAAY,YAAYI,MAAM,CAAC,GAAK,SAAS,CAAChH,EAAG,KAAK,CAACgH,MAAM,CAAC,GAAK,aAAa,CAACrH,EAAIS,GAAG,cAAcJ,EAAG,IAAI,CAACG,YAAY,CAAC,OAAS,OAAO,CAACR,EAAIS,GAAG,IAAIT,EAAIuH,GAAGvH,EAAI4K,YAAY,OAAOvK,EAAG,MAAMA,EAAG,cAAcL,EAAIM,GAAG,GAAGD,EAAG,KAAK,CAACL,EAAIS,GAAG,eAAeJ,EAAG,IAAI,CAACG,YAAY,CAAC,OAAS,OAAO,CAACR,EAAIS,GAAG,iGAAiGJ,EAAG,cAAcL,EAAIM,GAAG,GAAGD,EAAG,IAAI,CAAC4G,YAAY,kBAAkBzG,YAAY,CAAC,cAAc,qBAAqB,aAAa,WAAW,CAACR,EAAIS,GAAG,mBAAmBT,EAAIuH,GAAGvH,EAAI6K,QAAQC,UAAUzK,EAAG,MAAMA,EAAG,MAAMA,EAAG,MAAM,CAACG,YAAY,CAAC,OAAS,OAAO,MAAQ,QAAQ6G,MAAM,CAAC,IAAM,EAAQ,WAAwBhH,EAAG,IAAI,CAACL,EAAIS,GAAG,cAAcT,EAAIuH,GAAGvH,EAAI6K,QAAQE,WAAW1K,EAAG,cAAcL,EAAIM,GAAG,GAAGN,EAAIM,GAAG,IAAI,GAAGN,EAAIM,GAAG,IAAI,IACtkCC,EAAkB,CAAC,WAAa,IAAIP,EAAIC,KAASC,EAAGF,EAAIG,eAAmBE,EAAGL,EAAII,MAAMC,IAAIH,EAAG,OAAOG,EAAG,KAAK,CAACgH,MAAM,CAAC,GAAK,eAAe,CAAChH,EAAG,IAAI,CAAC4G,YAAY,iBAAiBjH,EAAIS,GAAG,iBAAiB,WAAa,IAAIT,EAAIC,KAASC,EAAGF,EAAIG,eAAmBE,EAAGL,EAAII,MAAMC,IAAIH,EAAG,OAAOG,EAAG,KAAK,CAACgH,MAAM,CAAC,GAAK,YAAY,CAAChH,EAAG,IAAI,CAAC4G,YAAY,oBAAoBjH,EAAIS,GAAG,cAAc,WAAa,IAAIT,EAAIC,KAASC,EAAGF,EAAIG,eAAmBE,EAAGL,EAAII,MAAMC,IAAIH,EAAG,OAAOG,EAAG,KAAK,CAACgH,MAAM,CAAC,GAAK,UAAU,CAAChH,EAAG,IAAI,CAAC4G,YAAY,kBAAkBjH,EAAIS,GAAG,YAAY,WAAa,IAAIT,EAAIC,KAASC,EAAGF,EAAIG,eAAmBE,EAAGL,EAAII,MAAMC,IAAIH,EAAG,OAAOG,EAAG,MAAM,CAACG,YAAY,CAAC,OAAS,MAAM6G,MAAM,CAAC,GAAK,cAAc,CAAChH,EAAG,IAAI,CAACgH,MAAM,CAAC,KAAO,oCAAoC,CAAChH,EAAG,MAAM,CAACG,YAAY,CAAC,MAAQ,KAAK,OAAS,MAAM6G,MAAM,CAAC,IAAM,EAAQ,aAA0BhH,EAAG,IAAI,CAACgH,MAAM,CAAC,KAAO,uBAAuB,CAAChH,EAAG,MAAM,CAACG,YAAY,CAAC,MAAQ,KAAK,OAAS,MAAM6G,MAAM,CAAC,IAAM,EAAQ,aAA4BhH,EAAG,IAAI,CAACgH,MAAM,CAAC,KAAO,6BAA6B,CAAChH,EAAG,MAAM,CAACG,YAAY,CAAC,MAAQ,KAAK,OAAS,MAAM6G,MAAM,CAAC,IAAM,EAAQ,gBAA4B,WAAa,IAAIrH,EAAIC,KAASC,EAAGF,EAAIG,eAAmBE,EAAGL,EAAII,MAAMC,IAAIH,EAAG,OAAOG,EAAG,SAAS,CAAC4G,YAAY,SAASzG,YAAY,CAAC,cAAc,UAAU,CAACH,EAAG,MAAM,CAACL,EAAIS,GAAG,uD,sDC4CjzC,GACE0G,KAAM,OACNM,KAFF,WAGI,MAAO,CACLuD,OAAN,qDACMJ,WAAN,yCACMK,OAAQ,EAAd,QACMJ,QAAS,CACPC,MAAO,yBACPC,OAAQ,eAEVG,KAAM,GACNC,eAAgB,GAChBC,SAAU,GACV1D,GAAN,OC3D8U,I,wBCQ1UhH,EAAY,eACd,EACAX,EACAQ,GACA,EACA,KACA,WACA,MAIa,aAAAG,E,kDCnBf,IAAIX,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAsBH,EAAII,MAAMC,GAAO,OAAOL,EAAIM,GAAG,IACnGC,EAAkB,CAAC,WAAa,IAAIP,EAAIC,KAASC,EAAGF,EAAIG,eAAmBE,EAAGL,EAAII,MAAMC,IAAIH,EAAG,OAAOG,EAAG,MAAM,CAACA,EAAG,KAAK,CAACL,EAAIS,GAAG,uBCMpI,GACA0G,KAAA,eCRqV,I,YCOjVzG,EAAY,eACd,EACAX,EACAQ,GACA,EACA,KACA,WACA,MAIa,aAAAG,E,4BCjBf,IAAIW,EAAO,g+JAEXR,EAAOC,QAAUO,G,qBCHjB,IAAIC,EAAM,CACT,aAAc,OACd,cAAe,OACf,kBAAmB,OACnB,gBAAiB,OACjB,kBAAmB,QAIpB,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAER,KAAO,mBACHQ,EAEP,OAAOP,EAAIE,GAEZD,EAAeQ,KAAO,WACrB,OAAOC,OAAOD,KAAKT,IAEpBC,EAAeU,QAAUP,EACzBb,EAAOC,QAAUS,EACjBA,EAAeE,GAAK,Q,yCC1BpB,IAAI1B,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBE,EAAGL,EAAII,MAAMC,IAAIH,EAAG,OAAOG,EAAG,MAAM,CAACA,EAAG,MAAM,CAAC4G,YAAY,iBAAiB,CAAC5G,EAAG,MAAM,CAACG,YAAY,CAAC,cAAc,KAAK,MAAQ,MAAM,aAAa,OAAO6G,MAAM,CAAC,GAAK,aAAa,CAAChH,EAAG,KAAK,CAACL,EAAIS,GAAG,UAAUJ,EAAG,aAAa,GAAGA,EAAG,KAAK,CAACL,EAAIS,GAAG,WAAWJ,EAAG,aAAa,CAAC4G,YAAY,kBAAkBjH,EAAIM,GAAG,IAAI,MACtXC,EAAkB,CAAC,WAAa,IAAIP,EAAIC,KAASC,EAAGF,EAAIG,eAAmBE,EAAGL,EAAII,MAAMC,IAAIH,EAAG,OAAOG,EAAG,MAAM,CAACG,YAAY,CAAC,cAAc,KAAK,MAAQ,MAAM,aAAa,QAAQ6G,MAAM,CAAC,GAAK,UAAU,CAAChH,EAAG,KAAK,CAACL,EAAIS,GAAG,cAAcJ,EAAG,KAAK,CAACL,EAAIS,GAAG,YAAYJ,EAAG,KAAK,CAACL,EAAIS,GAAG,WAAWJ,EAAG,KAAK,CAACL,EAAIS,GAAG,kBAAkBJ,EAAG,KAAK,CAACL,EAAIS,GAAG,YAAYJ,EAAG,KAAK,CAACL,EAAIS,GAAG,gBCD7W,EAAS,WAAa,IAAIT,EAAIC,KAASC,EAAGF,EAAIG,eAAmBE,EAAGL,EAAII,MAAMC,IAAIH,EAAG,OAAOG,EAAG,MAAM,CAAC4G,YAAY,SAAS,CAAC5G,EAAG,cAAcL,EAAIkI,GAAIlI,EAAc,YAAE,SAASqL,EAASlG,GAAO,OAAO9E,EAAG,mBAAmB,CAACsH,IAAIxC,EAAMkC,MAAM,CAAC,KAAOgE,EAASC,KAAK,KAAOD,EAASE,KAAK,MAAQF,EAASG,MAAM,KAAOH,EAASvE,KAAK,UAAYuE,EAASI,YAAY,CAACzL,EAAIS,GAAG,IAAIT,EAAIuH,GAAG8D,EAASK,SAAS,UAAS,IAAI,IACtZ,EAAkB,GCiBtB,GACEvE,KAAM,WACNM,KAFF,WAGI,MAAO,CACLkE,WAAY,CAAC,CACXD,QAAS,OACTD,UAAW,aACX3E,KAAM,QACNyE,KAAM,UACND,KAAM,gBACd,CACQI,QAAS,OACTD,UAAW,aACXD,MAAO,WACf,CACQE,QAAS,QACTD,UAAW,aACXD,MAAO,YACf,CACQE,QAAS,eACTD,UAAW,aACXD,MAAO,YACf,CACQE,QAAS,OACTD,UAAW,aACXD,MAAO,YACf,CACQE,QAAS,aACTD,UAAW,aACXD,MAAO,YACf,CACQE,QAAS,SACTD,UAAW,aACXD,MAAO,WACf,CACQE,QAAS,UACTD,UAAW,aACXD,MAAO,WACf,CACQE,QAAS,SACTD,UAAW,aACXD,MAAO,WACf,CACQE,QAAS,UACTD,UAAW,aACXD,MAAO,WACf,CACQE,QAAS,SACTD,UAAW,cACXD,MAAO,WAEf,CACQ,QAAR,QACQ,UAAR,aACQ,MAAR,WCxEkV,I,YCO9U9K,EAAY,eACd,EACA,EACA,GACA,EACA,KACA,WACA,MAIa,EAAAA,E,QCMf,G,WAAA,CACE,KAAF,QACE,WAAF,CAAI,SAAJ,KC1B+U,ICQ3U,G,UAAY,eACd,EACAX,EACAQ,GACA,EACA,KACA,WACA,OAIa,e,2CCjBf,EAAQ,QACR,IAAIqL,EAAW,EAAQ,QACnB3B,EAAQ,EAAQ,QAChB4B,EAAkB,EAAQ,QAC1BjL,EAAa,EAAQ,QACrBkL,EAA8B,EAAQ,QAEtCC,EAAUF,EAAgB,WAE1BG,GAAiC/B,GAAM,WAIzC,IAAIT,EAAK,IAMT,OALAA,EAAGvI,KAAO,WACR,IAAIC,EAAS,GAEb,OADAA,EAAOqE,OAAS,CAAE0G,EAAG,KACd/K,GAEyB,MAA3B,GAAGuH,QAAQe,EAAI,WAKpB/F,EAAmB,WACrB,MAAkC,OAA3B,IAAIgF,QAAQ,IAAK,MADH,GAInBrF,EAAUyI,EAAgB,WAE1BrI,EAA+C,WACjD,QAAI,IAAIJ,IAC6B,KAA5B,IAAIA,GAAS,IAAK,MAFsB,GAS/C8I,GAAqCjC,GAAM,WAC7C,IAAIT,EAAK,OACL2C,EAAe3C,EAAGvI,KACtBuI,EAAGvI,KAAO,WAAc,OAAOkL,EAAaxG,MAAM1F,KAAM+J,YACxD,IAAI9I,EAAS,KAAKkL,MAAM5C,GACxB,OAAyB,IAAlBtI,EAAO8D,QAA8B,MAAd9D,EAAO,IAA4B,MAAdA,EAAO,MAG5DL,EAAOC,QAAU,SAAUuL,EAAKrH,EAAQ/D,EAAMqL,GAC5C,IAAIC,EAASV,EAAgBQ,GAEzBG,GAAuBvC,GAAM,WAE/B,IAAIpG,EAAI,GAER,OADAA,EAAE0I,GAAU,WAAc,OAAO,GACZ,GAAd,GAAGF,GAAKxI,MAGb4I,EAAoBD,IAAwBvC,GAAM,WAEpD,IAAIyC,GAAa,EACblD,EAAK,IAkBT,MAhBY,UAAR6C,IAIF7C,EAAK,GAGLA,EAAGmD,YAAc,GACjBnD,EAAGmD,YAAYZ,GAAW,WAAc,OAAOvC,GAC/CA,EAAGE,MAAQ,GACXF,EAAG+C,GAAU,IAAIA,IAGnB/C,EAAGvI,KAAO,WAAiC,OAAnByL,GAAa,EAAa,MAElDlD,EAAG+C,GAAQ,KACHG,KAGV,IACGF,IACAC,GACQ,YAARJ,KACCL,IACAvI,GACCD,IAEM,UAAR6I,IAAoBH,EACrB,CACA,IAAIU,EAAqB,IAAIL,GACzB3E,EAAU3G,EAAKsL,EAAQ,GAAGF,IAAM,SAAUQ,EAAc9I,EAAQ+B,EAAKgH,EAAMC,GAC7E,OAAIhJ,EAAO9C,OAASL,EACd4L,IAAwBO,EAInB,CAAE7I,MAAM,EAAMC,MAAOyI,EAAmBzL,KAAK4C,EAAQ+B,EAAKgH,IAE5D,CAAE5I,MAAM,EAAMC,MAAO0I,EAAa1L,KAAK2E,EAAK/B,EAAQ+I,IAEtD,CAAE5I,MAAM,KACd,CACDT,iBAAkBA,EAClBD,6CAA8CA,IAE5CwJ,EAAepF,EAAQ,GACvBqF,EAAcrF,EAAQ,GAE1BgE,EAASzI,OAAO2F,UAAWuD,EAAKW,GAChCpB,EAAS/C,OAAOC,UAAWyD,EAAkB,GAAVvH,EAG/B,SAAUkI,EAAQC,GAAO,OAAOF,EAAY9L,KAAK+L,EAAQjN,KAAMkN,IAG/D,SAAUD,GAAU,OAAOD,EAAY9L,KAAK+L,EAAQjN,QAItDqM,GAAMR,EAA4BjD,OAAOC,UAAUyD,GAAS,QAAQ,K,qBC3H1E,IAAIjL,EAAM,CACT,aAAc,OACd,cAAe,OACf,kBAAmB,OACnB,gBAAiB,OACjB,kBAAmB,QAGpB,SAAS8L,EAAoB5L,GAC5B,OAAO6L,QAAQpL,UAAUqL,MAAK,WAC7B,IAAI3L,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAER,KAAO,mBACHQ,EAGP,IAAIJ,EAAKH,EAAIE,GACb,OAAOG,EAAoB4L,EAAE9L,EAAI,MAGnC2L,EAAoBrL,KAAO,WAC1B,OAAOC,OAAOD,KAAKT,IAEpB8L,EAAoB3L,GAAK,OACzBZ,EAAOC,QAAUsM,G,qBCxBjB,IAAI9I,EAAS,EAAQ,QACjBkJ,EAAe,EAAQ,QACvBC,EAAuB,EAAQ,QAC/B3B,EAA8B,EAAQ,QACtCD,EAAkB,EAAQ,QAE1B6B,EAAW7B,EAAgB,YAC3B8B,EAAgB9B,EAAgB,eAChC+B,EAAcH,EAAqBI,OAEvC,IAAK,IAAIC,KAAmBN,EAAc,CACxC,IAAIO,EAAazJ,EAAOwJ,GACpBE,EAAsBD,GAAcA,EAAWjF,UACnD,GAAIkF,EAAqB,CAEvB,GAAIA,EAAoBN,KAAcE,EAAa,IACjD9B,EAA4BkC,EAAqBN,EAAUE,GAC3D,MAAOK,GACPD,EAAoBN,GAAYE,EAKlC,GAHKI,EAAoBL,IACvB7B,EAA4BkC,EAAqBL,EAAeG,GAE9DN,EAAaM,GAAkB,IAAK,IAAII,KAAeT,EAEzD,GAAIO,EAAoBE,KAAiBT,EAAqBS,GAAc,IAC1EpC,EAA4BkC,EAAqBE,EAAaT,EAAqBS,IACnF,MAAOD,GACPD,EAAoBE,GAAeT,EAAqBS,O,0CC3BhE,IAAI7M,EAAO,y7EAEXR,EAAOC,QAAUO,G,4CCHjBR,EAAOC,QAAU,IAA0B,6B,mBCE3CD,EAAOC,QAAU,CACfqN,YAAa,EACbC,oBAAqB,EACrBC,aAAc,EACdC,eAAgB,EAChBC,YAAa,EACbC,cAAe,EACfC,aAAc,EACdC,qBAAsB,EACtBC,SAAU,EACVC,kBAAmB,EACnBC,eAAgB,EAChBC,gBAAiB,EACjBC,kBAAmB,EACnBC,UAAW,EACXC,cAAe,EACfC,aAAc,EACdC,SAAU,EACVC,iBAAkB,EAClBC,OAAQ,EACRC,YAAa,EACbC,cAAe,EACfC,cAAe,EACfC,eAAgB,EAChBC,aAAc,EACdC,cAAe,EACfC,iBAAkB,EAClBC,iBAAkB,EAClBC,eAAgB,EAChBC,iBAAkB,EAClBC,cAAe,EACfC,UAAW","file":"js/about.b885ab7b.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"width\":\"100%\",\"height\":\"100%\"}},[_c('h1',[_vm._v(\"项目主页\")])])}]\n\nexport { render, staticRenderFns }","<template>\r\n  <div style=\"width: 100%;height: 100%\">\r\n    <h1>项目主页</h1>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: \"Project\",\r\n    components: {}\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Project.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Project.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Project.vue?vue&type=template&id=0bc460b4&scoped=true&\"\nimport script from \"./Project.vue?vue&type=script&lang=js&\"\nexport * from \"./Project.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0bc460b4\",\n  null\n  \n)\n\nexport default component.exports","var classof = require('./classof-raw');\nvar regexpExec = require('./regexp-exec');\n\n// `RegExpExec` abstract operation\n// https://tc39.github.io/ecma262/#sec-regexpexec\nmodule.exports = function (R, S) {\n  var exec = R.exec;\n  if (typeof exec === 'function') {\n    var result = exec.call(R, S);\n    if (typeof result !== 'object') {\n      throw TypeError('RegExp exec method returned something other than an Object or null');\n    }\n    return result;\n  }\n\n  if (classof(R) !== 'RegExp') {\n    throw TypeError('RegExp#exec called on incompatible receiver');\n  }\n\n  return regexpExec.call(R, S);\n};\n\n","// Module\nvar code = \"<h1 id=\\\"computer\\\">Computer</h1> <h2 id=\\\"windows-10-安装教程\\\">Windows 10 安装教程</h2> <p>🤣🤣🤣🤣</p> <p>工具：至少8GU盘 、 PE制作器（WePe）</p> <p>教程：</p> <p>1、使用ISO模式制作U盘启动器</p> <p>华硕主板 ： ESC 选择进入</p> <p>技嘉主板: F12 进入主板选择</p> <p>2、进主板U盘启动</p> <p>3、选择第二项的win8PE 新机器m</p> <p>4、格式化C盘，选择iOS文件目录 ， 直接安装即可。</p> <p><a href=\\\"https://msdn.itellyou.cn/\\\">https://msdn.itellyou.cn/</a> //原版的Windows镜像下载</p> <h2 id=\\\"windows-service-2003-enterprise\\\">WIndows Service 2003 Enterprise</h2> <p>x64 激活密钥：</p> <p>MR78C-GF2CY-KC864-DTG74-VMT73</p> <h2 id=\\\"windows-xp-密钥\\\">Windows xp 密钥</h2> <p>MRX3F-47B9T-2487J-KWKMF-RPWBY</p> <pre><code></code></pre><h2 id=\\\"百度云高速下载\\\">百度云高速下载</h2> <p>工具：IDM + 油猴脚本 、 速盘 、 百度云管家。等等各种程序</p> <p>chrome安装油猴插件 </p> <p>脚本下载：<a href=\\\"https://tampermonkey.net/scripts.php\\\">https://tampermonkey.net/scripts.php</a></p> <p>百度云插件:<a href=\\\"https://openuserjs.org/scripts/gxvv/EX-%E7%99%BE%E5%BA%A6%E4%BA%91%E7%9B%98\\\">https://openuserjs.org/scripts/gxvv/EX-%E7%99%BE%E5%BA%A6%E4%BA%91%E7%9B%98</a></p> <p>退出网页版的用户账户，复制下载连接</p> <p>在IDM里面下载即可。</p> <p>IDM可配合超线程下载，最高线程数量能达到256个</p> <p>星愿浏览器也可以高速下载，唯一的缺点是下载压缩包会很慢。</p> <h2 id=\\\"访问google及海外网站\\\">访问Google及海外网站</h2> <p>使用VPN系列服务</p> <p>工具推荐：SSR、Hosts</p> <p>可用hosts网址：<a href=\\\"https://github.com/racaljk/hosts/blob/master/hosts\\\">https://github.com/racaljk/hosts/blob/master/hosts</a></p> <p>服务器自己寻找即可</p> <h2 id=\\\"office-2019-安装\\\">Office 2019 安装</h2> <p><a href=\\\"https://www.52pojie.cn/thread-781052-1-1.html\\\">https://www.52pojie.cn/thread-781052-1-1.html</a></p> <p><a href=\\\"https://www.52pojie.cn/thread-719550-1-1.html\\\">https://www.52pojie.cn/thread-719550-1-1.html</a></p> <h2 id=\\\"百度云搜索工具\\\">百度云搜索工具</h2> <p><a href=\\\"http://www.banyungong.org\\\">www.banyungong.org</a></p> <p><a href=\\\"https://www.fastsoso.cn/\\\">https://www.fastsoso.cn/</a></p> <h2 id=\\\"adb常用命令\\\">ADB常用命令</h2> <p>adb -d shell sh /data/data/me.piebridge.brevent/brevent.sh //黑域 adb shell dpm set-device-owner com.hld.apurikakusu/.receiver.DPMReceiver // 黑洞 adb shell dpm set-device-owner com.catchingnow.icebox/.receiver.DPMReceiver //冰箱</p> <p>adb shell wm overscan 0,0,0,0 //显示导航栏 adb shell wm overscan 0,0,0,-160 //隐藏导航栏 adb shell pm list packages -f // 获取安装列表和路径 adb shell pm list packages //获取包名 adb unistall xxx //卸载XX adb root //提权，输入完没提示。 adb shell //进入adb shell模式，类似DOS。 cd data/system //进入“data/system”目录，锁屏密码文件在这个目录里！删掉就没有密码了~ rm password.key //锁屏密码就也被清除了（要是是手势密码就“rm gesture.key ”） am force-stop XXXXX //强行停止XXX mount -o remount -o rw /system //回车，重新挂载下system ps // adb shell 下查看系统进程 kill pid xxx // 查看后强行停止进程，并无法自启 adb pull XXX E:\\\\Test\\\\ttt // 将XX中的包提出到XXX文件下（不能是根目录）</p> <h2 id=\\\"cmd命令\\\">CMD命令</h2> <p>calc 调用计算器</p> <p>dir 当前文件目录</p> <p>tree 树形结构</p> <p>wmic cpu get 查看CPU的具体信息</p> <p>ipconfig/flushdns 刷新IE缓存</p> <p>ping 测试网络是否通畅</p> <p>cd 进入目录</p> <p>cd.. 返回上一层目录</p> <p>ping -t <a href=\\\"http://www.baidu.com\\\">www.baidu.com</a> //ping Baidu n次</p> <h2 id=\\\"putty命令\\\">Putty命令</h2> <p>从本地上传文件</p> <pre><code>pscp -i d:\\\\test.ppk c:\\\\test.txt  user_name@server_ip:/tmp</code></pre><pre><code class=\\\"language-c++\\\">\\npscp -i C:\\\\Users\\\\Alphabet\\\\Desktop\\\\google_privateKey.ppk C:\\\\Users\\\\Alphabet\\\\Documents\\\\HBuilderProjects\\\\Github\\\\index.html  gwangjiyuan@35.236.106.14:/home/gwangjiyuan</code></pre> <p>从服务器下载文件</p> <pre><code>pscp -i d:\\\\test.ppk user_name@server_ip:/var/www/test.txt d:\\\\</code></pre><pre><code>//路由器安装opkg\\nwget http://pkg.entware.net/binaries/mipsel/installer/installer.sh &amp;&amp; chmod +x installer.sh  &amp;&amp; ./installer.sh </code></pre><h1 id=\\\"programming\\\">Programming</h1> <h2 id=\\\"c\\\">c++</h2> <h3 id=\\\"析构函数\\\">析构函数</h3> <pre><code class=\\\"language-c++\\\">class Stock{\\npublic:\\n    ~Stock()                     //定义析构函数\\n    {\\n       std::cout &lt;&lt; &quot;调用了析构函数 &quot; &lt;&lt; std::endl;\\n    }\\n};\\n\\nint main()\\n{\\n   {\\n      Stock stock ;   \\n   }               // 在部分开发环境中可能没有显示内容，把它放在块儿中即可\\n    return 0;   //返回之前调用析构函数;\\n}</code></pre> <h3 id=\\\"构造函数\\\">构造函数</h3> <pre><code class=\\\"language-c++\\\">#include &lt;iostream&gt;\\nusing namespace std;\\nclass A\\n{\\npublic:\\n     A(){cout&lt;&lt;&quot;A::constructor&quot;&lt;&lt;endl;};\\n     ~A(){cout&lt;&lt;&quot;A::deconstructor&quot;&lt;&lt;endl;};\\n};\\nclass B\\n{\\npublic:\\n     B(){cout&lt;&lt;&quot;B::constructor&quot;&lt;&lt;endl;};\\n     ~B(){cout&lt;&lt;&quot;B::deconstructor&quot;&lt;&lt;endl;};\\n};\\nclass C : public A\\n{\\npublic:\\n     C(){cout&lt;&lt;&quot;C::constructor&quot;&lt;&lt;endl;};\\n     ~C(){cout&lt;&lt;&quot;C::deconstructor&quot;&lt;&lt;endl;};\\nprivate:\\n//    static B b;\\n     B b;\\n};\\nclass D : public C\\n{\\npublic:\\n     D(){cout&lt;&lt;&quot;D::constructor&quot;&lt;&lt;endl;};\\n     ~D(){cout&lt;&lt;&quot;D::deconstructor&quot;&lt;&lt;endl;};\\n};\\n\\nint main(void)\\n{\\n    C* pd = new D();\\n    delete pd;\\n    return 0;\\n}\\n/* Output\\n-----&gt;B b\\nA::constructor\\nB::constructor\\nC::constructor\\nD::constructor\\nC::deconstructor\\nB::deconstructor\\nA::deconstructor\\n\\n-----&gt;static B b\\nA::constructor\\nC::constructor\\nD::constructor\\nC::deconstructor\\nA::deconstructor\\n */</code></pre> <h2 id=\\\"android-developer\\\">Android Developer</h2> <h3 id=\\\"背景铺满\\\">背景铺满</h3> <pre><code class=\\\"language-java\\\">        android:layout_width=&quot;0dp&quot;\\n        android:layout_height=&quot;0dp&quot;\\n        android:scaleType=&quot;fitXY&quot;\\n        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;\\n        app:layout_constraintEnd_toEndOf=&quot;parent&quot;\\n        app:layout_constraintHorizontal_bias=&quot;0.0&quot;\\n        app:layout_constraintStart_toStartOf=&quot;parent&quot;\\n        app:layout_constraintTop_toTopOf=&quot;parent&quot;\\n        app:layout_constraintVertical_bias=&quot;0.0&quot;</code></pre> <h3 id=\\\"透明按钮\\\">透明按钮</h3> <pre><code class=\\\"language-java\\\"> app:layout_constraintTop_toTopOf=&quot;parent&quot; //全透明\\n Android:background=&quot;#e0000000&quot;            //全透明\\n android:background=&quot;#00000000&quot;            //半透明</code></pre> <h3 id=\\\"隐藏title\\\">隐藏title</h3> <pre><code class=\\\"language-java\\\">supportRequestWindowFeature(Window.FEATURE_NO_TITLE);\\n\\n</code></pre> <h3 id=\\\"toast-diy\\\">Toast DIY</h3> <pre><code class=\\\"language-java\\\">Toast toast(Avtivity , Text , Toast.LENGTH.SHORT);\\ntoast.setGravity(Gravity.TOP , 0 , 0);    //最上方居中显示；\\ntoast.show();</code></pre> <h1 id=\\\"tool\\\">Tool</h1> <h2 id=\\\"git-命令：\\\">Git 命令：</h2> <pre><code class=\\\"language-c++\\\">//登陆账户和密码：\\ngit config --global user.name &quot;wangjiyuanyo&quot;\\ngit config --global user.email &quot;anonymous.z@yahoo.com&quot;\\n//生成SSH key\\ncd ~\\nssh-keygen -t rsa -C &quot;anonymous.z@yahoo.com&quot;\\n\\n//测试git的连通性\\nssh -T git@github.com\\n\\ngit clone \\n\\ngit status \\n\\ngit push\\n\\ngit pull\\n\\ngit --list\\n\\n//在当前目录新建一个Git代码库\\n\\n$ git init\\n\\n显示当前的Git配置\\n$ git config --list\\n\\n编辑Git配置文件\\n$ git config -e [--global]\\n\\n设置提交代码时的用户信息\\n$ git config [--global] user.name &quot;[name]&quot;\\n$ git config [--global] user.email &quot;[email address]&quot;\\n\\n添加指定文件到暂存区\\n$ git add [file1][file2] ...\\n\\n添加指定目录到暂存区，包括子目录\\n$ git add [dir]\\n\\n添加当前目录的所有文件到暂存区\\n$ git add .\\n\\n对于同一个文件的多处变化，可以实现分次提交\\n$ git add -p\\n\\n删除工作区文件，并且将这次删除放入暂存区\\n$ git rm [file1][file2] ...\\n\\n停止追踪指定文件，但该文件会保留在工作区\\n$ git rm --cached [file]\\n\\n改名文件，并且将这个改名放入暂存区\\n$ git mv [file-original][file-renamed]\\n\\n提交暂存区到仓库区\\n$ git commit -m [message]\\n\\n提交暂存区的指定文件到仓库区\\n$ git commit [file1][file2] ... -m [message]\\n\\n提交工作区自上次commit之后的变化，直接到仓库区\\n$ git commit -a\\n\\n提交时显示所有diff信息\\n$ git commit -v\\n\\n使用一次新的commit，替代上一次提交\\n\\n如果代码没有任何新变化，则用来改写上一次commit的提交信息\\n$ git commit --amend -m [message]\\n\\n重做上一次commit，并包括指定文件的新变化\\n$ git commit --amend [file1][file2] ...\\n\\n 列出所有本地分支\\n$ git branch\\n\\n列出所有远程分支\\n$ git branch -r\\n\\n列出所有本地分支和远程分支\\n$ git branch -a\\n\\n新建一个分支，但依然停留在当前分支\\n$ git branch [branch-name]\\n\\n新建一个分支，并切换到该分支\\n$ git checkout -b [branch]\\n\\n新建一个分支，指向指定commit\\n$ git branch [branch] [commit]\\n\\n新建一个分支，与指定的远程分支建立追踪关系\\n$ git branch --track [branch] [remote-branch]\\n\\n切换到指定分支，并更新工作区\\n$ git checkout [branch-name]\\n\\n切换到上一个分支\\n$ git checkout -\\n\\n 建立追踪关系，在现有分支与指定的远程分支之间\\n$ git branch --set-upstream [branch] [remote-branch]\\n\\n 合并指定分支到当前分支\\n$ git merge [branch]\\n\\n 选择一个commit，合并进当前分支\\n$ git cherry-pick [commit]\\n\\n 删除分支\\n git branch -d [branch-name]\\n\\n 删除远程分支\\n$ git push origin --delete [branch-name]\\n$ git branch -dr [remote/branch]\\n标签\\n\\n 列出所有tag\\n$ git tag\\n\\n 新建一个tag在当前commit\\n$ git tag [tag]\\n\\n 新建一个tag在指定commit\\n$ git tag [tag] [commit]\\n\\n 删除本地tag\\n$ git tag -d [tag]\\n\\n 删除远程tag\\n$ git push origin :refs/tags/[tagName]\\n\\n查看tag信息\\n$ git show [tag]\\n\\n 提交指定tag\\n$ git push [remote] [tag]\\n\\n 提交所有tag\\n$ git push [remote] --tags\\n\\n 新建一个分支，指向某个tag\\n$ git checkout -b [branch] [tag]\\n七、查看信息\\n\\n 显示有变更的文件\\n$ git status\\n\\n显示当前分支的版本历史\\n$ git log\\n\\n 显示commit历史，以及每次commit发生变更的文件\\n$ git log --stat\\n\\n 搜索提交历史，根据关键词\\n$ git log -S [keyword]\\n\\n 显示某个commit之后的所有变动，每个commit占据一行\\n$ git log [tag] HEAD --pretty=format:%s\\n\\n 显示某个commit之后的所有变动，其&quot;提交说明&quot;必须符合搜索条件\\n$ git log [tag] HEAD --grep feature\\n\\n 显示某个文件的版本历史，包括文件改名\\n$ git log --follow [file]\\n$ git whatchanged [file]\\n\\n 显示指定文件相关的每一次diff\\n$ git log -p [file]\\n\\n 显示过去5次提交\\n$ git log -5 --pretty --oneline\\n\\n 显示所有提交过的用户，按提交次数排序\\n$ git shortlog -sn\\n\\n 显示指定文件是什么人在什么时间修改过\\n$ git blame [file]\\n\\n 显示暂存区和工作区的代码差异\\n$ git diff\\n\\n 显示暂存区和上一个commit的差异\\n$ git diff --cached [file]\\n\\n 显示工作区与当前分支最新commit之间的差异\\n$ git diff HEAD\\n\\n 显示两次提交之间的差异\\n$ git diff [first-branch]...[second-branch]\\n\\n 显示今天你写了多少行代码\\n$ git diff --shortstat &quot;@{0 day ago}&quot;\\n\\n 显示某次提交的元数据和内容变化\\n$ git show [commit]\\n\\n 显示某次提交发生变化的文件\\n$ git show --name-only [commit]\\n\\n 显示某次提交时，某个文件的内容\\n$ git show [commit]:[filename]\\n\\n 显示当前分支的最近几次提交\\n$ git reflog\\n\\n 从本地master拉取代码更新当前分支：branch 一般为master\\n$ git rebase [branch]\\n八、远程同步\\n\\n 下载远程仓库的所有变动\\n$ git fetch [remote]\\n\\n 显示所有远程仓库\\n$ git remote -v\\n\\n 显示某个远程仓库的信息\\n$ git remote show [remote]\\n\\n 增加一个新的远程仓库，并命名\\n$ git remote add [shortname] [url]\\n\\n 取回远程仓库的变化，并与本地分支合并\\n$ git pull [remote] [branch]\\n\\n 上传本地指定分支到远程仓库\\n$ git push [remote] [branch]\\n\\n 强行推送当前分支到远程仓库，即使有冲突\\n$ git push [remote] --force\\n\\n 推送所有分支到远程仓库\\n$ git push [remote] --all\\n九、撤销\\n\\n 恢复暂存区的指定文件到工作区\\n$ git checkout [file]\\n\\n 恢复某个commit的指定文件到暂存区和工作区\\n$ git checkout [commit] [file]\\n\\n 恢复暂存区的所有文件到工作区\\n$ git checkout .\\n\\n 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变\\n$ git reset [file]\\n\\n 重置暂存区与工作区，与上一次commit保持一致\\n$ git reset --hard\\n\\n 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变\\n$ git reset [commit]\\n\\n 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致\\n$ git reset --hard [commit]\\n\\n 重置当前HEAD为指定commit，但保持暂存区和工作区不变\\n$ git reset --keep [commit]\\n\\n 新建一个commit，用来撤销指定commit\\n 后者的所有变化都将被前者抵消，并且应用到当前分支\\n$ git revert [commit]\\n\\n 暂时将未提交的变化移除，稍后再移入\\n$ git stash\\n$ git stash pop\\n十、其他\\n\\n 生成一个可供发布的压缩包\\n$ git archive</code></pre> <h2 id=\\\"linux-常用命令\\\">Linux 常用命令</h2> <p>1、cd命令</p> <p>这是一个非常基本，也是大家经常需要使用的命令，它用于切换当前目录，它的参数是要切换到的目录的路径，可以是绝对路径，也可以是相对路径。如：</p> <pre><code>cd /root/Docements # 切换到目录/root/Docements\\n\\ncd ./path          # 切换到当前目录下的path目录中，“.”表示当前目录  \\n\\ncd ../path         # 切换到上层目录中的path目录中，“..”表示上一层目录</code></pre><p>2、ls命令</p> <p>这是一个非常有用的查看文件与目录的命令，list之意，它的参数非常多，下面就列出一些我常用的参数吧，如下：</p> <pre><code>-l ：列出长数据串，包含文件的属性与权限数据等\\n\\n-a ：列出全部的文件，连同隐藏文件（开头为.的文件）一起列出来（常用）\\n\\n-d ：仅列出目录本身，而不是列出目录的文件数据\\n\\n-h ：将文件容量以较易读的方式（GB，kB等）列出来\\n\\n-R ：连同子目录的内容一起列出（递归列出），等于该目录下的所有文件都会显示出来</code></pre><p>注：这些参数也可以组合使用，下面举两个例子：</p> <pre><code>ls -l #以长数据串的形式列出当前目录下的数据文件和目录\\n\\nls -lR #以长数据串的形式列出当前目录下的所有文件</code></pre><p>3、grep命令</p> <p>该命令常用于分析一行的信息，若当中有我们所需要的信息，就将该行显示出来，该命令通常与管道命令一起使用，用于对一些命令的输出进行筛选加工等等，它的简单语法为</p> <pre><code>grep [-acinv] [--color=auto] &#39;查找字符串&#39; filename</code></pre><p>它的常用参数如下：</p> <pre><code>-a ：将binary文件以text文件的方式查找数据\\n\\n-c ：计算找到‘查找字符串’的次数\\n\\n-i ：忽略大小写的区别，即把大小写视为相同\\n\\n-v ：反向选择，即显示出没有‘查找字符串’内容的那一行\\n\\n# 例如：\\n\\n# 取出文件/etc/man.config中包含MANPATH的行，并把找到的关键字加上颜色\\n\\ngrep --color=auto &#39;MANPATH&#39; /etc/man.config\\n\\n# 把ls -l的输出中包含字母file（不区分大小写）的内容输出\\n\\nls -l | grep -i file</code></pre><p>4、find命令</p> <p>find是一个基于查找的功能非常强大的命令，相对而言，它的使用也相对较为复杂，参数也比较多，所以在这里将给把它们分类列出，它的基本语法如下：</p> <pre><code>find [PATH] [option] [action]\\n\\n# 与时间有关的参数：\\n\\n-mtime n : n为数字，意思为在n天之前的“一天内”被更改过的文件；\\n\\n-mtime +n : 列出在n天之前（不含n天本身）被更改过的文件名；\\n\\n-mtime -n : 列出在n天之内（含n天本身）被更改过的文件名；\\n\\n-newer file : 列出比file还要新的文件名\\n\\n# 例如：\\n\\nfind /root -mtime 0 # 在当前目录下查找今天之内有改动的文件\\n\\n# 与用户或用户组名有关的参数：\\n\\n-user name : 列出文件所有者为name的文件\\n\\n-group name : 列出文件所属用户组为name的文件\\n\\n-uid n : 列出文件所有者为用户ID为n的文件\\n\\n-gid n : 列出文件所属用户组为用户组ID为n的文件\\n\\n# 例如：\\n\\nfind /home/ljianhui -user ljianhui # 在目录/home/ljianhui中找出所有者为ljianhui的文件\\n\\n# 与文件权限及名称有关的参数：\\n\\n-name filename ：找出文件名为filename的文件\\n\\n-size [+-]SIZE ：找出比SIZE还要大（+）或小（-）的文件\\n\\n-tpye TYPE ：查找文件的类型为TYPE的文件，TYPE的值主要有：一般文件（f)、设备文件（b、c）、\\n\\n             目录（d）、连接文件（l）、socket（s）、FIFO管道文件（p）；\\n\\n-perm mode ：查找文件权限刚好等于mode的文件，mode用数字表示，如0755；\\n\\n-perm -mode ：查找文件权限必须要全部包括mode权限的文件，mode用数字表示\\n\\n-perm +mode ：查找文件权限包含任一mode的权限的文件，mode用数字表示\\n\\n# 例如：\\n\\nfind / -name passwd # 查找文件名为passwd的文件\\n\\nfind . -perm 0755 # 查找当前目录中文件权限的0755的文件\\n\\nfind . -size +12k # 查找当前目录中大于12KB的文件，注意c表示byte</code></pre><p>5、cp命令</p> <p>该命令用于复制文件，copy之意，它还可以把多个文件一次性地复制到一个目录下，它的常用参数如下：</p> <pre><code>-a ：将文件的特性一起复制\\n\\n-p ：连同文件的属性一起复制，而非使用默认方式，与-a相似，常用于备份\\n\\n-i ：若目标文件已经存在时，在覆盖时会先询问操作的进行\\n\\n-r ：递归持续复制，用于目录的复制行为\\n\\n-u ：目标文件与源文件有差异时才会复制</code></pre><p>例如 ：</p> <pre><code>cp -a file1 file2 #连同文件的所有特性把文件file1复制成文件file2\\n\\ncp file1 file2 file3 dir #把文件file1、file2、file3复制到目录dir中</code></pre><p>6、mv命令</p> <p>该命令用于移动文件、目录或更名，move之意，它的常用参数如下：</p> <pre><code>-f ：force强制的意思，如果目标文件已经存在，不会询问而直接覆盖\\n\\n-i ：若目标文件已经存在，就会询问是否覆盖\\n\\n-u ：若目标文件已经存在，且比目标文件新，才会更新</code></pre><p>注：该命令可以把一个文件或多个文件一次移动一个文件夹中，但是最后一个目标文件一定要是“目录”。</p> <p>例如：</p> <pre><code>mv file1 file2 file3 dir # 把文件file1、file2、file3移动到目录dir中\\n\\nmv file1 file2 # 把文件file1重命名为file2</code></pre><p>7、rm命令</p> <p>该命令用于删除文件或目录，remove之间，它的常用参数如下：</p> <pre><code>-f ：就是force的意思，忽略不存在的文件，不会出现警告消息\\n\\n-i ：互动模式，在删除前会询问用户是否操作\\n\\n-r ：递归删除，最常用于目录删除，它是一个非常危险的参数</code></pre><p>例如：</p> <pre><code>rm -i file # 删除文件file，在删除之前会询问是否进行该操作\\n\\nrm -fr dir # 强制删除目录dir中的所有文件</code></pre><p>8、ps命令</p> <p>该命令用于将某个时间点的进程运行情况选取下来并输出，process之意，它的常用参数如下：</p> <pre><code>-A ：所有的进程均显示出来\\n\\n-a ：不与terminal有关的所有进程\\n\\n-u ：有效用户的相关进程\\n\\n-x ：一般与a参数一起使用，可列出较完整的信息\\n\\n-l ：较长，较详细地将PID的信息列出</code></pre><p>其实我们只要记住ps一般使用的命令参数搭配即可，它们并不多，如下：</p> <pre><code>ps aux # 查看系统所有的进程数据\\n\\nps ax # 查看不与terminal有关的所有进程\\n\\nps -lA # 查看系统所有的进程数据\\n\\nps axjf # 查看连同一部分进程树状态</code></pre><p>9、kill命令</p> <p>该命令用于向某个工作（%jobnumber）或者是某个PID（数字）传送一个信号，它通常与ps和jobs命令一起使用，它的基本语法如下：</p> <pre><code>kill -signal PID</code></pre><p>signal的常用参数如下：</p> <p>注：最前面的数字为信号的代号，使用时可以用代号代替相应的信号。</p> <pre><code>1：SIGHUP，启动被终止的进程\\n\\n2：SIGINT，相当于输入ctrl+c，中断一个程序的进行\\n\\n9：SIGKILL，强制中断一个进程的进行\\n\\n15：SIGTERM，以正常的结束进程方式来终止进程\\n\\n17：SIGSTOP，相当于输入ctrl+z，暂停一个进程的进行</code></pre><p>例如：</p> <pre><code># 以正常的结束进程方式来终于第一个后台工作，可用jobs命令查看后台中的第一个工作进程\\n\\nkill -SIGTERM %1 \\n\\n# 重新改动进程ID为PID的进程，PID可用ps命令通过管道命令加上grep命令进行筛选获得\\n\\nkill -SIGHUP PID</code></pre><p>10、killall命令</p> <p>该命令用于向一个命令启动的进程发送一个信号，它的一般语法如下：</p> <pre><code>killall [-iIe] [command name]</code></pre><p>它的参数如下：</p> <pre><code>-i ：交互式的意思，若需要删除时，会询问用户\\n\\n-e ：表示后面接的command name要一致，但command name不能超过15个字符\\n\\n-I ：命令名称忽略大小写\\n\\n# 例如：\\nkillall -SIGHUP syslogd # 重新启动syslogd</code></pre><p>11、file命令</p> <p>该命令用于判断接在file命令后的文件的基本数据，因为在Linux下文件的类型并不是以后缀为分的，所以这个命令对我们来说就很有用了，它的用法非常简单，基本语法如下：</p> <pre><code>file filename\\n\\n#例如：\\n\\nfile ./test</code></pre><p>12、tar命令</p> <p>该命令用于对文件进行打包，默认情况并不会压缩，如果指定了相应的参数，它还会调用相应的压缩程序（如gzip和bzip等）进行压缩和解压。它的常用参数如下：</p> <pre><code>-c ：新建打包文件\\n\\n-t ：查看打包文件的内容含有哪些文件名\\n\\n-x ：解打包或解压缩的功能，可以搭配-C（大写）指定解压的目录，注意-c,-t,-x不能同时出现在同一条命令中\\n\\n-j ：通过bzip2的支持进行压缩/解压缩\\n\\n-z ：通过gzip的支持进行压缩/解压缩\\n\\n-v ：在压缩/解压缩过程中，将正在处理的文件名显示出来\\n\\n-f filename ：filename为要处理的文件\\n\\n-C dir ：指定压缩/解压缩的目录dir</code></pre><p>上面的解说可以已经让你晕过去了，但是通常我们只需要记住下面三条命令即可：</p> <pre><code>压缩：tar -jcv -f filename.tar.bz2 要被处理的文件或目录名称\\n\\n查询：tar -jtv -f filename.tar.bz2\\n\\n解压：tar -jxv -f filename.tar.bz2 -C 欲解压缩的目录</code></pre><p>注：文件名并不定要以后缀tar.bz2结尾，这里主要是为了说明使用的压缩程序为bzip2</p> <p>13、cat命令</p> <p>该命令用于查看文本文件的内容，后接要查看的文件名，通常可用管道与more和less一起使用，从而可以一页页地查看数据。例如：</p> <pre><code>cat text | less # 查看text文件中的内容\\n\\n# 注：这条命令也可以使用less text来代替</code></pre><p>14、chgrp命令</p> <p>该命令用于改变文件所属用户组，它的使用非常简单，它的基本用法如下：</p> <pre><code>chgrp [-R] dirname/filename\\n\\n-R ：进行递归的持续对所有文件和子目录更改\\n\\n# 例如：\\nchgrp users -R ./dir # 递归地把dir目录下中的所有文件和子目录下所有文件的用户组修改为users</code></pre><p>15、chown命令</p> <p>该命令用于改变文件的所有者，与chgrp命令的使用方法相同，只是修改的文件属性不同，不再详述。</p> <p>16、chmod命令</p> <p>该命令用于改变文件的权限，一般的用法如下：</p> <pre><code>chmod [-R] xyz 文件或目录\\n\\n-R：进行递归的持续更改，即连同子目录下的所有文件都会更改</code></pre><p>同时，chmod还可以使用u（user）、g（group）、o（other）、a（all）和+（加入）、-（删除）、=（设置）跟rwx搭配来对文件的权限进行更改。</p> <pre><code># 例如：\\n\\n\\n\\nchmod 0755 file # 把file的文件权限改变为-rxwr-xr-x\\n\\n\\n\\nchmod g+w file # 向file的文件权限中加入用户组可写权限</code></pre><p>18、vim命令</p> <p>该命令主要用于文本编辑，它接一个或多个文件名作为参数，如果文件存在就打开，如果文件不存在就以该文件名创建一个文件。vim是一个非常好用的文本编辑器，它里面有很多非常好用的命令，在这里不再多说。你可以从这里下载<a href=\\\"http://download.csdn.net/detail/ljianhui/6215287\\\">vim常用操作</a>的详细说明。</p> <p>19、gcc命令</p> <p>对于一个用Linux开发C程序的人来说，这个命令就非常重要了，它用于把C语言的源程序文件，编译成可执行程序，由于g++的很多参数跟它非常相似，所以这里只介绍gcc的参数，它的常用参数如下：</p> <pre><code>-o ：output之意，用于指定生成一个可执行文件的文件名\\n\\n-c ：用于把源文件生成目标文件（.o)，并阻止编译器创建一个完整的程序\\n\\n-I ：增加编译时搜索头文件的路径\\n\\n-L ：增加编译时搜索静态连接库的路径\\n\\n-S ：把源文件生成汇编代码文件\\n\\n-lm：表示标准库的目录中名为libm.a的函数库\\n\\n-lpthread ：连接NPTL实现的线程库\\n\\n-std= ：用于指定把使用的C语言的版本\\n\\n# 例如：\\n\\n# 把源文件test.c按照c99标准编译成可执行程序test\\n\\ngcc -o test test.c -lm -std=c99\\n\\n#把源文件test.c转换为相应的汇编程序源文件test.s\\n\\ngcc -S test.c</code></pre><p>20、time命令</p> <p>该命令用于测算一个命令（即程序）的执行时间。它的使用非常简单，就像平时输入命令一样，不过在命令的前面加入一个time即可，例如：</p> <pre><code>time ./process\\n\\ntime ps aux</code></pre><p>在程序或命令运行结束后，在最后输出了三个时间，它们分别是：</p> <p>user：用户CPU时间，命令执行完成花费的用户CPU时间，即命令在用户态中执行时间总和；</p> <p>system：系统CPU时间，命令执行完成花费的系统CPU时间，即命令在核心态中执行时间总和；</p> <p>real：实际时间，从command命令行开始执行到运行终止的消逝时间；</p> <p>注：用户CPU时间和系统CPU时间之和为CPU时间，即命令占用CPU执行的时间总和。实际时间要大于CPU时间，因为Linux是多任务操作系统，往往在执行一条命令时，系统还要处理其它任务。另一个需要注意的问题是即使每次执行相同命令，但所花费的时间也是不一样，其花费时间是与系统运行相关的。</p> <h1 id=\\\"vps搭建website\\\">VPS搭建website</h1> <p>安装 yum 命令：sudo su apt-get install yum\\\\</p> <h1 id=\\\"computer-network\\\">Computer Network</h1> <h3 id=\\\"三次握手\\\">三次握手</h3> <h3 id=\\\"四次挥手\\\">四次挥手</h3> <h1 id=\\\"os\\\">OS</h1> <h1 id=\\\"mysql-错误\\\">MySQL 错误</h1> <p>Unable to load authentication plugin &#39;caching_sha2_password&#39;.</p> <pre><code class=\\\"language-sql\\\">ALTER USER &#39;student&#39;@&#39;localhost&#39; IDENTIFIED WITH mysql_native_password BY &#39;pass123&#39;;</code></pre> <h1 id=\\\"frp-配置文件\\\">Frp 配置文件</h1> <h2 id=\\\"server-\\\">Server :</h2> <pre><code class=\\\"language-json\\\">[common]\\nbind_port = 7000\\nvhost_http_port =80\\ndashboard_port = 8080\\ndashboard_user = wongjiyuan\\ndashboard_pwd = www.gogole.com\\nprivilege_token = qq794439137</code></pre> <h2 id=\\\"cilent-\\\">Cilent :</h2> <pre><code>[common]\\nserver_addr = 35.229.211.122\\nserver_port = 7000\\nprivilege_token = qq794439137\\nlogin_fail_exit = false\\n\\n[ssh]\\ntype = tcp\\nlocal_ip = 127.0.0.1\\nlocal_port = 22\\n\\nremote_port = 8888\\n\\n[ssh]\\ntype = tcp\\nlocal_ip = 127.0.0.1\\nlocal_port = 22\\nremote_port = 6000\\n\\n[mikutap]\\ntype = http\\nlocal_ip = 192.168.1.1\\nlocal_port = 80\\ncustom_domains = router.wongjiyuan.top\\n\\n[myweb01]\\ntype = http\\nlocal_ip = 192.168.1.2\\nlocal_port = 8080\\ncustom_domains = web.wongjiyuan.top\\nlocations = /\\n\\n[myweb02]\\ntype = http\\nlocal_port = 8080\\ncustom_domains = web.wongjiyuan.top\\nlocations = /hrmapp\\n\\n[ftp21]\\ntype = tcp\\nlocal_ip = 127.0.0.1\\nlocal_port = 21\\nremote_port = 2121\\n</code></pre><h2 id=\\\"frp-自启文件配置\\\">Frp 自启文件配置</h2> <pre><code class=\\\"language-shell\\\">sudo -i\\ncd /lib/systemd/system\\n然后使用nano编辑器新建frpc.service服务文件：\\n\\nnano frpc.service\\n在文件中加入如下代码：\\n[Unit]\\nDescription=frpc\\ndaemonAfter=network.target\\n\\n[Service]\\nUser=root\\nType=simple\\nExecStartPre=/bin/sleep 10\\nExecStart=/usr/local/frp/frpc -c /usr/local/frp/frpc.ini\\n\\n[Install]\\nWantedBy=multi-user.target\\n\\n\\n最后使用systemctl将frpc.service启动，同时设置frpc开机自启：\\nsystemctl start frpc\\nsystemctl enable frpc</code></pre> <h2 id=\\\"网站证书申请\\\">网站证书申请</h2> <pre><code class=\\\"language-bash\\\">apt update &amp;&amp; apt full-upgrade -y\\napt install certbot\\ncertbot certonly --standalone -n --agree-tos --email 794439137@qq.com --preferred-challenges http -d wongjiyuan.top</code></pre> <h1 id=\\\"nginx-部署vue\\\">Nginx 部署VUE</h1> <pre><code>配置文件路径： /etc/nginx/sites-enabled\\n项目部署路径：    /var/www\\n</code></pre><p>Nginx 命令：</p> <pre><code class=\\\"language-bash\\\">nginx                             #打开 nginx\\nnginx -t                           #测试配置文件是否有语法错误\\nnginx -s reopen                    #重启Nginx\\nnginx -s reload                      #重新加载Nginx配置文件，然后以优雅的方式重启Nginx\\nnginx -s stop                          #强制停止Nginx服务\\nnginx -s quit                          #优雅地停止Nginx服务（即处理完所有请求后再停止服务）原文出处链接及本声明。</code></pre> \";\n// Exports\nmodule.exports = code;","var map = {\n\t\"./MySql.md\": \"cbfa\",\n\t\"./Spring.md\": \"5cd4\",\n\t\"./SpringBoot.md\": \"550d\",\n\t\"./computer.md\": \"ef4c\",\n\t\"./technology.md\": \"1a30\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"232a\";","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=style&index=0&id=c23ce2da&scoped=true&lang=css&\"","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\nvar max = Math.max;\nvar min = Math.min;\nvar floor = Math.floor;\nvar SUBSTITUTION_SYMBOLS = /\\$([$&'`]|\\d\\d?|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&'`]|\\d\\d?)/g;\n\nvar maybeToString = function (it) {\n  return it === undefined ? it : String(it);\n};\n\n// @@replace logic\nfixRegExpWellKnownSymbolLogic('replace', 2, function (REPLACE, nativeReplace, maybeCallNative, reason) {\n  var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = reason.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE;\n  var REPLACE_KEEPS_$0 = reason.REPLACE_KEEPS_$0;\n  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';\n\n  return [\n    // `String.prototype.replace` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.replace\n    function replace(searchValue, replaceValue) {\n      var O = requireObjectCoercible(this);\n      var replacer = searchValue == undefined ? undefined : searchValue[REPLACE];\n      return replacer !== undefined\n        ? replacer.call(searchValue, O, replaceValue)\n        : nativeReplace.call(String(O), searchValue, replaceValue);\n    },\n    // `RegExp.prototype[@@replace]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace\n    function (regexp, replaceValue) {\n      if (\n        (!REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE && REPLACE_KEEPS_$0) ||\n        (typeof replaceValue === 'string' && replaceValue.indexOf(UNSAFE_SUBSTITUTE) === -1)\n      ) {\n        var res = maybeCallNative(nativeReplace, regexp, this, replaceValue);\n        if (res.done) return res.value;\n      }\n\n      var rx = anObject(regexp);\n      var S = String(this);\n\n      var functionalReplace = typeof replaceValue === 'function';\n      if (!functionalReplace) replaceValue = String(replaceValue);\n\n      var global = rx.global;\n      if (global) {\n        var fullUnicode = rx.unicode;\n        rx.lastIndex = 0;\n      }\n      var results = [];\n      while (true) {\n        var result = regExpExec(rx, S);\n        if (result === null) break;\n\n        results.push(result);\n        if (!global) break;\n\n        var matchStr = String(result[0]);\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n      }\n\n      var accumulatedResult = '';\n      var nextSourcePosition = 0;\n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n\n        var matched = String(result[0]);\n        var position = max(min(toInteger(result.index), S.length), 0);\n        var captures = [];\n        // NOTE: This is equivalent to\n        //   captures = result.slice(1).map(maybeToString)\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\n        var namedCaptures = result.groups;\n        if (functionalReplace) {\n          var replacerArgs = [matched].concat(captures, position, S);\n          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n          var replacement = String(replaceValue.apply(undefined, replacerArgs));\n        } else {\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n        }\n        if (position >= nextSourcePosition) {\n          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n          nextSourcePosition = position + matched.length;\n        }\n      }\n      return accumulatedResult + S.slice(nextSourcePosition);\n    }\n  ];\n\n  // https://tc39.github.io/ecma262/#sec-getsubstitution\n  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {\n    var tailPos = position + matched.length;\n    var m = captures.length;\n    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n    if (namedCaptures !== undefined) {\n      namedCaptures = toObject(namedCaptures);\n      symbols = SUBSTITUTION_SYMBOLS;\n    }\n    return nativeReplace.call(replacement, symbols, function (match, ch) {\n      var capture;\n      switch (ch.charAt(0)) {\n        case '$': return '$';\n        case '&': return matched;\n        case '`': return str.slice(0, position);\n        case \"'\": return str.slice(tailPos);\n        case '<':\n          capture = namedCaptures[ch.slice(1, -1)];\n          break;\n        default: // \\d\\d?\n          var n = +ch;\n          if (n === 0) return match;\n          if (n > m) {\n            var f = floor(n / 10);\n            if (f === 0) return match;\n            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\n            return match;\n          }\n          capture = captures[n - 1];\n      }\n      return capture === undefined ? '' : capture;\n    });\n  }\n});\n","// Module\nvar code = \"<h1 id=\\\"spring-boot入门\\\">Spring Boot入门</h1> <h2 id=\\\"1springboot简介\\\">1.SpringBoot简介</h2> <blockquote> <p>简化SPring开发的一个框架；</p> <p>整合Spring技术栈的一个大集合</p> <p>J2EE开发的一站式解决方案</p> </blockquote> <h2 id=\\\"微服务\\\">微服务</h2> <p>微服务是一种架构风格</p> <p>一个应用应该是一组小型服务：可以通过HTTP的方式进行互通</p> <p>每一个功能元素最终都是一个可独立替换和升级的软件单元</p> <p><a href=\\\"https://www.martinfowler.com/articles/microservices.html\\\">微服务文档</a></p> <h1 id=\\\"spring-boot-helloworld\\\">Spring Boot HelloWorld</h1> <p>1.创建Maven 工程</p> <p>2.导入相关依赖</p> <pre><code class=\\\"language-xml\\\">&lt;parent&gt;\\n        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\\n        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;\\n        &lt;version&gt;1.5.2.RELEASE&lt;/version&gt;\\n    &lt;/parent&gt;\\n    &lt;dependencies&gt;\\n        &lt;dependency&gt;\\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\\n            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\\n        &lt;/dependency&gt;\\n    &lt;/dependencies&gt;</code></pre> <p>3.主程序启动SpringBoot</p> <pre><code class=\\\"language-Java\\\">@SpringBootApplication\\npublic class HelloWorldMainApplication {\\n    public static void main(String[] args) {\\n        //启动\\n        SpringApplication.run(HelloWorldMainApplication.class,args);\\n    }\\n}</code></pre> <p>4编写相关的Controller、、、</p> <pre><code class=\\\"language-Java\\\">@Controller\\npublic class HelloController {\\n\\n    @ResponseBody\\n    @RequestMapping(&quot;/hello&quot;)\\n    public String hello(){\\n        return &quot;Hello World&quot;;\\n    }\\n}</code></pre> <p>5.运行主程序测试</p> <p>6.简化部署</p> <pre><code class=\\\"language-xml\\\">    &lt;build&gt;\\n        &lt;plugins&gt;\\n            &lt;plugin&gt;\\n                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\\n                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;\\n            &lt;/plugin&gt;\\n        &lt;/plugins&gt;\\n    &lt;/build&gt;</code></pre> <p>将这个应用打包成Jar包，直接使用-java -jar运行</p> <h1 id=\\\"springboot配置文件\\\">SpringBoot配置文件</h1> <p>​ SpringBoot使用一个全局配置文件</p> <p>​ application.properties</p> <p>​ application.yml</p> <p>作用：修改Spring Boot的默认值；</p> <p>YAML：一个标记语言</p> <p>标记语言：以前大多数配置文件都是 xxx.xml文件</p> <p>以数据为中心，比Json\\\\xml等更适合做配置文件</p> <h3 id=\\\"1三种配置方式\\\">1.三种配置方式</h3> <p>xml配置方式：</p> <pre><code class=\\\"language-xml\\\">&lt;server&gt;\\n    &lt;port&gt;8081&lt;/port&gt;\\n&lt;/server&gt;</code></pre> <p>application.properties配置方式</p> <pre><code class=\\\"language-properties\\\">server.port=8081</code></pre> <p>application.yml配置方式</p> <pre><code class=\\\"language-yaml\\\">server:\\n  port: 8081</code></pre> <h3 id=\\\"2yaml语法\\\">2.YAML语法</h3> <h4 id=\\\"1基本语法：\\\">1.基本语法：</h4> <p>K: v：表示一对键值对(必须有空格)</p> <p>以<strong>空格</strong>的缩进来控制层级的关系；只要左对齐的一列数据，都是同一个层级的</p> <pre><code class=\\\"language-yml\\\">server:\\n  port:8080\\n  path:/hello</code></pre> <p>属性和值大小写敏感</p> <h4 id=\\\"2值的写法字面量\\\">2.值的写法字面量</h4> <p><strong>（数字，字符串，布尔）</strong></p> <p>​ K:v：字面直接来写</p> <p>​ 字符串默认不加单引号或双引号</p> <p>​ &quot;&quot;：双引号会转义字符串里面的特殊字符</p> <p>​ name:&quot;zhangsan \\\\n lisi&quot; 输出：zhangsan 换行 lisi</p> <p>​ &#39;&#39;：单引号不会转义特殊字符</p> <p>​ name:&quot;zhangsan \\\\n lisi&quot; 输出：zhangsan \\\\n lisi</p> <p><strong>对象，Map（属性和值）（键值对）</strong></p> <p>​ 对象还是k:v的值</p> <pre><code class=\\\"language-yaml\\\">friends:\\n    lastname:zhangsan\\n    age:20</code></pre> <p>行内写法</p> <pre><code>friends:{lastName:zhangsan,age:20}</code></pre><p><strong>数组（List Set）</strong></p> <p>用值表示数组中的一个元素</p> <pre><code class=\\\"language-yaml\\\">pets:\\n- cat\\n- dog\\n- pig</code></pre> <p>行内写法</p> <pre><code class=\\\"language-yaml\\\">pets:[cat,dog,pig]</code></pre> <h4 id=\\\"3配置文件注入\\\">3.配置文件注入</h4> <p>配置文件：</p> <pre><code class=\\\"language-yaml\\\">server:\\n  port: 8081\\n\\nperson:\\n   lastName: zhangsan\\n   age: 18\\n   boss: false\\n   birth: 2017/12/12\\n   maps: {k1: v1,k2: v2}\\n   lists:\\n     - lisi\\n     - zhaoliu\\n   dog:\\n     name: 小狗\\n     age: 2</code></pre> <p>JavaBean:</p> <pre><code class=\\\"language-java\\\">@Component\\n@ConfigurationProperties(prefix = &quot;person&quot;)\\npublic class Person {\\n\\n     /**\\n      * @description: 把每一个属性的值映射到组件中\\n      */\\n    private String lastName;\\n    private Integer age;\\n    private Boolean boss;\\n    private Date birth;\\n\\n    private Map&lt;String ,Object &gt; maps;\\n    private List&lt;Object&gt;lists;\\n    private Dog dog;\\n</code></pre> <p>我们可以导入配置文件处理器。以后编写配置文件就有提示了</p> <pre><code class=\\\"language-xml\\\">&lt;dependency&gt;\\n    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\\n    &lt;artifactId&gt;spring-boot-configuration-processor&lt;/artifactId&gt;\\n    &lt;optional&gt;true&lt;/optional&gt;\\n&lt;/dependency&gt;</code></pre> <h4 id=\\\"两种注解的比较\\\">两种注解的比较</h4> <p><img src=\\\"C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200816000153150.png\\\" alt=\\\"image-20200816000153150\\\"></p> <h1 id=\\\"propertysourceimportresource\\\">@PropertySource&amp;@ImportResource</h1> <p>@PropertySource：加载指定的配置文件</p> <p><img src=\\\"C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200816225818485.png\\\" alt=\\\"image-20200816225818485\\\"></p> <p>@ImportResource：导入Spring的配置文件，让配置文件内的内容生效</p> <p>SpringBoot里面没有Spring的配置文件。我们自己写的配置文件，也不能自动识别</p> <p>想让Spring的配置文件生效，加载进来；<strong>@ImportResource</strong>标注在一个<strong>配置类</strong>上</p> <p><img src=\\\"C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200816230827053.png\\\" alt=\\\"image-20200816230827053\\\"></p> <p><img src=\\\"C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200816230924331.png\\\" alt=\\\"image-20200816230924331\\\"></p> <p>SptringBoot推荐给容器中添加组建的方式：推荐使用全注解方式</p> <p>1.配置类====Spring配置文件</p> <p>2.使用@Bean给容器添加组件</p> <p><img src=\\\"C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200816231834694.png\\\" alt=\\\"image-20200816231834694\\\"></p> <h1 id=\\\"配置文件占位符\\\">配置文件占位符</h1> <h2 id=\\\"1、随机数\\\">1、随机数</h2> <p><img src=\\\"C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200817113435140.png\\\" alt=\\\"image-20200817113435140\\\"></p> <h2 id=\\\"2占位符获取之前配置的值，如果没有可以设置默认值\\\">2.占位符获取之前配置的值，如果没有可以设置默认值</h2> <p><img src=\\\"C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200817113548183.png\\\" alt=\\\"image-20200817113548183\\\"></p> <h1 id=\\\"profile\\\">Profile</h1> <h2 id=\\\"1多profile文件\\\">1.多Profile文件</h2> <p>我们在配置文件编写的时候，文件名可以是<strong>application-{profile}.properties/yml</strong></p> <p>默认使用application.properties</p> <p><img src=\\\"C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200817114905310.png\\\" alt=\\\"image-20200817114905310\\\"></p> <h2 id=\\\"2yml支持多文档块方式\\\">2.yml支持多文档块方式</h2> <p><img src=\\\"C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200817115454532.png\\\" alt=\\\"image-20200817115454532\\\"></p> <h2 id=\\\"3激活指定profile\\\">3.激活指定Profile</h2> <p><img src=\\\"C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200817114925425.png\\\" alt=\\\"image-20200817114925425\\\"></p> <p>1.在配置文件中指定 spring.profiles.cative=dev</p> <p>2.命令行:</p> <p>​ <strong>--spring.profiles.active=dev</strong></p> <p>打包后的命令行</p> <p><strong>java -jar spring-boot-02-config-0.0.1-SNAPSHOT.jar --spring.profiles.active=prod</strong></p> <p>可以直接在测试时，传入命令行参数</p> <p><img src=\\\"C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200817115817429.png\\\" alt=\\\"image-20200817115817429\\\"></p> <p><img src=\\\"C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200817120220370.png\\\" alt=\\\"image-20200817120220370\\\"></p> <p>3.虚拟机参数</p> <p><strong>-Dspring.profiles.active=dev</strong></p> <p><img src=\\\"C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200817120505331.png\\\" alt=\\\"image-20200817120505331\\\"></p> <h1 id=\\\"配置文件加载位置（优先级）\\\">配置文件加载位置（优先级）</h1> <p><img src=\\\"C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200817171214218.png\\\" alt=\\\"image-20200817171214218\\\"></p> <p><img src=\\\"C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200818175136302.png\\\" alt=\\\"image-20200818175136302\\\"></p> <p>优先级由高到低，高优先级配置会覆盖低优先级的配置；</p> <p>SpringBoot会从这四个位置全部加载主配置文件：<strong>互补配置</strong></p> <p><img src=\\\"C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200817171943050.png\\\" alt=\\\"image-20200817171943050\\\"></p> <p><img src=\\\"C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200817172015097.png\\\" alt=\\\"image-20200817172015097\\\">、</p> <p>==我们还可以通过spring.config.location来改变默认的配置文件位置==</p> <p>项目打包后，可以使用命令行参数的形式，启动项目的时候来指定配置文件的新位置；指定配置文件和默认加载的这些配置文件共同起作用形成互补配置</p> <p><img src=\\\"C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200817172748534.png\\\" alt=\\\"image-20200817172748534\\\"></p> <h1 id=\\\"自动配置原理\\\">自动配置原理</h1> <p><strong>自动配置原理</strong></p> <p>1）SpringBoot启动的时候加载主配置类，开启了自动配置功能<strong>@EnableAutoConfiguration</strong></p> <p>2)@EnableAutoConfiguration作用：</p> <p>​ 利用EnableAutoConfigurationImportSelector给容器中导入一些组件？</p> <p>​ 可以插件selectImports()的内容 获取候选的配置</p> <pre><code class=\\\"language-java\\\"> List&lt;String&gt; configurations = SpringFactoriesLoader.loadFactoryNames(this.getSpringFactoriesLoaderFactoryClass(), this.getBeanClassLoader());</code></pre> <p>将类路径下META/INF/spring.factories里面所用EnableAutoConfigration的值加入到容器中</p> <pre><code class=\\\"language-properties\\\"># Auto Configure\\norg.springframework.boot.autoconfigure.EnableAutoConfiguration=\\\\\\norg.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.aop.AopAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.batch.BatchAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.cache.CacheAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.cassandra.CassandraAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.couchbase.CouchbaseAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.data.cassandra.CassandraDataAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.data.cassandra.CassandraReactiveDataAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.data.cassandra.CassandraReactiveRepositoriesAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.data.cassandra.CassandraRepositoriesAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.data.couchbase.CouchbaseDataAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.data.couchbase.CouchbaseReactiveDataAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.data.couchbase.CouchbaseReactiveRepositoriesAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.data.couchbase.CouchbaseRepositoriesAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchDataAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchRepositoriesAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.data.elasticsearch.ReactiveElasticsearchRepositoriesAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.data.elasticsearch.ReactiveElasticsearchRestClientAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.data.jdbc.JdbcRepositoriesAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.data.ldap.LdapRepositoriesAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.data.mongo.MongoReactiveDataAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.data.mongo.MongoReactiveRepositoriesAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.data.mongo.MongoRepositoriesAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.data.neo4j.Neo4jRepositoriesAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.data.solr.SolrRepositoriesAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.data.r2dbc.R2dbcDataAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.data.r2dbc.R2dbcRepositoriesAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.data.r2dbc.R2dbcTransactionManagerAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.data.redis.RedisReactiveAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.data.rest.RepositoryRestMvcAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.elasticsearch.ElasticsearchRestClientAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.gson.GsonAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.hazelcast.HazelcastAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.hazelcast.HazelcastJpaDependencyAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.influx.InfluxDbAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.jdbc.JndiDataSourceAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.jdbc.XADataSourceAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.jms.JmsAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.jms.JndiConnectionFactoryAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.jms.activemq.ActiveMQAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.jersey.JerseyAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.jooq.JooqAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.ldap.embedded.EmbeddedLdapAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.ldap.LdapAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.mail.MailSenderAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.mail.MailSenderValidatorAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongoAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.mongo.MongoReactiveAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.quartz.QuartzAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.r2dbc.R2dbcAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.rsocket.RSocketMessagingAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.rsocket.RSocketRequesterAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.rsocket.RSocketServerAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.rsocket.RSocketStrategiesAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.security.reactive.ReactiveSecurityAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.security.rsocket.RSocketSecurityAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.security.saml2.Saml2RelyingPartyAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.sendgrid.SendGridAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.session.SessionAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.security.oauth2.client.reactive.ReactiveOAuth2ClientAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.solr.SolrAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.web.reactive.error.ErrorWebFluxAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.websocket.reactive.WebSocketReactiveAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.websocket.servlet.WebSocketMessagingAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.webservices.WebServicesAutoConfiguration,\\\\\\norg.springframework.boot.autoconfigure.webservices.client.WebServiceTemplateAutoConfiguration</code></pre> <p>3)每一个这样的类：xxxAutoConfigration类都是容器中的一个组件；都加入到容器中；用他们来做自动配置</p> <p>4)以<strong>HttpEncodingAutoConfiguration</strong>为例解释自动配置原理</p> <pre><code class=\\\"language-java\\\">@Configuration(\\n    proxyBeanMethods = false\\n)   //表示这是一个配置类，和配置文件一样，向容器中添加组件\\n@EnableConfigurationProperties({ServerProperties.class}) //启动指定的ConfigurationProperties功能；将配置文件中对应的值和HttpEncodingProperties绑定起来；并把HttpEncodingProperties加入到IOC容器中\\n@ConditionalOnWebApplication(  //Spring底层@Conditional注解，根据不同的条件，如果满足指定的条件，整个配置类里面的配置就会生效；  判断当前应用是否是web应用，如果是当前配置类生效。\\n    type = Type.SERVLET\\n)\\n@ConditionalOnClass({CharacterEncodingFilter.class}) //判断当前项目是否存在这个类CharacterEncodingFilter；SpringMVC中进行乱码解决的过滤器\\n\\n@ConditionalOnProperty( //判断配置文件中是否存在某个配置server.servlet.encoding.enable;如果不存在也为true；\\n    //即使不配置为true也默认为生效\\n    prefix = &quot;server.servlet.encoding&quot;,\\n    value = {&quot;enabled&quot;},\\n    matchIfMissing = true\\n)\\n\\n\\npublic class HttpEncodingAutoConfiguration {\\n\\n    //他已经和springBoot的配置文件映射\\n    private final Encoding properties;\\n    //只有一个油藏构造器的情况下，参数的值从容器中拿\\n    public HttpEncodingAutoConfiguration(ServerProperties properties) {\\n        this.properties = properties.getServlet().getEncoding();\\n    }\\n\\n\\n    @Bean //给容器中添加一个组件；这个组件的某些值需要从properties中获取\\n    @ConditionalOnMissingBean\\n    public CharacterEncodingFilter characterEncodingFilter() {\\n        CharacterEncodingFilter filter = new OrderedCharacterEncodingFilter();\\n        filter.setEncoding(this.properties.getCharset().name());\\n        filter.setForceRequestEncoding(this.properties.shouldForce(org.springframework.boot.web.servlet.server.Encoding.Type.REQUEST));\\n        filter.setForceResponseEncoding(this.properties.shouldForce(org.springframework.boot.web.servlet.server.Encoding.Type.RESPONSE));\\n        return filter;\\n    }\\n}\\n</code></pre> <p>根据当前不同的条件判断，决定这个配置类是否生效</p> <p>一旦这个配置类生效；这个配置类就会给容器中添加各种组件；这些组件的属性是从对应的properties类中获取的，这些类里面的每一个属性又是和配置文件绑定的；</p> <p>5）所有配置文件中能配置的属性都是在xxxProperties类中的封装者；配置文件将能配置什么就可以参照某个功能对应的这个属性类</p> <pre><code class=\\\"language-java\\\">@ConfigurationProperties(   //从配置文件中获取指定的值和Bean的属性进行绑定\\n    prefix = &quot;server&quot;,\\n    ignoreUnknownFields = true\\n)</code></pre> <p><strong>精髓：</strong></p> <p>​ <strong>1）SpringBoot启动会加载大量的自动配置类</strong></p> <p>​ <strong>2）我们看我们需要的功能有没有SpringBoot默认写好的自动配置类</strong></p> <p>​ <strong>3）我们在看这个自动配置类中到底配置了那些组件（只要我们要用到的组件有，我们就不需要再来配置类）</strong></p> <p>​ <strong>4）给容器中自动配置类添加组件的时候，会从Properties类中获取某些属性。我们就可以在配置文件中指定这些属性</strong></p> <p>xxxAutoConfigurartion：自动配置类</p> <p>给容器中添加组件</p> <p>xxxProperties：封装配置文件中相关属性；</p> <h2 id=\\\"细节：\\\"><strong>细节</strong>：</h2> <p>@Conditional：条件为true则像容器中添加组件，配置里面的所有内容才生效</p> <p><img src=\\\"C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200818190716900.png\\\" alt=\\\"image-20200818190716900\\\"></p> <p><strong>自动配置类必须在一定条件下才能生效</strong></p> <p>我们怎么知道那些自动配置类生效</p> <p>启动Debug=ture属性让控制台打印报告，我们就可以很方便的知道那些配置类生效</p> <p><img src=\\\"C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200818191548079.png\\\" alt=\\\"image-20200818191548079\\\"></p> <h1 id=\\\"spring-boot与日志\\\">Spring Boot与日志</h1> <h1 id=\\\"日志\\\">日志</h1> <h2 id=\\\"1日志框架\\\">1.日志框架</h2> <p>底层是SpringBoot；底层是Spring框架，Spring框架默认用的是JCL</p> <p> <strong>SpringBoot选用SLF4和logback</strong></p> <h2 id=\\\"2slfj的使用\\\">2.SLFj的使用</h2> <h3 id=\\\"1如何在系统中使用slf4j\\\">1.如何在系统中使用SLF4j</h3> <p>开发的时候，日志记录方法的调用，不应该来直接俄调用日志的实现类，而是调用日志抽象层的方法：</p> <p>给系统里面导入slf4j的Jar和logback的实现Jar </p> <pre><code class=\\\"language-java\\\">import org.slf4j.Logger;\\nimport org.slf4j.LoggerFactory;\\n\\npublic class HelloWorld {\\n  public static void main(String[] args) {\\n    Logger logger = LoggerFactory.getLogger(HelloWorld.class);\\n    logger.info(&quot;Hello World&quot;);\\n  }</code></pre> <p><img src=\\\"C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200819230535396.png\\\" alt=\\\"image-20200819230535396\\\"></p> <p>每一个日志的实现框架都有自己的配置文件，使用slf4j以后<strong>，配置文件还是做成日志实现框架自己本身的配置文件</strong></p> <h3 id=\\\"2依赖框架\\\">2.依赖框架</h3> <p>a（slf4j+logback）：Spring（commons-logging）Hibernate(jboss-logging) </p> <p>统一日志记录，即使是别的框架和我一起统一使用slf4j进行输出</p> <p><img src=\\\"C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200819231517927.png\\\" alt=\\\"image-20200819231517927\\\"></p> <p><strong>==如何让系统中所有的日志统一到dslf4j？</strong>==</p> <ol> <li>==将系统中其他日志框架先排除出去：==</li> <li>==用中间包来替换原有的日志框架；==</li> <li>==导入slf4j其他的实现==</li> </ol> <h2 id=\\\"3spring-boot日志关系\\\">3.Spring Boot日志关系</h2> <pre><code class=\\\"language-xml\\\">    &lt;dependencies&gt;\\n        &lt;dependency&gt;\\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\\n            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\\n        &lt;/dependency&gt;</code></pre> <p>​ SpringBoot使用它来</p> <pre><code class=\\\"language-xml\\\">    &lt;dependency&gt;\\n      &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\\n      &lt;artifactId&gt;spring-boot-starter-logging&lt;/artifactId&gt;\\n      &lt;version&gt;2.3.3.RELEASE&lt;/version&gt;\\n      &lt;scope&gt;compile&lt;/scope&gt;\\n    &lt;/dependency&gt;</code></pre> <p><img src=\\\"C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200819232853247.png\\\" alt=\\\"image-20200819232853247\\\"></p> <p>总结：</p> <p>1）SB底层也是使用slf4j+logback的记录方式进行日志记录</p> <p>2) SB也把其他的日志都替换成了slf4j</p> <p>3) 中间替换包</p> <p>4）如果要引入其他框架，一定要把这个框架的默认依赖移除掉</p> <p>​ SP使用的是commons-logging</p> <p>SP能自动适配所有的日志，而且底层使用slf4j_logback的方式记录日志，引入其他框架的时候自动排出</p> <h2 id=\\\"4日志使用；\\\">4.日志使用；</h2> <h3 id=\\\"1默认配置\\\">1.默认配置</h3> <p>​ SP默认配置好了日志；</p> <p><img src=\\\"C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200819235036010.png\\\" alt=\\\"image-20200819235036010\\\"></p> <p><img src=\\\"C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200819235053431.png\\\" alt=\\\"image-20200819235053431\\\"></p> <h4 id=\\\"loggingfilename\\\">Logging.file.name</h4> <p><img src=\\\"C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200819235804460.png\\\" alt=\\\"image-20200819235804460\\\"></p> <h4 id=\\\"loggingfilepath\\\">Logging.file.path</h4> <p><img src=\\\"C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200819235712590.png\\\" alt=\\\"image-20200819235712590\\\"></p> <h4 id=\\\"loggingpatternfile---loggingpatternconsole\\\">Logging.pattern.file &amp; Logging.pattern.console</h4> <p><img src=\\\"C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200820000418187.png\\\" alt=\\\"image-20200820000418187\\\"></p> <h1 id=\\\"四、web开发\\\">四、Web开发</h1> <p>使用SB开发</p> <p>1）创建项目应用选中所需要的组件</p> <p>2）SB默认配置好场景，只需要在配置文件中指定少量配置就可以运行起来</p> <p>3）自己编写业务代码</p> <p>自动配置原理：</p> <h1 id=\\\"五、整合数据库\\\">五、整合数据库</h1> <h2 id=\\\"1整合druid\\\">1.整合Druid</h2> <p><img src=\\\"C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201004002500755.png\\\" alt=\\\"image-20201004002500755\\\"></p> <pre><code class=\\\"language-yaml\\\">spring:\\n  datasource:\\n    username: root\\n    password: root\\n    url: jdbc:mysql://localhost:3306/plant\\n    driver-class-name: com.mysql.cj.jdbc.Driver\\n    type: com.alibaba.druid.pool.DruidDataSource\\n\\n    initiaSize: 5\\n    minIdle: 5\\n    maxActive: 20\\n    maxWait: 60000\\n    timeBetweenEvictionRunsMillis: 60000\\n    minEvictableIdleTimeMillis: 300000\\n    validationQuery: SELECT 1 FROM DUAL\\n    testWhileIdle: true\\n    testOnBorrow: false\\n    testOnReturn: false\\n    poolPreparedStatements: true\\n    filters: stat,wall,log4j\\n    MaxPoolPreparedStatementPerConnectionSize: 20\\n    useGlobalDataSourceStat: true\\n    ConnectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500</code></pre> <p>config/DruidConfig</p> <pre><code class=\\\"language-java\\\">\\n@Configuration\\npublic class DruidConfig {\\n\\n    @ConfigurationProperties(prefix = &quot;spring.datasource&quot;)\\n    @Bean\\n    public DataSource druid() {\\n        return new DruidDataSource();\\n    }\\n\\n    //配置监控\\n    //1. 管理后台的Servlet\\n\\n    @Bean\\n    public ServletRegistrationBean statViewServlet() {\\n        ServletRegistrationBean bean = new ServletRegistrationBean(new StatViewServlet(), &quot;/druid/*&quot;);\\n        Map&lt;String, String&gt; initMaps = new HashMap&lt;&gt;();\\n\\n        initMaps.put(&quot;loginUsername&quot;, &quot;admin&quot;);\\n        initMaps.put(&quot;loginPassword&quot;, &quot;admin&quot;);\\n        // 不写允许所有\\n        initMaps.put(&quot;allow&quot;, &quot;&quot;);\\n\\n        bean.setInitParameters(initMaps);\\n        return bean;\\n    }\\n\\n    //2. 配置Filtter\\n    public FilterRegistrationBean WebStatFilter() {\\n        FilterRegistrationBean bean = new FilterRegistrationBean();\\n        bean.setFilter(new WebStatFilter());\\n\\n        Map&lt;String, String&gt; initParams = new HashMap&lt;&gt;();\\n        initParams.put(&quot;exclusions&quot;,&quot;*.js,*.css,/druid/*&quot;);\\n        bean.setInitParameters(initParams);\\n\\n        bean.setUrlPatterns(Arrays.asList(&quot;/*&quot;));\\n        return bean;\\n    }\\n}</code></pre> <h2 id=\\\"2整合mybatis\\\">2.整合Mybatis</h2> <h3 id=\\\"配置druid\\\">配置Druid</h3> <h3 id=\\\"配置mybatis驼峰命名\\\">配置MyBatis驼峰命名</h3> <p>路径在/config/MyBatisConfig</p> <pre><code class=\\\"language-java\\\">@org.springframework.context.annotation.Configuration\\npublic class MyBatisConfig {\\n\\n    @Bean\\n    public ConfigurationCustomizer configurationCustomizer() {\\n        return new ConfigurationCustomizer() {\\n            @Override\\n            public void customize(Configuration configuration) {\\n                configuration.setMapUnderscoreToCamelCase(true);\\n            }\\n        };\\n    }\\n}\\n</code></pre> <pre><code class=\\\"language-Java\\\">使用MapperScan批量扫描Mapper所有的接口\\n@MapperScan(value = &quot;com.atfuigu.springboot06mybatis.mapper&quot;)</code></pre> <p>xml文件使用驼峰命名</p> <pre><code class=\\\"language-xml\\\">resources/mybatis/mybatis-config.xml\\n\\n&lt;configuration&gt;\\n    &lt;settings&gt;\\n        &lt;setting name=&quot;mapUnderscoreToCamelCase&quot; value=&quot;true&quot;/&gt;\\n    &lt;/settings&gt;\\n&lt;/configuration&gt;</code></pre> \";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<p>[TOC]</p> <h1 id=\\\"spring-farmwork\\\">Spring Farmwork</h1> <h1 id=\\\"官网：\\\">官网：</h1> <blockquote> <p>Spring.io</p> </blockquote> <h1 id=\\\"spring-是什么：\\\">Spring 是什么：</h1> <blockquote> <p>Spring是分层的Java SE/EE应用<font color=\\\"red\\\">full-stack</font>轻量级开源框架</p> </blockquote> <h1 id=\\\"spring的两大核心：\\\">Spring的两大核心：</h1> <p><font color=\\\"red\\\">IOC（反转控制）</font> </p> <blockquote> <p><font color=\\\"red\\\">削减耦合</font>，降低依赖关系(把创建对象的权力交给框架或者工厂)</p> </blockquote> <p><font color=\\\"red\\\">AOP（面向切面编程）</font>为内核，提供展现层Spring MVC和持久层Spring JDBC以及业务层事务管理等众多的企业级应用技术。</p> <h1 id=\\\"创建bean的三种方式\\\">创建Bean的三种方式</h1> <p>创建Bean的三种方式:</p> <p>第一种方式：使用默认构造函数创建。 在Spring的配置文件中使用Bean标签，配以ID和CLASS属性之后，且没有其他属性和标签时 采用的就是默认构造函数创建Bean对象，此时如果类中没有构造函数，则对象无法创建</p> <pre><code class=\\\"language-xml\\\"> &lt;bean id=&quot;accountService&quot; class=&quot;com.itheima.service.impl.AccountServiceImpl&quot;&gt;&lt;/bean&gt;</code></pre> <p>第二种方式：使用普通工厂中的方法创建对象（使用某个类中的方法创建对象，并存入Spring容器）</p> <pre><code class=\\\"language-xml\\\">     &lt;bean id=&quot;instanceFactory&quot; class=&quot;com.itheima.factory.InstanceFactory&quot;&gt;&lt;/bean&gt;\\n\\n    &lt;bean id=&quot;accountService&quot; factory-bean=&quot;instanceFactory&quot; factory-method=&quot;getAccountService&quot;&gt;&lt;/bean&gt;</code></pre> <p>第三种方法： 使用工厂中的静态方法创建对象，(使用某个类中的静态方法创建对象，并存入Spring容器)</p> <pre><code class=\\\"language-xml\\\">&lt;bean id=&quot;accountService&quot; class=&quot;com.itheima.factory.StaticFactory&quot; factory-method=&quot;getAccountService&quot;&gt;&lt;/bean&gt;</code></pre> <h1 id=\\\"bean的作用范围\\\">Bean的作用范围</h1> <p>Bean标签的Scope属性:</p> <pre><code>作用：用于指定Bean的作用范围\\n取值：\\nsingleton : 单例的（默认值）\\nprototype :多例的\\nrequest   :作用域Web应用的请求范围\\nsession   :作用域Web应用的会话范围\\nglobal-session：作用域集群环境的会话范围（全局会话范围），不是集群环境时，他就是Session</code></pre><pre><code class=\\\"language-xml\\\"> &lt;bean id=&quot;accountService&quot; class=&quot;com.itheima.factory.StaticFactory&quot; factory-method=&quot;getAccountService&quot; scope=&quot;prototype&quot;&gt;&lt;/bean&gt;\\n</code></pre> <h1 id=\\\"bean对象的生命周期\\\">Bean对象的生命周期</h1> <pre><code>单例对象：\\n    出生：容器创建出生\\n    活着：只要容器在，对象一直存活\\n    死亡：容器消失，对象消亡\\n    总结：单例对象的生命周期和容器相同\\n多例对象：\\n    出生：使用对象时，Spring创建\\n    活着：对象在使用过程中，一直活着\\n    死亡：当对象长时间不用，且没有其他对象引用时由Java垃圾回收机制回收；</code></pre><h1 id=\\\"spring的依赖注入\\\">Spring的依赖注入</h1> <ol> <li><p>Spring中的依赖注入 Dependency Injection IOC的作用：降低耦合（依赖关系） 依赖关系的管理：以后交给Spring维护 在当前类需要用到其他类的对象，由Spring为我们提供。我们只需要在配置文件中 说明</p> </li> <li><p>依赖关系的维护： 就称之为依赖注入 依赖注入：</p> <blockquote> <p>​ 能注入的数据：有三类 ​ 1.基本类型和String</p> <p>​ 2.其他的Bean类型</p> <p>​ 3.复杂类型/集合类型</p> <p> 注入的方式有三种：</p> <p>​ 1.第一种：使用构造函数提供</p> <p>​ 2.第二种：使用set方法提供</p> <p>​ 3.第三种：使用注解提供</p> </blockquote> </li> </ol> <h2 id=\\\"构造函数注入：\\\">构造函数注入：</h2> <p>第一种：构造函数注入 constructor-arg 在Bean标签的内部使用</p> <pre><code class=\\\"language-xml\\\">&lt;bean&gt;\\n&lt;constructor-arg&gt;\\n&lt;/bean&gt;</code></pre> <p>属性：</p> <blockquote> <p>type：用于指定要注入的数据的数据类型 index：用于指定要注入的数据给构造函数的索引位置 name:用于指定给构造函数中指定名称的参数赋值</p> </blockquote> <p><font color=\\\"red\\\">以上三个用于指定给构造函数中哪个参数赋值</font></p> <hr> <blockquote> <p>value:用于提供基本类型过和String类型的数据</p> <p>ref : 用于指定其他的Bean类型数据。在Spring的IOC核心容器中出现过的Bean对象</p> </blockquote> <p>总结：</p> <blockquote> <p>优势： 在获Bean对象时，注入是必须的操作，否则无法创建成功 弊端： 该拜年了Bean对象的实例化方式，使我们在创建对象时，如果用不到这些数据也必须提供</p> </blockquote> <pre><code class=\\\"language-xml\\\">    &lt;bean id=&quot;accountService&quot; class=&quot;com.itheima.service.impl.AccountServiceImpl&quot;&gt;\\n        &lt;constructor-arg name=&quot;name&quot; value=&quot;泰斯特&quot;&gt;&lt;/constructor-arg&gt;\\n        &lt;constructor-arg name=&quot;age&quot; value=&quot;18&quot;&gt;&lt;/constructor-arg&gt;\\n        &lt;constructor-arg name=&quot;birthday&quot; ref=&quot;now&quot;&gt;&lt;/constructor-arg&gt;\\n    &lt;/bean&gt;\\n\\n    &lt;!--    配置一个日期--&gt;\\n    &lt;bean id=&quot;now&quot; class=&quot;java.util.Date&quot;&gt;&lt;/bean&gt;\\n\\n</code></pre> <h2 id=\\\"set注入\\\">Set注入</h2> <p>涉及的标签：property</p> <p>出现的位置：Bean标签的内部</p> <p>标签的属性：</p> <blockquote> <p>name:用于指定注入时所调用的set方法名称；</p> <p>value:用于提供基本类型过和String类型的数据</p> <p>ref : 用于指定其他的Bean类型数据。在Spring的IOC核心容器中出现过的Bean对象</p> </blockquote> <p>总结：</p> <blockquote> <p>优势：</p> <p>​ 创建时有明确的限制，可以直接使用默认构造函数</p> <p>弊端：</p> <p>​ 如果有某个成员必须有值，则获取对象有可能Set方法没有执行</p> </blockquote> <pre><code class=\\\"language-xml\\\">    &lt;!--    Set 注入--&gt;\\n    &lt;bean id=&quot;accountService2&quot; class=&quot;com.itheima.service.impl.AccountServiceImpl2&quot;&gt;\\n        &lt;property name=&quot;name&quot; value=&quot;特斯拉&quot;&gt;&lt;/property&gt;\\n        &lt;property name=&quot;age&quot; value=&quot;21&quot;&gt;&lt;/property&gt;\\n        &lt;property name=&quot;birthday&quot; ref=&quot;now&quot;&gt;&lt;/property&gt;\\n    &lt;/bean&gt;\\n</code></pre> <h2 id=\\\"复杂类型的注入\\\">复杂类型的注入</h2> <p>用于给List集合注入的标签：list array set</p> <p>用于给Map结构集合注入的标签：map props</p> <p>结构相同，标签可以互换</p> <h1 id=\\\"注解：\\\">注解：</h1> <p>XML文件配置：</p> <pre><code class=\\\"language-xml\\\">&lt;bean id=&quot;accountService&quot; class=&quot;com.itheima.service.impl.AccountServiceImpl&quot;&gt;&lt;/bean&gt;\\n\\n* 用于创建对象过的注解\\n    在XML配置文件中编写一个&lt;bean&gt;表爱去哪实现功能是一样的\\n     @Component:\\n        作用：把当前类对象存入Spring容器中\\n        属性：value用于指定Bean的id。不写时默认值为当前类名，且首字母小写\\n   @Controller    ：用于表现层\\n   @Service      ：用于业务层\\n   @Respository    ：用于持久层\\n        以上三个注解，他们的作用和属性与Compontent是一模一样的，\\n        是Spring框架为我们提供明确的三层使用的注解，是我们的三层对象更加清晰\\n* 用于注入数据的        \\n        在XML配置中的bean中写一个&lt;property&gt;标签一样\\n   @Autowired:\\n        作用：自动按照类型注入，只要容器中有唯一的一个Bean对象类型和要注入的变量类型匹配，就可以注入成功；\\n              如果IOC容器中没有任何Bean的类型和要注入的变量类型匹配，则报错\\n              如果有多个类型匹配时\\n        出现位置：可以是变量上，可以是方法上\\n        细节：在使用注解时,set方法就可以不用\\n   @Qualified：必须依赖于Autowired\\n        作用：在按按照而理性注入的基础上再按照名称注入。它在给类成员注入时不能单独使用；但给参数注入时可以\\n           属性：value：用于指定注入bean的ID\\n   @Resource\\n        作用：直接按照bean的ID注入，可以单独使用\\n        属性：\\n              name:用于指定bean的ID\\n           以上三个注解，只能注入其他Bean类型的术后据，而基本类型和String类型无法使用上述注解实现。\\n        另外，类型集合的注入只能通过XML实现\\n\\n\\n   @Value：\\n        作用：用于注入基本类型和String类型\\n        属性：value：用于指定数据的值，可以使用Spring中SpEL（Spring中的el表达式）\\n             SpEL写法：${表达式}\\n* 改变作用范围的\\n        作用集合在bean标签中使用scop标签是一样的\\n   @Scope \\n        作用：用于指定Bean的作用范围\\n        属性：\\n            Value：指定范围的取值，Singleton、Prototype\\n* 生命周期相关（了解）\\n        作用和bean标签中使用init-method,destroy-method\\n   @PreDestroy：\\n           指定销毁方法\\n  @ PostContruct：\\n        指定初始化方法\\n</code></pre> <h1 id=\\\"configration注解：\\\">Configration注解：</h1> <pre><code class=\\\"language-xml\\\">@Configuration    \\n    作用：\\n        指定当前类是一个配置类\\n    细节：\\n        1.当配置类作为AnnotationCondifApplicationContext对象创建时，该注解可不写\\n        2.\\n@ComponentsScan：\\n    作用：\\n        用于指定Spring创建容器时所需要扫描的包\\n    属性：\\n        value:它和basePackkages的作用是一样的，都是指定窗户将容器时所要扫描的包\\n              此注解等同与在XML中配置了&lt;context:component-scan base-package=&quot;com.itheima&quot;&gt;&lt;/context:component-scan&gt;\\n@Bean:\\n    作用：\\n        把当前方法的返回值作为Bean对象存入Spring容器中\\n    属性：\\n        naem:用于指定bean的ID，不写诗，默认值为当前方法的名称\\n    细节：\\n        当使用注解配置方法时，如果方法有参数，Spring框架会去容器中查找有没有可用的Bean对象，查找的方式和Autowied一致\\n@Import\\n    作用：用于导入其它的配置类\\n    属性：\\n        value:用于指定其他配置类的字节码\\n              放我们使用Import注释的是父配置类，而导入的是子配置类\\n@PropertySource :\\n        作用：用于指定Peoperties文件的位置\\n属性：values:指定文件路径和名册和名称\\n        关键字classpath</code></pre> <h1 id=\\\"spring-test注解\\\">Spring Test注解</h1> <pre><code class=\\\"language-java\\\">\\n\\n@Runwith\\n        :提供一个注解，把原有的main方法替换了，替换成Spring提供的\\n\\n@ContextConfigration\\n        ：location：指定xml位置，加上class path关键字，表示在类路径下（@ContextConfiguration(locations = &quot;classpath:bean.xml&quot;)\\n）\\n        classes：指定注解类所在位置</code></pre> <h1 id=\\\"aop\\\">AOP</h1> <h2 id=\\\"实例分析：\\\">实例分析：</h2> <p>解决多个进程问题，无法回滚</p> <h2 id=\\\"动态代理对象\\\">动态代理对象</h2> <h3 id=\\\"demo基于接口的动态代理\\\">Demo:基于接口的动态代理</h3> <blockquote> <pre><code>   动态代理\\n\\n   特点：字节码随用随创建、加载\\n       不修改源码的基础上对方法进行增强\\n   分类：\\n\\n           基于接口的动态代理\\n           基于子类的动态代理\\n\\n           基于接口的动态代理：\\n                   涉及的类Proxy\\n                   提供者：JDK官方\\n            如何创建代理对象：\\n                   使用Proxy类中的 newProxyInstance\\n            创建代理对象的要求：\\n                   被代理类最少实现一个接口，如果没有则不能使用\\n           newProxyInstance方法的参数：\\n                   ClassLoader : 用于加载对象字节码。和被代理对象使用相同的类加载器；固定写法\\n                   Class[]：         让代理对象和被代理对象有相同的方法。固定写法\\n                   InvocationHandle：  让我们写如何代理，我们一般都是写一个该接口的实现类，通常情况下都是匿名内部类；但不是必须的\\n            此接口的实现类都是谁用谁写</code></pre></blockquote> <p><img src=\\\"C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200811222212008.png\\\" alt=\\\"image-20200811222212008\\\"></p> <h3 id=\\\"demo基于子类的动态代理\\\">Demo:基于子类的动态代理</h3> <blockquote> <pre><code>   动态代理\\n\\n   特点：字节码随用随创建、加载\\n       不修改源码的基础上对方法进行增强\\n   分类：\\n\\n   ​    基于接口的动态代理\\n   ​    基于子类的动态代理\\n\\n   基于子类的动态代理：\\n            涉及的类:Enhancer\\n           提供者：第三方 cglib\\n    如何创建代理对象：\\n           使用Proxy类中的 Ehancer类中的Create方法\\n    创建代理对象的要求：\\n           被代理类不能是最终类\\n   cerate方法的参数：\\n           Class：字节码，用于指定被代理对象的字节码\\n           Callback：  让我们写如何代理，我们一般都是写一个该接口的实现类，通常情况下都是匿名内部类；但不是必须的\\n   ​    此接口的实现类都是谁用谁写\\n   ​    我们一般写的都是该接口的子接口实现类:MethodInterceptor</code></pre></blockquote> <p><img src=\\\"C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200811224451387.png\\\" alt=\\\"image-20200811224451387\\\"></p> <h2 id=\\\"aop概念及作用\\\">AOP概念及作用</h2> <p>AOP：面向切面编程，是OOP的延续，是函数式编程的延续</p> <p>作用：在程序运行期间，不修改源码对已有方法进行增强</p> <p>优势：</p> <p>​ 减少重复代码</p> <p>​ 提高开发效率</p> <p>​ 维护方便</p> <h3 id=\\\"通知的类型：\\\">通知的类型：</h3> <p><img src=\\\"C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200813155631126.png\\\" alt=\\\"image-20200813155631126\\\"></p> <h1 id=\\\"spring基于xml的aop配置步骤\\\">Spring基于XML的AOP配置步骤</h1> <p>​ 1.把通知的Bean交给Logger来管理 ​ 2.使用AOP：config标签表示开始AOP的配置 ​ 3.使用Aop：aspect标签表明配置切面： ​ id属性：给切面提供一个唯一标志 ​ ref属性：指定通知类的Bean ID ​ 4.在aop:aspect内部使用对应标签来配置通知的类型 ​ aop:before 配置前置通知 ​ method属性：用于指定Logger类中哪个方法作为前置通知 ​ pointcut属性：用于指定切入点表达式。对业务层哪些方法进行增强</p> <p>​ 切入点从表达式的写法： ​ 关键字：execution(表达式) ​ 表达式：访问修饰符 返回值 包名.包名.类名.方法名（参数列表） ​ 标准的表达式写法:public void com.itheima.service.impl.AccountServiceImpl.saveAccount()</p> <p><img src=\\\"C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200813163613547.png\\\" alt=\\\"image-20200813163613547\\\"></p> <pre><code class=\\\"language-xml\\\">&lt;!--    配置Spring的IOC，把service对象配置进来--&gt;\\n&lt;bean id=&quot;accountService&quot; class=&quot;com.itheima.service.impl.AccountServiceImpl&quot;&gt;&lt;/bean&gt;\\n\\n&lt;!--    Spring基于XML的AOP配置步骤\\n    1.把通知的Bean交给Logger来管理\\n    2.使用AOP：config标签表示开始AOP的配置\\n    3.使用Aop：aspect标签表明配置切面：\\n            id属性：给切面提供一个唯一标志\\n            ref属性：指定通知类的Bean ID\\n     4.在aop:aspect内部使用对应标签来配置通知的类型\\n            aop:before 配置前置通知\\n                method属性：用于指定Logger类中哪个方法作为前置通知\\n                pointcut属性：用于指定切入点表达式。对业务层哪些方法进行增强\\n\\n             切入点从表达式的写法：\\n             关键字：execution(表达式)\\n             表达式：访问修饰符 返回值 包名.包名.类名.方法名（参数列表）\\n              标准的表达式写法:public void com.itheima.service.impl.AccountServiceImpl.saveAccount()\\n--&gt;\\n&lt;!--    配置Logger类--&gt;\\n&lt;bean id=&quot;logger&quot; class=&quot;com.itheima.utils.Logger&quot;&gt;&lt;/bean&gt;\\n&lt;!--配置AOP--&gt;\\n&lt;aop:config&gt;\\n    &lt;!--        配置切面--&gt;\\n    &lt;aop:aspect id=&quot;logAdvice&quot; ref=&quot;logger&quot;&gt;\\n        &lt;!--            配置通知的类型并且建立通知方法和切入点方法的关联--&gt;\\n        &lt;aop:before method=&quot;printLog&quot;\\n                    pointcut=&quot;execution(public void com.itheima.service.impl.AccountServiceImpl.saveAccount())&quot;&gt;&lt;/aop:before&gt;\\n    &lt;/aop:aspect&gt;\\n&lt;/aop:config&gt;</code></pre> <h3 id=\\\"通配表达式的写法\\\">通配表达式的写法</h3> <pre><code>             切入点从表达式的写法：\\n             关键字：execution(表达式)\\n             表达式：访问修饰符 返回值 包名.包名.类名.方法名（参数列表）\\n              标准的表达式写法:&lt;font color=red&gt;public void com.itheima.service.impl.AccountServiceImpl.saveAccount()&lt;/font&gt;\\n                  访问修饰符可以省略：\\n                        &lt;font color=red&gt;void com.itheima.service.impl.AccountServiceImpl.saveAccount()&lt;/font&gt;\\n                  返回值可以使用*，表示任意返回值\\n\\n                    *   &lt;font color=red&gt;com.itheima.service.impl.AccountServiceImpl.saveAccount()&lt;/font&gt;\\n                                      包名可以使用通配符，表示任意包，但是有几级包就需要写几个*.\\n\\n                                           * *.*.*.*.AccountServiceImpl.saveAccount()\\n                                                                  包名可以使用..表示当前包及其子包\\n                                                                       * *..AccountServiceImpl.saveAccount();\\n                                                                                         类名和方法名都可以使用*通配\\n\\n                                                                                                   * *..*.*()\\n                                                                                                                参数列表：\\n                                                可以直接写数据类型：\\n                                            基本类型直接写名称 int\\n                                                              应用类型写包名.类名方式 java.lang.String\\n                                                                                                                                    可以使用通配符表示任意类型，但必须有参数，\\n                                                                                                                          可以使用..表示有无参数均可，有参数可以是任意类型\\n                                                                                  全通配写法：* *..*.*(..)</code></pre><p> <font color=\\\"red\\\">实际开发中通常写法：切到业务层实现类的所有方法: </font></p> <p>​ <font color=\\\"red\\\"> * com.itheima.service.impl.<em>.</em>(..) </font></p> <p><img src=\\\"C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200813170532038.png\\\" alt=\\\"image-20200813170532038\\\"></p> <h2 id=\\\"环绕通知的写法：\\\">环绕通知的写法：</h2> <pre><code>/**\\n * 问题：\\n * 当配置了环绕通知后，切入点方法没有执行，而通知方法执行了\\n * 分析：\\n * 通过对比动态代理中的环绕通知代码，发现动态代理中的环绕通知有明确的切入点调用方法，而我们代码中没有\\n * 解决：\\n * Spring框架为我们提供一个接口：ProceedingJoinPoint，该接口有一个方法Proceed（）。此方法明确调用切入点方法\\n * 该接口可以作为环绕方法的通知参数，在程序执行时，Spring框架会为我们提供该接口方法的实现类供我们使用\\n *\\n * Spring环绕通知\\n *      他是Spring框架为我们提供的一种可以在代码中手动控制增强方法何时执行的方式\\n **/</code></pre><p><img src=\\\"C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200813175349451.png\\\" alt=\\\"image-20200813175349451\\\"></p> <p><img src=\\\"C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200813175330483.png\\\" alt=\\\"image-20200813175330483\\\"></p> <h2 id=\\\"注解通知：\\\">注解通知：</h2> <p><img src=\\\"C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200813181443487.png\\\" alt=\\\"image-20200813181443487\\\"></p> <p><img src=\\\"C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200813181513663.png\\\" alt=\\\"image-20200813181513663\\\"></p> <p><img src=\\\"C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200813181530691.png\\\" alt=\\\"image-20200813181530691\\\"></p> <h1 id=\\\"spring中基于xml的声明式事务控制配置\\\">Spring中基于XML的声明式事务控制配置</h1> <p>​ 1.配置事务管理器 ​ 2.配置事务的通知，需要约束,同时也需要AOP ​ 属性：</p> <p>​ id 给事务通知一个标识 ​ transaction-manager：给事务管理器通知提供一个事务管理器的引用 ​ 3.配置AOP通用切入点表达式 ​ 4.建立事务通知和表达式的关系 ​ 5.配置事务的属性: ​ 是在事务通知的tx:advice标签内部 ​ isolation=&quot;&quot; : 用于指定事务的隔离界别，默认值default表示使用数据库的级别 ​ propagation=&quot;&quot; ：用于指定十五点额传播行为，默认值时REQUIRED，表示一定有事务，增删改的选择。查询方法可以选择 SUPPORT ​ read-only=&quot;&quot;：用于指定事务是否支付，只有查询方法才能设置为True默认值为false，表示为可读写 ​ timeout=&quot;&quot;：事务的超时时间，默认值-1.永不超时；若指定了数值，以秒为单位 ​ rollback-for=&quot;&quot;：用于指定一个异常；但产生异常时；事务回滚；产生其它异常时，事务不回滚没有默认值。表示人任何异常都回 滚 ​ no-rollback-for=&quot;&quot; ：用于指定一个异常，但产生该异常时事务不回滚。产生其他异常时事务会回滚，没有默认值表示任何异常都 回滚</p> <p><img src=\\\"C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200814224346045.png\\\" alt=\\\"image-20200814224346045\\\"></p> <h1 id=\\\"spring中基于aopl的声明式事务控制配置\\\">Spring中基于AOPL的声明式事务控制配置</h1> <p>​ 1.配置事务管理器 ​ 2.开启Spring对注解事务的支持 ​ 3.在需要事务支持的地方使用@Transactionz注解</p> <p><img src=\\\"C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200814225219908.png\\\" alt=\\\"image-20200814225219908\\\"></p> <p><img src=\\\"C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200814225246382.png\\\" alt=\\\"image-20200814225246382\\\"></p> \";\n// Exports\nmodule.exports = code;","var toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `String.prototype.{ codePointAt, at }` methods implementation\nvar createMethod = function (CONVERT_TO_STRING) {\n  return function ($this, pos) {\n    var S = String(requireObjectCoercible($this));\n    var position = toInteger(pos);\n    var size = S.length;\n    var first, second;\n    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;\n    first = S.charCodeAt(position);\n    return first < 0xD800 || first > 0xDBFF || position + 1 === size\n      || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF\n        ? CONVERT_TO_STRING ? S.charAt(position) : first\n        : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.codePointAt` method\n  // https://tc39.github.io/ecma262/#sec-string.prototype.codepointat\n  codeAt: createMethod(false),\n  // `String.prototype.at` method\n  // https://github.com/mathiasbynens/String.prototype.at\n  charAt: createMethod(true)\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"divBackground\"},[_c('div',{directives:[{name:\"highlight\",rawName:\"v-highlight\"}],staticClass:\"docBackground\",staticStyle:{\"font-family\":\"'DejaVu Sans Mono'\",\"text-align\":\"left\",\"font-size\":\"20px\"},attrs:{\"id\":\"doc\"},domProps:{\"innerHTML\":_vm._s(_vm.msg)}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"divBackground\">\r\n\r\n    <div class=\"docBackground\" id=\"doc\" style=\" font-family: 'DejaVu Sans Mono';text-align: left;font-size: 20px\"\r\n         v-html=\"msg\"\r\n         v-highlight></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"DocumentSpringCloud\",\r\n  data() {\r\n    return {\r\n      md: \"\",\r\n      // path : \"\"\r\n      //保存解析后的md文件对象\r\n      msg: '',\r\n      //为了让组件强制渲染\r\n      key: 0,\r\n    }\r\n  },\r\n  methods: {\r\n    //必须设置为异步加载，因为解析需要时间，注意加上async\r\n    testMd(title) {\r\n      // var str = title\r\n      //注意加上await ,运用import函数\r\n      import('../markdown/' + title +'.md').then(myModule => {\r\n        this.msg = myModule.default;\r\n      });\r\n      //强制重新渲染\r\n      this.key += 1\r\n    }\r\n  },\r\n  mounted() {\r\n    let id = this.$route.params.id\r\n    console.log(id);\r\n    this.testMd(id);\r\n    // this.list = require.context(\"../markdown/\", true, /\\.md$/);\r\n    this.list = require.context('../markdown/', false, /.md/).keys();\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.hljs-line-numbers {\r\n  text-align: right;\r\n  border-right: 1px solid #ccc !important;\r\n  margin-right: 10px !important;\r\n  padding-right: 5px !important;\r\n  color: #999;\r\n  -webkit-touch-callout: none;\r\n  -webkit-user-select: none;\r\n  -khtml-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n}\r\n\r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DocumentSpringCloud.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DocumentSpringCloud.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./DocumentSpringCloud.vue?vue&type=template&id=0cb99e30&scoped=true&\"\nimport script from \"./DocumentSpringCloud.vue?vue&type=script&lang=js&\"\nexport * from \"./DocumentSpringCloud.vue?vue&type=script&lang=js&\"\nimport style0 from \"./DocumentSpringCloud.vue?vue&type=style&index=0&id=0cb99e30&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0cb99e30\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Other.vue?vue&type=style&index=0&id=3e32bf9f&scoped=true&lang=css&\"","module.exports = __webpack_public_path__ + \"img/github.85f8d56b.png\";","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"divBackground\"},[_c('div',{staticStyle:{\"width\":\"fit-content\",\"margin-left\":\"35%\"}},_vm._l((_vm.list),function(value){return _c('span',{key:value},[_c('el-card',{attrs:{\"id\":value},nativeOn:{\"click\":function($event){return _vm.docSkip(value)}}},[_vm._v(\" \"+_vm._s(value)+\" \")])],1)}),0)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"divBackground\">\r\n    <div style=\"width: fit-content;margin-left: 35%\">\r\n     <span v-for=\"(value) in list\" :key=\"value\">\r\n         <el-card :id='value' @click.native=\"docSkip(value)\">\r\n         {{ value }}\r\n       </el-card>\r\n     </span>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"DocumentList\",\r\n  components: {},\r\n  data() {\r\n    return {\r\n      list: Object\r\n    }\r\n  },\r\n  methods: {\r\n    docSkip(value) {\r\n      this.$router.push('/cloud/'+value);\r\n      console.log(value);\r\n    }\r\n  },\r\n  mounted() {\r\n    // this.testMd('Spring.md');\r\n    // this.list = require.context(\"../markdown/\", true, /\\.md$/);\r\n    let res  = require.context('../markdown/', false,  /^\\.\\/.*\\.md$/).keys();\r\n    let results = [];\r\n    for(let i=0;i<res.length;i++){\r\n      let temp = res[i];\r\n      temp = temp.replace(\"./\",\"\");\r\n      temp = temp.replace(\".md\",\"\");\r\n      // console.log(temp);\r\n      results.push(temp);\r\n    }\r\n    this.list = results;\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DocumentList.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DocumentList.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./DocumentList.vue?vue&type=template&id=b774f590&scoped=true&\"\nimport script from \"./DocumentList.vue?vue&type=script&lang=js&\"\nexport * from \"./DocumentList.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"b774f590\",\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\n\n// `AdvanceStringIndex` abstract operation\n// https://tc39.github.io/ecma262/#sec-advancestringindex\nmodule.exports = function (S, index, unicode) {\n  return index + (unicode ? charAt(S, index).length : 1);\n};\n","'use strict';\nvar regexpFlags = require('./regexp-flags');\nvar stickyHelpers = require('./regexp-sticky-helpers');\n\nvar nativeExec = RegExp.prototype.exec;\n// This always refers to the native implementation, because the\n// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,\n// which loads this file before patching the method.\nvar nativeReplace = String.prototype.replace;\n\nvar patchedExec = nativeExec;\n\nvar UPDATES_LAST_INDEX_WRONG = (function () {\n  var re1 = /a/;\n  var re2 = /b*/g;\n  nativeExec.call(re1, 'a');\n  nativeExec.call(re2, 'a');\n  return re1.lastIndex !== 0 || re2.lastIndex !== 0;\n})();\n\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y || stickyHelpers.BROKEN_CARET;\n\n// nonparticipating capturing group, copied from es5-shim's String#split patch.\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\n\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y;\n\nif (PATCH) {\n  patchedExec = function exec(str) {\n    var re = this;\n    var lastIndex, reCopy, match, i;\n    var sticky = UNSUPPORTED_Y && re.sticky;\n    var flags = regexpFlags.call(re);\n    var source = re.source;\n    var charsAdded = 0;\n    var strCopy = str;\n\n    if (sticky) {\n      flags = flags.replace('y', '');\n      if (flags.indexOf('g') === -1) {\n        flags += 'g';\n      }\n\n      strCopy = String(str).slice(re.lastIndex);\n      // Support anchored sticky behavior.\n      if (re.lastIndex > 0 && (!re.multiline || re.multiline && str[re.lastIndex - 1] !== '\\n')) {\n        source = '(?: ' + source + ')';\n        strCopy = ' ' + strCopy;\n        charsAdded++;\n      }\n      // ^(? + rx + ) is needed, in combination with some str slicing, to\n      // simulate the 'y' flag.\n      reCopy = new RegExp('^(?:' + source + ')', flags);\n    }\n\n    if (NPCG_INCLUDED) {\n      reCopy = new RegExp('^' + source + '$(?!\\\\s)', flags);\n    }\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;\n\n    match = nativeExec.call(sticky ? reCopy : re, strCopy);\n\n    if (sticky) {\n      if (match) {\n        match.input = match.input.slice(charsAdded);\n        match[0] = match[0].slice(charsAdded);\n        match.index = re.lastIndex;\n        re.lastIndex += match[0].length;\n      } else re.lastIndex = 0;\n    } else if (UPDATES_LAST_INDEX_WRONG && match) {\n      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;\n    }\n    if (NPCG_INCLUDED && match && match.length > 1) {\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\n      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\n      nativeReplace.call(match[0], reCopy, function () {\n        for (i = 1; i < arguments.length - 2; i++) {\n          if (arguments[i] === undefined) match[i] = undefined;\n        }\n      });\n    }\n\n    return match;\n  };\n}\n\nmodule.exports = patchedExec;\n","module.exports = __webpack_public_path__ + \"img/gmail.964b840e.png\";","'use strict';\n\nvar fails = require('./fails');\n\n// babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError,\n// so we use an intermediate function.\nfunction RE(s, f) {\n  return RegExp(s, f);\n}\n\nexports.UNSUPPORTED_Y = fails(function () {\n  // babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError\n  var re = RE('a', 'y');\n  re.lastIndex = 2;\n  return re.exec('abcd') != null;\n});\n\nexports.BROKEN_CARET = fails(function () {\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=773687\n  var re = RE('^r', 'gy');\n  re.lastIndex = 2;\n  return re.exec('str') != null;\n});\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DocumentSpringCloud.vue?vue&type=style&index=0&id=0cb99e30&scoped=true&lang=css&\"","'use strict';\nvar $ = require('../internals/export');\nvar exec = require('../internals/regexp-exec');\n\n$({ target: 'RegExp', proto: true, forced: /./.exec !== exec }, {\n  exec: exec\n});\n","'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.github.io/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","module.exports = __webpack_public_path__ + \"img/wechat.a8fee2c3.png\";","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"divBackground\",staticStyle:{\"font-family\":\"'DejaVu Sans Mono'\",\"font-style\":\"italic\"}},[_c('h1',[_vm._v(_vm._s(_vm.$t(\"message.saying\")))]),_c('el-divider'),_c('div',{staticClass:\"paragraph\",attrs:{\"id\":\"info\"}},[_c('h2',{attrs:{\"id\":\"about_me\"}},[_vm._v(\"About Me\")]),_c('p',{staticStyle:{\"margin\":\"2%\"}},[_vm._v(\" \"+_vm._s(_vm.profession)+\" \")]),_c('br'),_c('el-divider'),_vm._m(0),_c('h3',[_vm._v(\"2016-2020\")]),_c('p',{staticStyle:{\"margin\":\"2%\"}},[_vm._v(\" School of Computer Science & Technology , Tianjin University of Commerce ,Tianjin , China \")]),_c('el-divider'),_vm._m(1),_c('i',{staticClass:\"el-icon-message\",staticStyle:{\"font-family\":\"'DejaVu Sans Mono'\",\"font-style\":\"italic\"}},[_vm._v(\"Email Address : \"+_vm._s(_vm.Contact.email))]),_c('br'),_c('br'),_c('img',{staticStyle:{\"height\":\"20px\",\"width\":\"20px\"},attrs:{\"src\":require(\"../img/wechat.png\")}}),_c('i',[_vm._v(\" WeChat ID:\"+_vm._s(_vm.Contact.wechat))]),_c('el-divider'),_vm._m(2),_vm._m(3)],1),_vm._m(4)],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"experience\"}},[_c('i',{staticClass:\"el-icon-info\"}),_vm._v(\"Experience\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"Contact\"}},[_c('i',{staticClass:\"el-icon-message\"}),_vm._v(\"Contact\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"Links\"}},[_c('i',{staticClass:\"el-icon-share\"}),_vm._v(\"Links\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"margin\":\"2%\"},attrs:{\"id\":\"links_ico\"}},[_c('a',{attrs:{\"href\":\"https://github.com/WangJiyuanYo\"}},[_c('img',{staticStyle:{\"width\":\"4%\",\"height\":\"4%\"},attrs:{\"src\":require(\"../img/github.png\")}})]),_c('a',{attrs:{\"href\":\"https://t.me/tokrn\"}},[_c('img',{staticStyle:{\"width\":\"4%\",\"height\":\"4%\"},attrs:{\"src\":require(\"../img/telegram.png\")}})]),_c('a',{attrs:{\"href\":\"https://mail.google.com/\"}},[_c('img',{staticStyle:{\"width\":\"4%\",\"height\":\"4%\"},attrs:{\"src\":require(\"../img/gmail.png\")}})])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('footer',{staticClass:\"footer\",staticStyle:{\"font-family\":\"Meath\"}},[_c('div',[_vm._v(\" MIT Licensed | Copyright © 2018-2020 Vue.js \")])])}]\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"divBackground\" style=\"font-family: 'DejaVu Sans Mono';font-style: italic\">\r\n    <h1>{{ $t(\"message.saying\") }}</h1>\r\n    <el-divider></el-divider>\r\n    <div id=\"info\" class=\"paragraph\">\r\n      <h2 id=\"about_me\">About Me</h2>\r\n      <p style=\"margin: 2%;\">\r\n        {{ profession }}\r\n      </p>\r\n      <br>\r\n      <el-divider></el-divider>\r\n      <h2 id=\"experience\"><i class=\"el-icon-info\"></i>Experience</h2>\r\n      <h3>2016-2020</h3>\r\n      <p style=\"margin: 2%;\">\r\n        School of Computer Science & Technology , Tianjin University of Commerce ,Tianjin , China\r\n      </p>\r\n      <el-divider></el-divider>\r\n      <h2 id=\"Contact\"><i class=\"el-icon-message\"></i>Contact</h2>\r\n      <i class=\"el-icon-message\" style=\"font-family: 'DejaVu Sans Mono';font-style: italic\">Email Address :  {{ Contact.email }}</i>\r\n      <br>\r\n      <br>\r\n      <img src=\"../img/wechat.png\" style=\"height: 20px;width: 20px\" ><i> WeChat ID:{{ Contact.wechat }}</i>\r\n      <el-divider></el-divider>\r\n      <h2 id=\"Links\"><i class=\"el-icon-share\"></i>Links</h2>\r\n      <div id=\"links_ico\" style=\"margin: 2%\">\r\n        <a href=\"https://github.com/WangJiyuanYo\"><img src=\"../img/github.png\" style=\"width: 4%;height: 4%\"></a>\r\n        <a href=\"https://t.me/tokrn\"><img src=\"../img/telegram.png\" style=\"width:  4%;height:  4%\"></a>\r\n        <a href=\"https://mail.google.com/\"><img src=\"../img/gmail.png\" style=\"width:  4%;height:  4%\"></a>\r\n      </div>\r\n    </div>\r\n    <footer class=\"footer\" style=\"font-family: Meath;\">\r\n      <div>\r\n        MIT Licensed | Copyright © 2018-2020 Vue.js\r\n      </div>\r\n    </footer>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport 'github-markdown-css/github-markdown.css'\r\nimport '../css/background.css'\r\nimport '../css/footer.css'\r\nimport Computer from \"../markdown/Spring.md\"\r\n\r\n\r\nexport default {\r\n  name: 'Home',\r\n  data() {\r\n    return {\r\n      saying : \"Anything can't kill me , it will make me be better\",\r\n      profession:\"Work as Computer Programmer Designer\\n\",\r\n      imgSrc: require(\"../img/background.png\"),\r\n      Contact: {\r\n        email: \" Gwangjiyuan@gmail.com\",\r\n        wechat: \"Gwangjiyuan\",\r\n      },\r\n      user: {},\r\n      responseResult: {},\r\n      language: {},\r\n      md : Computer\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n<style scoped>\r\n.paragraph {\r\n  text-align: left;\r\n  font-size: 20px;\r\n}\r\n\r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Home.vue?vue&type=template&id=c23ce2da&scoped=true&\"\nimport script from \"./Home.vue?vue&type=script&lang=js&\"\nexport * from \"./Home.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Home.vue?vue&type=style&index=0&id=c23ce2da&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"c23ce2da\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('h1',[_vm._v(\"404 Not Found\")])])}]\n\nexport { render, staticRenderFns }","<template>\r\n<div>\r\n  <h1>404 Not Found</h1>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\nname: \"notFound404\"\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./notFound404.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./notFound404.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./notFound404.vue?vue&type=template&id=32235ab8&scoped=true&\"\nimport script from \"./notFound404.vue?vue&type=script&lang=js&\"\nexport * from \"./notFound404.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"32235ab8\",\n  null\n  \n)\n\nexport default component.exports","// Module\nvar code = \"<p>[TOC]</p> <h1 id=\\\"解决mysql时区问题\\\">解决MySQL时区问题</h1> <p>1.查询时区</p> <pre><code class=\\\"language-sql\\\">select timediff(now(),convert_tz(now(),@@session.time_zone,&#39;+00:00&#39;)); \\n或者:\\n\\nSELECT TIMEDIFF(NOW(), UTC_TIMESTAMP); </code></pre> <p>2.修改时区</p> <pre><code class=\\\"language-sql\\\">set global time_zone = &#39;+8:00&#39;;  ##修改mysql全局时区为北京时间，即我们所在的东8区\\nset time_zone = &#39;+8:00&#39;;  ##修改当前会话时区\\nflush privileges;  #立即生效</code></pre> <p>3.JDBC连接数据库时</p> <pre><code>设置SetTimeZone = &quot;Asia/ShangHai&quot;\\nGMT\\njdbc.url = jdbc:mysql://localhost:3306/mybatis?serverTimezone=GMT%2B8</code></pre><h2 id=\\\"学习笔记：\\\">学习笔记：</h2> <h2 id=\\\"sqlmapconfigxml\\\">SqlMapConfig.xml</h2> <p>1.头标签：</p> <pre><code class=\\\"language-xml\\\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\\n&lt;!DOCTYPE configuration\\n        PUBLIC &quot;-//mybatis.org//DTD Config 3.0//EN&quot;\\n        &quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;&gt;</code></pre> <h2 id=\\\"一级缓存的分析\\\">一级缓存的分析</h2> <p>一级缓存是SqlSession对象的缓存。当SqlSession对象消失时，一级缓存也会消失 </p> <p>一级缓存是Sqlsession 范围的缓存，当调用SqlSession的修改i、添加、删除、commit()、close()、clearCache()；方法的时候会清除一级缓存</p> <h2 id=\\\"二级缓存的分析\\\">二级缓存的分析</h2> <p>​ 二级缓存是SqlsessionFactory的对象缓存（存放的是数据），由同一个SqlSessionFactory对象创建对策SqlSession共享其缓存</p> <p>使用步骤：</p> <p>​ 第一步：Mybatis框架支持二级缓存（SqlMapConfig.xml）</p> <p>​ 第二步：让当前因施工和文件支持二级缓存（IUserDao.xml文件中）</p> <p>​ 第三步：让当前操作支持二级缓存（在Select标签中）</p> <p><img src=\\\"C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200803224025883.png\\\" alt=\\\"image-20200803224025883\\\"></p> <p>调用结果：</p> <p><img src=\\\"C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200803223903545.png\\\" alt=\\\"image-20200803223903545\\\"></p> <h1 id=\\\"注解开发\\\">注解开发</h1> <p>在MyBatis中针对CRUD一共有四个注解：@SELECT @INSERT @UPDATE @DELETE</p> <h1 id=\\\"mysql语句优化\\\">MySQL语句优化</h1> <h3 id=\\\"1-所有表必须使用-innodb-存储引擎\\\">1. 所有表必须使用 Innodb 存储引擎</h3> <p>没有特殊要求（即 Innodb 无法满足的功能如：列存储，存储空间数据等）的情况下，所有表必须使用 Innodb 存储引擎（MySQL5.5 之前默认使用 Myisam，5.6 以后默认的为 Innodb）。</p> <p>Innodb 支持事务，支持行级锁，更好的恢复性，高并发下性能更好。</p> <h3 id=\\\"2-数据库和表的字符集统一使用-utf8\\\">2. 数据库和表的字符集统一使用 UTF8</h3> <p>兼容性更好，统一字符集可以避免由于字符集转换产生的乱码，不同的字符集进行比较前需要进行转换会造成索引失效，如果数据库中有存储 emoji 表情的需要，字符集需要采用 utf8mb4 字符集。</p> <h3 id=\\\"3-所有表和字段都需要添加注释\\\">3. 所有表和字段都需要添加注释</h3> <p>使用 comment 从句添加表和列的备注，从一开始就进行数据字典的维护</p> <h3 id=\\\"4-尽量控制单表数据量的大小建议控制在-500-万以内。\\\">4. 尽量控制单表数据量的大小,建议控制在 500 万以内。</h3> <p>500 万并不是 MySQL 数据库的限制，过大会造成修改表结构，备份，恢复都会有很大的问题。</p> <p>可以用历史数据归档（应用于日志数据），分库分表（应用于业务数据）等手段来控制数据量大小</p> <h3 id=\\\"5-谨慎使用-mysql-分区表\\\">5. 谨慎使用 MySQL 分区表</h3> <p>分区表在物理上表现为多个文件，在逻辑上表现为一个表；</p> <p>谨慎选择分区键，跨分区查询效率可能更低；</p> <p>建议采用物理分表的方式管理大数据。</p> <h3 id=\\\"6尽量做到冷热数据分离减小表的宽度\\\">6.尽量做到冷热数据分离,减小表的宽度</h3> <blockquote> <p>MySQL 限制每个表最多存储 4096 列，并且每一行数据的大小不能超过 65535 字节。</p> </blockquote> <p>减少磁盘 IO,保证热数据的内存缓存命中率（表越宽，把表装载进内存缓冲池时所占用的内存也就越大,也会消耗更多的 IO）；</p> <p>更有效的利用缓存，避免读入无用的冷数据；</p> <p>经常一起使用的列放到一个表中（避免更多的关联操作）。</p> <h3 id=\\\"7-禁止在表中建立预留字段\\\">7. 禁止在表中建立预留字段</h3> <p>预留字段的命名很难做到见名识义。</p> <p>预留字段无法确认存储的数据类型，所以无法选择合适的类型。</p> <p>对预留字段类型的修改，会对表进行锁定。</p> <h3 id=\\\"8-禁止在数据库中存储图片文件等大的二进制数据\\\">8. 禁止在数据库中存储图片,文件等大的二进制数据</h3> <p>通常文件很大，会短时间内造成数据量快速增长，数据库进行数据库读取时，通常会进行大量的随机 IO 操作，文件很大时，IO 操作很耗时。</p> <p>通常存储于文件服务器，数据库只存储文件地址信息</p> <h3 id=\\\"9-禁止在线上做数据库压力测试\\\">9. 禁止在线上做数据库压力测试</h3> <h3 id=\\\"10-禁止从开发环境测试环境直接连接生成环境数据库\\\">10. 禁止从开发环境,测试环境直接连接生成环境数据库</h3> <h1 id=\\\"qa\\\">Q&amp;A</h1> <h2 id=\\\"一条sql语句执行得很慢的原因有哪些？\\\">一条SQL语句执行得很慢的原因有哪些？</h2> <p>​ 分类讨论：</p> <p>​ 1.大多数情况下正常，偶尔的情况下很慢</p> <p>​ 2.在数据量不变的情况下，一直执行很慢</p> <h3 id=\\\"针对偶尔很慢的情况（1）\\\">针对偶尔很慢的情况（1）</h3> <ol> <li><p>数据库在刷新脏页（Flush）</p> <p>当内存数据页跟磁盘数据页内容不一致的时候，我们称这个内存页为“脏页”。内存数据写入到磁盘后，内存和磁盘上的数据页的内容就一致了，称为“干净页”</p> <ol> <li><p><strong>redolog满了：</strong> redo log的容量有限，如果数据库一直处于繁忙，更新也很频繁数据库很快就会被写满；数据库只能暂停其他的操作，用来将数据同步到磁盘当中</p> </li> <li><p><strong>内存不够用：</strong> 如果一次查询较多的数据，恰好碰到所查数据页不在内存中时，需要申请内存，若此时内存不够就需要释放一些数据页，干净页直接释放；脏页就需要刷新脏页</p> </li> <li><p><strong>MySQL 认为系统“空闲”的时候：</strong>这时系统没什么压力。</p> </li> <li><p><strong>MySQL 正常关闭的时候：</strong>这时候，MySQL 会把内存的脏页都 flush 到磁盘上，这样下次 MySQL 启动的时候，就可以直接从磁盘上读数据，启动速度会很快。</p> </li> <li><p>拿不到锁</p> </li> </ol> <p>如果所需要执行的表被其他的操作所上锁，只能在其他操作释放锁后再执行；判断是否在等待可以使用 show processlist查看当前的状态</p> </li> </ol> <h3 id=\\\"针对一直比较慢的情况（2）\\\">针对一直比较慢的情况（2）</h3> <pre><code class=\\\"language-sql\\\">#案例表\\nmysql&gt; CREATE TABLE `t` (\\n  `id` int(11) NOT NULL,\\n  `c` int(11) DEFAULT NULL,\\n  `d` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB;</code></pre> <ol> <li><p><strong>没有用到索引：</strong> </p> <p>​ <strong>(1) 字段没有索引</strong></p> <pre><code class=\\\"language-sql\\\">select * from t where 100 &lt;c and c &lt; 100000;</code></pre> <p>​ <strong>(2) 字段有索引，却没有用索引(此时，字段C有索引)</strong></p> <pre><code class=\\\"language-sql\\\">select * from t where c - 1 = 1000;</code></pre> <pre><code class=\\\"language-sql\\\">#正确的操作\\nselect * from t where c = 1000 + 1S;</code></pre> <p>​ <strong>(3) 函数操作导致没有用上索引</strong></p> <p>​ </p> <pre><code class=\\\"language-sql\\\">select * from t where pow(c,2) = 1000;</code></pre> </li> </ol> <pre><code> 2. 数据库自己选错了索引\\n\\n ### 总结\\n\\n ![image-20200914145026526](C:\\\\Users\\\\79443\\\\AppData\\\\Roaming\\\\Typora\\\\typora-user-images\\\\image-20200914145026526.png)</code></pre>\";\n// Exports\nmodule.exports = code;","var map = {\n\t\"./MySql.md\": \"cbfa\",\n\t\"./Spring.md\": \"5cd4\",\n\t\"./SpringBoot.md\": \"550d\",\n\t\"./computer.md\": \"ef4c\",\n\t\"./technology.md\": \"1a30\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"ccc4\";","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"divBackground\"},[_c('div',{staticStyle:{\"margin-left\":\"5%\",\"width\":\"15%\",\"margin-top\":\"5em\"},attrs:{\"id\":\"timeLine\"}},[_c('h2',[_vm._v(\"博客进展\")]),_c('Timeline')],1),_c('h2',[_vm._v(\"TO DO\")]),_c('el-divider',{staticClass:\"divider_class\"}),_vm._m(0)],1)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"margin-left\":\"5%\",\"width\":\"20%\",\"text-align\":\"left\"},attrs:{\"id\":\"TO DO\"}},[_c('h3',[_vm._v(\"添加ME页面内容\")]),_c('h3',[_vm._v(\"添加项目内容\")]),_c('h3',[_vm._v(\"抽离时间栏\")]),_c('h3',[_vm._v(\"抽离Markdown组件\")]),_c('h3',[_vm._v(\"增加en语言\")]),_c('h3',[_vm._v(\"增加平台适配\")])])}]\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"block\"},[_c('el-timeline',_vm._l((_vm.activities),function(activity,index){return _c('el-timeline-item',{key:index,attrs:{\"icon\":activity.icon,\"type\":activity.type,\"color\":activity.color,\"size\":activity.size,\"timestamp\":activity.timestamp}},[_vm._v(\" \"+_vm._s(activity.content)+\" \")])}),1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"block\">\r\n    <el-timeline>\r\n      <el-timeline-item\r\n          v-for=\"(activity, index) in activities\"\r\n          :key=\"index\"\r\n          :icon=\"activity.icon\"\r\n          :type=\"activity.type\"\r\n          :color=\"activity.color\"\r\n          :size=\"activity.size\"\r\n          :timestamp=\"activity.timestamp\">\r\n        {{ activity.content }}\r\n      </el-timeline-item>\r\n    </el-timeline>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Timeline\",\r\n  data() {\r\n    return {\r\n      activities: [{\r\n        content: '开始项目',\r\n        timestamp: '2020-06-28',\r\n        size: 'large',\r\n        type: 'primary',\r\n        icon: 'el-icon-more'\r\n      }, {\r\n        content: '构建框架',\r\n        timestamp: '2020-06-28',\r\n        color: '#0bbd87'\r\n      }, {\r\n        content: '导航栏背景',\r\n        timestamp: '2020-06-30',\r\n        color: ' #0bbd87',\r\n      }, {\r\n        content: '引入Markdown文件',\r\n        timestamp: '2020-07-01',\r\n        color: ' #0bbd87',\r\n      }, {\r\n        content: '修改路由',\r\n        timestamp: '2020-07-01',\r\n        color: ' #0bbd87',\r\n      }, {\r\n        content: 'Beta 1版本发布',\r\n        timestamp: '2020-07-04',\r\n        color: ' #0bbd87',\r\n      }, {\r\n        content: '修改主页内容',\r\n        timestamp: '2020-07-09',\r\n        color: '#0bbd87',\r\n      }, {\r\n        content: '调试后端API',\r\n        timestamp: '2020-11-22',\r\n        color: '#0bbd87',\r\n      }, {\r\n        content: '引入语言切换',\r\n        timestamp: '2020-11-29',\r\n        color: '#0bbd87',\r\n      }, {\r\n        content: '引入自定义字体',\r\n        timestamp: '2020-12-07',\r\n        color: '#0bbd87',\r\n      }, {\r\n        content: '主页语言配置',\r\n        timestamp: '2020年12月13日',\r\n        color: '#0bbd87',\r\n      },\r\n        {\r\n          content: '其他待加入',\r\n          timestamp: '2020-11-22',\r\n          color: 'red',\r\n        },\r\n      ]\r\n    };\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Timeline.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Timeline.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Timeline.vue?vue&type=template&id=6ed9d9e0&scoped=true&\"\nimport script from \"./Timeline.vue?vue&type=script&lang=js&\"\nexport * from \"./Timeline.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6ed9d9e0\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n  <div>\r\n    <div style=\"\" class=\"divBackground\">\r\n      <div id=\"timeLine\" style=\"margin-left: 5%;width:15%;margin-top: 5em\">\r\n        <h2>博客进展</h2>\r\n        <Timeline></Timeline>\r\n      </div>\r\n      <h2>TO DO</h2>\r\n      <el-divider class=\"divider_class\"></el-divider>\r\n      <div id=\"TO DO\" style=\"margin-left: 5%;width: 20%;text-align: left\">\r\n        <h3>添加ME页面内容</h3>\r\n        <h3>添加项目内容</h3>\r\n        <h3>抽离时间栏</h3>\r\n        <h3>抽离Markdown组件</h3>\r\n        <h3>增加en语言</h3>\r\n        <h3>增加平台适配</h3>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import Timeline from \"../components/Timeline\";\r\n  import '../css/background.css'\r\n  export default {\r\n    name: \"Other\",\r\n    components :{Timeline}\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n  .divider_class {\r\n    height: 5px;\r\n    width: 90%;\r\n    margin-left: 5%;\r\n  }\r\n\r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Other.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Other.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Other.vue?vue&type=template&id=3e32bf9f&scoped=true&\"\nimport script from \"./Other.vue?vue&type=script&lang=js&\"\nexport * from \"./Other.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Other.vue?vue&type=style&index=0&id=3e32bf9f&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3e32bf9f\",\n  null\n  \n)\n\nexport default component.exports","'use strict';\n// TODO: Remove from `core-js@4` since it's moved to entry points\nrequire('../modules/es.regexp.exec');\nvar redefine = require('../internals/redefine');\nvar fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar regexpExec = require('../internals/regexp-exec');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nvar SPECIES = wellKnownSymbol('species');\n\nvar REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {\n  // #replace needs built-in support for named groups.\n  // #match works fine because it just return the exec results, even if it has\n  // a \"grops\" property.\n  var re = /./;\n  re.exec = function () {\n    var result = [];\n    result.groups = { a: '7' };\n    return result;\n  };\n  return ''.replace(re, '$<a>') !== '7';\n});\n\n// IE <= 11 replaces $0 with the whole match, as if it was $&\n// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0\nvar REPLACE_KEEPS_$0 = (function () {\n  return 'a'.replace(/./, '$0') === '$0';\n})();\n\nvar REPLACE = wellKnownSymbol('replace');\n// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string\nvar REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function () {\n  if (/./[REPLACE]) {\n    return /./[REPLACE]('a', '$0') === '';\n  }\n  return false;\n})();\n\n// Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\n// Weex JS has frozen built-in prototypes, so use try / catch wrapper\nvar SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {\n  var re = /(?:)/;\n  var originalExec = re.exec;\n  re.exec = function () { return originalExec.apply(this, arguments); };\n  var result = 'ab'.split(re);\n  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';\n});\n\nmodule.exports = function (KEY, length, exec, sham) {\n  var SYMBOL = wellKnownSymbol(KEY);\n\n  var DELEGATES_TO_SYMBOL = !fails(function () {\n    // String methods call symbol-named RegEp methods\n    var O = {};\n    O[SYMBOL] = function () { return 7; };\n    return ''[KEY](O) != 7;\n  });\n\n  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {\n    // Symbol-named RegExp methods call .exec\n    var execCalled = false;\n    var re = /a/;\n\n    if (KEY === 'split') {\n      // We can't use real regex here since it causes deoptimization\n      // and serious performance degradation in V8\n      // https://github.com/zloirock/core-js/issues/306\n      re = {};\n      // RegExp[@@split] doesn't call the regex's exec method, but first creates\n      // a new one. We need to return the patched regex when creating the new one.\n      re.constructor = {};\n      re.constructor[SPECIES] = function () { return re; };\n      re.flags = '';\n      re[SYMBOL] = /./[SYMBOL];\n    }\n\n    re.exec = function () { execCalled = true; return null; };\n\n    re[SYMBOL]('');\n    return !execCalled;\n  });\n\n  if (\n    !DELEGATES_TO_SYMBOL ||\n    !DELEGATES_TO_EXEC ||\n    (KEY === 'replace' && !(\n      REPLACE_SUPPORTS_NAMED_GROUPS &&\n      REPLACE_KEEPS_$0 &&\n      !REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE\n    )) ||\n    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)\n  ) {\n    var nativeRegExpMethod = /./[SYMBOL];\n    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {\n      if (regexp.exec === regexpExec) {\n        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\n          // The native String method already delegates to @@method (this\n          // polyfilled function), leasing to infinite recursion.\n          // We avoid it by directly calling the native @@method method.\n          return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };\n        }\n        return { done: true, value: nativeMethod.call(str, regexp, arg2) };\n      }\n      return { done: false };\n    }, {\n      REPLACE_KEEPS_$0: REPLACE_KEEPS_$0,\n      REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE: REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE\n    });\n    var stringMethod = methods[0];\n    var regexMethod = methods[1];\n\n    redefine(String.prototype, KEY, stringMethod);\n    redefine(RegExp.prototype, SYMBOL, length == 2\n      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\n      // 21.2.5.11 RegExp.prototype[@@split](string, limit)\n      ? function (string, arg) { return regexMethod.call(string, this, arg); }\n      // 21.2.5.6 RegExp.prototype[@@match](string)\n      // 21.2.5.9 RegExp.prototype[@@search](string)\n      : function (string) { return regexMethod.call(string, this); }\n    );\n  }\n\n  if (sham) createNonEnumerableProperty(RegExp.prototype[SYMBOL], 'sham', true);\n};\n","var map = {\n\t\"./MySql.md\": \"cbfa\",\n\t\"./Spring.md\": \"5cd4\",\n\t\"./SpringBoot.md\": \"550d\",\n\t\"./computer.md\": \"ef4c\",\n\t\"./technology.md\": \"1a30\"\n};\n\nfunction webpackAsyncContext(req) {\n\treturn Promise.resolve().then(function() {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\n\t\tvar id = map[req];\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"dcab\";\nmodule.exports = webpackAsyncContext;","var global = require('../internals/global');\nvar DOMIterables = require('../internals/dom-iterables');\nvar ArrayIteratorMethods = require('../modules/es.array.iterator');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar ArrayValues = ArrayIteratorMethods.values;\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  var Collection = global[COLLECTION_NAME];\n  var CollectionPrototype = Collection && Collection.prototype;\n  if (CollectionPrototype) {\n    // some Chrome versions have non-configurable methods on DOMTokenList\n    if (CollectionPrototype[ITERATOR] !== ArrayValues) try {\n      createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);\n    } catch (error) {\n      CollectionPrototype[ITERATOR] = ArrayValues;\n    }\n    if (!CollectionPrototype[TO_STRING_TAG]) {\n      createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);\n    }\n    if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {\n      // some Chrome versions have non-configurable methods on DOMTokenList\n      if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {\n        createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);\n      } catch (error) {\n        CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];\n      }\n    }\n  }\n}\n","// Module\nvar code = \"<p>昨晚安装搜狗输入法，最后电脑里除了输入法以外还多了爱奇艺、搜狗浏览器、QQ音乐、浏览器默认首页也被篡改。。。国产软件全家桶防不胜防（无奈 ╮(╯▽╰)╭ ）因此分享下各类干净安全的软件。</p> <p>拒绝安装软件：360旗下所有产品、2345旗下所有产品、百度旗下所有产品、腾讯管家、金山旗下所有产品（WPS，毒霸等等）、国产特供系列、还有各种下载站。</p> <p>我自己安装软件的原则就是能避开国产就避开国产软件，国产里面也要挑几个可靠的。</p> <p>能用付费就不用免费，Microsoft的东西就是最好的例子，人家服务好啊，付费和盗版就是不一样。</p> <p>免费里面选择开源的软件。</p> <p>下载东西一般都去官方网站直接下载，不考虑特供版的情况下都比较安全。Adobe Flash这种东西就呵呵。。精简破解的软件就去可靠的网站找比如<a href=\\\"http://www.52pojie.cn\\\">www.52pojie.cn</a> 。</p> <p>推荐一些自己用的软件，部分附带链接：</p> <p>1.杀毒软件：火绒 <a href=\\\"http://www.huorong.cn\\\">www.huorong.cn</a> （国产里面比较有良心的。。用的是Win10的话按时更新补丁自带的Defender够用。。杀毒软件一个就够了，拜托小姐姐们不要装那么多，除了电脑速度越来越慢以外并没有什么实际的用途。）</p> <p>你也可以去买卡巴斯基、诺顿、麦咖啡之类的国外杀毒软件。但这些软件对开发人员不友好。</p> <p>2.通讯软件：TIM、精简QQ、WeChat</p> <p>3.压缩软件：7zip <a href=\\\"https://www.7-zip.org%EF%BC%88%E5%BC%80%E6%BA%90%E3%80%81%E5%85%8D%E8%B4%B9%EF%BC%89\\\">https://www.7-zip.org（开源、免费）</a></p> <p>4.浏览器：</p> <p>Chrome <a href=\\\"https://www.google.cn/intl/zh-CN/chrome/\\\">https://www.google.cn/intl/zh-CN/chrome/</a></p> <p>Firefox <a href=\\\"https://www.mozilla.org/\\\">https://www.mozilla.org/</a></p> <p>5.输入法：微软自带</p> <p>6.办公软件：Microsoft Office 365（家庭版500RMB/年。拒绝WPS）</p> <p>7.记事本：</p> <p>Notepad++：<a href=\\\"https://notepad-plus-plus.org/\\\">https://notepad-plus-plus.org/</a></p> <p>Typora：<a href=\\\"https://typora.io/\\\">https://typora.io/</a></p> <p>8.视频类：爱奇艺 、优酷 （Win10商店版 无广告）</p> <p>9.音乐：YouTube 网页 ：<a href=\\\"https://www.youtube.com\\\">https://www.youtube.com</a></p> <p>10.邮件：Windows自带</p> <p>11.查找工具：Everything <a href=\\\"https://www.52pojie.cn/thread-998833-1-1.html\\\">https://www.52pojie.cn/thread-998833-1-1.html</a></p> <p>12.视频播放：Potplayer （可以自己添加字幕等等）<a href=\\\"http://www.potplayer.org/\\\">http://www.potplayer.org/</a></p> <p>13.重装系统：微Pe启动器：<a href=\\\"http://www.wepe.com.cn/\\\">http://www.wepe.com.cn/</a></p> <p>14.Windows系统下载：<a href=\\\"https://msdn.itellyou.cn/\\\">https://msdn.itellyou.cn/</a></p> <p>15.Linus系统下载：<a href=\\\"https://mirrors.tuna.tsinghua.edu.cn/\\\">https://mirrors.tuna.tsinghua.edu.cn/</a> （清华大学开源网站）</p> <p>16.桌面美化：WallPaper Engine（Steam版本）</p> <p>17.广告拦截工具：Adguard：<a href=\\\"https://adguard.com/en/welcome.html\\\">https://adguard.com/en/welcome.html</a> （圣诞节+黑色星期五 优惠力度超级大，85元一台电脑永久期限）</p> <p>BT资源（视频资源下载站）：</p> <p>有了这些网站都不要视频会员了，没有枪版资源。都是高清的</p> <p>1.六维空间：<a href=\\\"http://bt.neu6.edu.cn/forum.php\\\">http://bt.neu6.edu.cn/forum.php</a> （东北大学 需要教育网）</p> <p>2.蒲公英：<a href=\\\"https://npupt.com/\\\">https://npupt.com/</a> （西北工业大学 ipv6/教育网）</p> <p>3.北洋园：<a href=\\\"https://tjupt.org/\\\">https://tjupt.org/</a> （天津大学 支持公网/ipv4/ipv6）</p> \";\n// Exports\nmodule.exports = code;","module.exports = __webpack_public_path__ + \"img/telegram.edc9a0ed.png\";","// iterable DOM collections\n// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods\nmodule.exports = {\n  CSSRuleList: 0,\n  CSSStyleDeclaration: 0,\n  CSSValueList: 0,\n  ClientRectList: 0,\n  DOMRectList: 0,\n  DOMStringList: 0,\n  DOMTokenList: 1,\n  DataTransferItemList: 0,\n  FileList: 0,\n  HTMLAllCollection: 0,\n  HTMLCollection: 0,\n  HTMLFormElement: 0,\n  HTMLSelectElement: 0,\n  MediaList: 0,\n  MimeTypeArray: 0,\n  NamedNodeMap: 0,\n  NodeList: 1,\n  PaintRequestList: 0,\n  Plugin: 0,\n  PluginArray: 0,\n  SVGLengthList: 0,\n  SVGNumberList: 0,\n  SVGPathSegList: 0,\n  SVGPointList: 0,\n  SVGStringList: 0,\n  SVGTransformList: 0,\n  SourceBufferList: 0,\n  StyleSheetList: 0,\n  TextTrackCueList: 0,\n  TextTrackList: 0,\n  TouchList: 0\n};\n"],"sourceRoot":""}
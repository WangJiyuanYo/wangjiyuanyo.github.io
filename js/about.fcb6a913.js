(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["about"],{"07bd":function(e,t,n){"use strict";n.r(t);var o=function(){var e=this,t=e.$createElement;e._self._c;return e._m(0)},r=[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticStyle:{width:"100%",height:"100%"}},[n("h1",[e._v("项目主页")])])}],i={name:"Project",components:{}},a=i,s=n("2877"),p=Object(s["a"])(a,o,r,!1,null,"0bc460b4",null);t["default"]=p.exports},"0e54":function(e,t,n){(function(t,n){e.exports=n()})(0,(function(){"use strict";function e(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function t(t,n,o){return n&&e(t.prototype,n),o&&e(t,o),t}function n(e,t){if(e){if("string"===typeof e)return o(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?o(e,t):void 0}}function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,o=new Array(t);n<t;n++)o[n]=e[n];return o}function r(e,t){var o;if("undefined"===typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(o=n(e))||t&&e&&"number"===typeof e.length){o&&(e=o);var r=0;return function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}return o=e[Symbol.iterator](),o.next.bind(o)}function i(e,t){return t={exports:{}},e(t,t.exports),t.exports}var a=i((function(e){function t(){return{baseUrl:null,breaks:!1,gfm:!0,headerIds:!0,headerPrefix:"",highlight:null,langPrefix:"language-",mangle:!0,pedantic:!1,renderer:null,sanitize:!1,sanitizer:null,silent:!1,smartLists:!1,smartypants:!1,tokenizer:null,walkTokens:null,xhtml:!1}}function n(t){e.exports.defaults=t}e.exports={defaults:t(),getDefaults:t,changeDefaults:n}})),s=(a.defaults,a.getDefaults,a.changeDefaults,/[&<>"']/),p=/[&<>"']/g,l=/[<>"']|&(?!#?\w+;)/,c=/[<>"']|&(?!#?\w+;)/g,g={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},u=function(e){return g[e]};function d(e,t){if(t){if(s.test(e))return e.replace(p,u)}else if(l.test(e))return e.replace(c,u);return e}var m=/&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/gi;function f(e){return e.replace(m,(function(e,t){return t=t.toLowerCase(),"colon"===t?":":"#"===t.charAt(0)?"x"===t.charAt(1)?String.fromCharCode(parseInt(t.substring(2),16)):String.fromCharCode(+t.substring(1)):""}))}var h=/(^|[^\[])\^/g;function b(e,t){e=e.source||e,t=t||"";var n={replace:function(t,o){return o=o.source||o,o=o.replace(h,"$1"),e=e.replace(t,o),n},getRegex:function(){return new RegExp(e,t)}};return n}var C=/[^\w:]/g,k=/^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;function w(e,t,n){if(e){var o;try{o=decodeURIComponent(f(n)).replace(C,"").toLowerCase()}catch(r){return null}if(0===o.indexOf("javascript:")||0===o.indexOf("vbscript:")||0===o.indexOf("data:"))return null}t&&!k.test(n)&&(n=A(t,n));try{n=encodeURI(n).replace(/%25/g,"%")}catch(r){return null}return n}var v={},y=/^[^:]+:\/*[^/]*$/,S=/^([^:]+:)[\s\S]*$/,x=/^([^:]+:\/*[^/]*)[\s\S]*$/;function A(e,t){v[" "+e]||(y.test(e)?v[" "+e]=e+"/":v[" "+e]=T(e,"/",!0)),e=v[" "+e];var n=-1===e.indexOf(":");return"//"===t.substring(0,2)?n?t:e.replace(S,"$1")+t:"/"===t.charAt(0)?n?t:e.replace(x,"$1")+t:e+t}var q={exec:function(){}};function _(e){for(var t,n,o=1;o<arguments.length;o++)for(n in t=arguments[o],t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e}function R(e,t){var n=e.replace(/\|/g,(function(e,t,n){var o=!1,r=t;while(--r>=0&&"\\"===n[r])o=!o;return o?"|":" |"})),o=n.split(/ \|/),r=0;if(o.length>t)o.splice(t);else while(o.length<t)o.push("");for(;r<o.length;r++)o[r]=o[r].trim().replace(/\\\|/g,"|");return o}function T(e,t,n){var o=e.length;if(0===o)return"";var r=0;while(r<o){var i=e.charAt(o-r-1);if(i!==t||n){if(i===t||!n)break;r++}else r++}return e.substr(0,o-r)}function $(e,t){if(-1===e.indexOf(t[1]))return-1;for(var n=e.length,o=0,r=0;r<n;r++)if("\\"===e[r])r++;else if(e[r]===t[0])o++;else if(e[r]===t[1]&&(o--,o<0))return r;return-1}function D(e){e&&e.sanitize&&!e.silent&&console.warn("marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options")}function I(e,t){if(t<1)return"";var n="";while(t>1)1&t&&(n+=e),t>>=1,e+=e;return n+e}var E={escape:d,unescape:f,edit:b,cleanUrl:w,resolveUrl:A,noopTest:q,merge:_,splitCells:R,rtrim:T,findClosingBracket:$,checkSanitizeDeprecation:D,repeatString:I},z=a.defaults,P=E.rtrim,j=E.splitCells,B=E.escape,M=E.findClosingBracket;function U(e,t,n){var o=t.href,r=t.title?B(t.title):null,i=e[1].replace(/\\([\[\]])/g,"$1");return"!"!==e[0].charAt(0)?{type:"link",raw:n,href:o,title:r,text:i}:{type:"image",raw:n,href:o,title:r,text:B(i)}}function O(e,t){var n=e.match(/^(\s+)(?:```)/);if(null===n)return t;var o=n[1];return t.split("\n").map((function(e){var t=e.match(/^\s+/);if(null===t)return e;var n=t[0];return n.length>=o.length?e.slice(o.length):e})).join("\n")}var L=function(){function e(e){this.options=e||z}var t=e.prototype;return t.space=function(e){var t=this.rules.block.newline.exec(e);if(t)return t[0].length>1?{type:"space",raw:t[0]}:{raw:"\n"}},t.code=function(e,t){var n=this.rules.block.code.exec(e);if(n){var o=t[t.length-1];if(o&&"paragraph"===o.type)return{raw:n[0],text:n[0].trimRight()};var r=n[0].replace(/^ {4}/gm,"");return{type:"code",raw:n[0],codeBlockStyle:"indented",text:this.options.pedantic?r:P(r,"\n")}}},t.fences=function(e){var t=this.rules.block.fences.exec(e);if(t){var n=t[0],o=O(n,t[3]||"");return{type:"code",raw:n,lang:t[2]?t[2].trim():t[2],text:o}}},t.heading=function(e){var t=this.rules.block.heading.exec(e);if(t){var n=t[2].trim();if(/#$/.test(n)){var o=P(n,"#");this.options.pedantic?n=o.trim():o&&!/ $/.test(o)||(n=o.trim())}return{type:"heading",raw:t[0],depth:t[1].length,text:n}}},t.nptable=function(e){var t=this.rules.block.nptable.exec(e);if(t){var n={type:"table",header:j(t[1].replace(/^ *| *\| *$/g,"")),align:t[2].replace(/^ *|\| *$/g,"").split(/ *\| */),cells:t[3]?t[3].replace(/\n$/,"").split("\n"):[],raw:t[0]};if(n.header.length===n.align.length){var o,r=n.align.length;for(o=0;o<r;o++)/^ *-+: *$/.test(n.align[o])?n.align[o]="right":/^ *:-+: *$/.test(n.align[o])?n.align[o]="center":/^ *:-+ *$/.test(n.align[o])?n.align[o]="left":n.align[o]=null;for(r=n.cells.length,o=0;o<r;o++)n.cells[o]=j(n.cells[o],n.header.length);return n}}},t.hr=function(e){var t=this.rules.block.hr.exec(e);if(t)return{type:"hr",raw:t[0]}},t.blockquote=function(e){var t=this.rules.block.blockquote.exec(e);if(t){var n=t[0].replace(/^ *> ?/gm,"");return{type:"blockquote",raw:t[0],text:n}}},t.list=function(e){var t=this.rules.block.list.exec(e);if(t){var n,o,r,i,a,s,p,l,c=t[0],g=t[2],u=g.length>1,d={type:"list",raw:c,ordered:u,start:u?+g.slice(0,-1):"",loose:!1,items:[]},m=t[0].match(this.rules.block.item),f=!1,h=m.length;r=this.rules.block.listItemStart.exec(m[0]);for(var b=0;b<h;b++){if(n=m[b],c=n,b!==h-1){if(i=this.rules.block.listItemStart.exec(m[b+1]),i[1].length>r[0].length||i[1].length>3){m.splice(b,2,m[b]+"\n"+m[b+1]),b--,h--;continue}(!this.options.pedantic||this.options.smartLists?i[2][i[2].length-1]!==g[g.length-1]:u===(1===i[2].length))&&(a=m.slice(b+1).join("\n"),d.raw=d.raw.substring(0,d.raw.length-a.length),b=h-1),r=i}o=n.length,n=n.replace(/^ *([*+-]|\d+[.)]) ?/,""),~n.indexOf("\n ")&&(o-=n.length,n=this.options.pedantic?n.replace(/^ {1,4}/gm,""):n.replace(new RegExp("^ {1,"+o+"}","gm"),"")),s=f||/\n\n(?!\s*$)/.test(n),b!==h-1&&(f="\n"===n.charAt(n.length-1),s||(s=f)),s&&(d.loose=!0),this.options.gfm&&(p=/^\[[ xX]\] /.test(n),l=void 0,p&&(l=" "!==n[1],n=n.replace(/^\[[ xX]\] +/,""))),d.items.push({type:"list_item",raw:c,task:p,checked:l,loose:s,text:n})}return d}},t.html=function(e){var t=this.rules.block.html.exec(e);if(t)return{type:this.options.sanitize?"paragraph":"html",raw:t[0],pre:!this.options.sanitizer&&("pre"===t[1]||"script"===t[1]||"style"===t[1]),text:this.options.sanitize?this.options.sanitizer?this.options.sanitizer(t[0]):B(t[0]):t[0]}},t.def=function(e){var t=this.rules.block.def.exec(e);if(t){t[3]&&(t[3]=t[3].substring(1,t[3].length-1));var n=t[1].toLowerCase().replace(/\s+/g," ");return{tag:n,raw:t[0],href:t[2],title:t[3]}}},t.table=function(e){var t=this.rules.block.table.exec(e);if(t){var n={type:"table",header:j(t[1].replace(/^ *| *\| *$/g,"")),align:t[2].replace(/^ *|\| *$/g,"").split(/ *\| */),cells:t[3]?t[3].replace(/\n$/,"").split("\n"):[]};if(n.header.length===n.align.length){n.raw=t[0];var o,r=n.align.length;for(o=0;o<r;o++)/^ *-+: *$/.test(n.align[o])?n.align[o]="right":/^ *:-+: *$/.test(n.align[o])?n.align[o]="center":/^ *:-+ *$/.test(n.align[o])?n.align[o]="left":n.align[o]=null;for(r=n.cells.length,o=0;o<r;o++)n.cells[o]=j(n.cells[o].replace(/^ *\| *| *\| *$/g,""),n.header.length);return n}}},t.lheading=function(e){var t=this.rules.block.lheading.exec(e);if(t)return{type:"heading",raw:t[0],depth:"="===t[2].charAt(0)?1:2,text:t[1]}},t.paragraph=function(e){var t=this.rules.block.paragraph.exec(e);if(t)return{type:"paragraph",raw:t[0],text:"\n"===t[1].charAt(t[1].length-1)?t[1].slice(0,-1):t[1]}},t.text=function(e,t){var n=this.rules.block.text.exec(e);if(n){var o=t[t.length-1];return o&&"text"===o.type?{raw:n[0],text:n[0]}:{type:"text",raw:n[0],text:n[0]}}},t.escape=function(e){var t=this.rules.inline.escape.exec(e);if(t)return{type:"escape",raw:t[0],text:B(t[1])}},t.tag=function(e,t,n){var o=this.rules.inline.tag.exec(e);if(o)return!t&&/^<a /i.test(o[0])?t=!0:t&&/^<\/a>/i.test(o[0])&&(t=!1),!n&&/^<(pre|code|kbd|script)(\s|>)/i.test(o[0])?n=!0:n&&/^<\/(pre|code|kbd|script)(\s|>)/i.test(o[0])&&(n=!1),{type:this.options.sanitize?"text":"html",raw:o[0],inLink:t,inRawBlock:n,text:this.options.sanitize?this.options.sanitizer?this.options.sanitizer(o[0]):B(o[0]):o[0]}},t.link=function(e){var t=this.rules.inline.link.exec(e);if(t){var n=t[2].trim();if(!this.options.pedantic&&/^</.test(n)){if(!/>$/.test(n))return;var o=P(n.slice(0,-1),"\\");if((n.length-o.length)%2===0)return}else{var r=M(t[2],"()");if(r>-1){var i=0===t[0].indexOf("!")?5:4,a=i+t[1].length+r;t[2]=t[2].substring(0,r),t[0]=t[0].substring(0,a).trim(),t[3]=""}}var s=t[2],p="";if(this.options.pedantic){var l=/^([^'"]*[^\s])\s+(['"])(.*)\2/.exec(s);l&&(s=l[1],p=l[3])}else p=t[3]?t[3].slice(1,-1):"";return s=s.trim(),/^</.test(s)&&(s=this.options.pedantic&&!/>$/.test(n)?s.slice(1):s.slice(1,-1)),U(t,{href:s?s.replace(this.rules.inline._escapes,"$1"):s,title:p?p.replace(this.rules.inline._escapes,"$1"):p},t[0])}},t.reflink=function(e,t){var n;if((n=this.rules.inline.reflink.exec(e))||(n=this.rules.inline.nolink.exec(e))){var o=(n[2]||n[1]).replace(/\s+/g," ");if(o=t[o.toLowerCase()],!o||!o.href){var r=n[0].charAt(0);return{type:"text",raw:r,text:r}}return U(n,o,n[0])}},t.strong=function(e,t,n){void 0===n&&(n="");var o=this.rules.inline.strong.start.exec(e);if(o&&(!o[1]||o[1]&&(""===n||this.rules.inline.punctuation.exec(n)))){t=t.slice(-1*e.length);var r,i="**"===o[0]?this.rules.inline.strong.endAst:this.rules.inline.strong.endUnd;i.lastIndex=0;while(null!=(o=i.exec(t)))if(r=this.rules.inline.strong.middle.exec(t.slice(0,o.index+3)),r)return{type:"strong",raw:e.slice(0,r[0].length),text:e.slice(2,r[0].length-2)}}},t.em=function(e,t,n){void 0===n&&(n="");var o=this.rules.inline.em.start.exec(e);if(o&&(!o[1]||o[1]&&(""===n||this.rules.inline.punctuation.exec(n)))){t=t.slice(-1*e.length);var r,i="*"===o[0]?this.rules.inline.em.endAst:this.rules.inline.em.endUnd;i.lastIndex=0;while(null!=(o=i.exec(t)))if(r=this.rules.inline.em.middle.exec(t.slice(0,o.index+2)),r)return{type:"em",raw:e.slice(0,r[0].length),text:e.slice(1,r[0].length-1)}}},t.codespan=function(e){var t=this.rules.inline.code.exec(e);if(t){var n=t[2].replace(/\n/g," "),o=/[^ ]/.test(n),r=/^ /.test(n)&&/ $/.test(n);return o&&r&&(n=n.substring(1,n.length-1)),n=B(n,!0),{type:"codespan",raw:t[0],text:n}}},t.br=function(e){var t=this.rules.inline.br.exec(e);if(t)return{type:"br",raw:t[0]}},t.del=function(e){var t=this.rules.inline.del.exec(e);if(t)return{type:"del",raw:t[0],text:t[2]}},t.autolink=function(e,t){var n,o,r=this.rules.inline.autolink.exec(e);if(r)return"@"===r[2]?(n=B(this.options.mangle?t(r[1]):r[1]),o="mailto:"+n):(n=B(r[1]),o=n),{type:"link",raw:r[0],text:n,href:o,tokens:[{type:"text",raw:n,text:n}]}},t.url=function(e,t){var n;if(n=this.rules.inline.url.exec(e)){var o,r;if("@"===n[2])o=B(this.options.mangle?t(n[0]):n[0]),r="mailto:"+o;else{var i;do{i=n[0],n[0]=this.rules.inline._backpedal.exec(n[0])[0]}while(i!==n[0]);o=B(n[0]),r="www."===n[1]?"http://"+o:o}return{type:"link",raw:n[0],text:o,href:r,tokens:[{type:"text",raw:o,text:o}]}}},t.inlineText=function(e,t,n){var o,r=this.rules.inline.text.exec(e);if(r)return o=t?this.options.sanitize?this.options.sanitizer?this.options.sanitizer(r[0]):B(r[0]):r[0]:B(this.options.smartypants?n(r[0]):r[0]),{type:"text",raw:r[0],text:o}},e}(),F=E.noopTest,H=E.edit,W=E.merge,N={newline:/^\n+/,code:/^( {4}[^\n]+\n*)+/,fences:/^ {0,3}(`{3,}(?=[^`\n]*\n)|~{3,})([^\n]*)\n(?:|([\s\S]*?)\n)(?: {0,3}\1[~`]* *(?:\n+|$)|$)/,hr:/^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\* *){3,})(?:\n+|$)/,heading:/^ {0,3}(#{1,6})(?=\s|$)(.*)(?:\n+|$)/,blockquote:/^( {0,3}> ?(paragraph|[^\n]*)(?:\n|$))+/,list:/^( {0,3})(bull) [\s\S]+?(?:hr|def|\n{2,}(?! )(?! {0,3}bull )\n*|\s*$)/,html:"^ {0,3}(?:<(script|pre|style)[\\s>][\\s\\S]*?(?:</\\1>[^\\n]*\\n+|$)|comment[^\\n]*(\\n+|$)|<\\?[\\s\\S]*?(?:\\?>\\n*|$)|<![A-Z][\\s\\S]*?(?:>\\n*|$)|<!\\[CDATA\\[[\\s\\S]*?(?:\\]\\]>\\n*|$)|</?(tag)(?: +|\\n|/?>)[\\s\\S]*?(?:\\n{2,}|$)|<(?!script|pre|style)([a-z][\\w-]*)(?:attribute)*? */?>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:\\n{2,}|$)|</(?!script|pre|style)[a-z][\\w-]*\\s*>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:\\n{2,}|$))",def:/^ {0,3}\[(label)\]: *\n? *<?([^\s>]+)>?(?:(?: +\n? *| *\n *)(title))? *(?:\n+|$)/,nptable:F,table:F,lheading:/^([^\n]+)\n {0,3}(=+|-+) *(?:\n+|$)/,_paragraph:/^([^\n]+(?:\n(?!hr|heading|lheading|blockquote|fences|list|html)[^\n]+)*)/,text:/^[^\n]+/,_label:/(?!\s*\])(?:\\[\[\]]|[^\[\]])+/,_title:/(?:"(?:\\"?|[^"\\])*"|'[^'\n]*(?:\n[^'\n]+)*\n?'|\([^()]*\))/};N.def=H(N.def).replace("label",N._label).replace("title",N._title).getRegex(),N.bullet=/(?:[*+-]|\d{1,9}[.)])/,N.item=/^( *)(bull) ?[^\n]*(?:\n(?! *bull ?)[^\n]*)*/,N.item=H(N.item,"gm").replace(/bull/g,N.bullet).getRegex(),N.listItemStart=H(/^( *)(bull)/).replace("bull",N.bullet).getRegex(),N.list=H(N.list).replace(/bull/g,N.bullet).replace("hr","\\n+(?=\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$))").replace("def","\\n+(?="+N.def.source+")").getRegex(),N._tag="address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul",N._comment=/<!--(?!-?>)[\s\S]*?(?:-->|$)/,N.html=H(N.html,"i").replace("comment",N._comment).replace("tag",N._tag).replace("attribute",/ +[a-zA-Z:_][\w.:-]*(?: *= *"[^"\n]*"| *= *'[^'\n]*'| *= *[^\s"'=<>`]+)?/).getRegex(),N.paragraph=H(N._paragraph).replace("hr",N.hr).replace("heading"," {0,3}#{1,6} ").replace("|lheading","").replace("blockquote"," {0,3}>").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|!--)").replace("tag",N._tag).getRegex(),N.blockquote=H(N.blockquote).replace("paragraph",N.paragraph).getRegex(),N.normal=W({},N),N.gfm=W({},N.normal,{nptable:"^ *([^|\\n ].*\\|.*)\\n {0,3}([-:]+ *\\|[-| :]*)(?:\\n((?:(?!\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\n|$))*)\\n*|$)",table:"^ *\\|(.+)\\n {0,3}\\|?( *[-:]+[-| :]*)(?:\\n *((?:(?!\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\n|$))*)\\n*|$)"}),N.gfm.nptable=H(N.gfm.nptable).replace("hr",N.hr).replace("heading"," {0,3}#{1,6} ").replace("blockquote"," {0,3}>").replace("code"," {4}[^\\n]").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|!--)").replace("tag",N._tag).getRegex(),N.gfm.table=H(N.gfm.table).replace("hr",N.hr).replace("heading"," {0,3}#{1,6} ").replace("blockquote"," {0,3}>").replace("code"," {4}[^\\n]").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|!--)").replace("tag",N._tag).getRegex(),N.pedantic=W({},N.normal,{html:H("^ *(?:comment *(?:\\n|\\s*$)|<(tag)[\\s\\S]+?</\\1> *(?:\\n{2,}|\\s*$)|<tag(?:\"[^\"]*\"|'[^']*'|\\s[^'\"/>\\s]*)*?/?> *(?:\\n{2,}|\\s*$))").replace("comment",N._comment).replace(/tag/g,"(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\b)\\w+(?!:|[^\\w\\s@]*@)\\b").getRegex(),def:/^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +(["(][^\n]+[")]))? *(?:\n+|$)/,heading:/^(#{1,6})(.*)(?:\n+|$)/,fences:F,paragraph:H(N.normal._paragraph).replace("hr",N.hr).replace("heading"," *#{1,6} *[^\n]").replace("lheading",N.lheading).replace("blockquote"," {0,3}>").replace("|fences","").replace("|list","").replace("|html","").getRegex()});var J={escape:/^\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/,autolink:/^<(scheme:[^\s\x00-\x1f<>]*|email)>/,url:F,tag:"^comment|^</[a-zA-Z][\\w:-]*\\s*>|^<[a-zA-Z][\\w-]*(?:attribute)*?\\s*/?>|^<\\?[\\s\\S]*?\\?>|^<![a-zA-Z]+\\s[\\s\\S]*?>|^<!\\[CDATA\\[[\\s\\S]*?\\]\\]>",link:/^!?\[(label)\]\(\s*(href)(?:\s+(title))?\s*\)/,reflink:/^!?\[(label)\]\[(?!\s*\])((?:\\[\[\]]?|[^\[\]\\])+)\]/,nolink:/^!?\[(?!\s*\])((?:\[[^\[\]]*\]|\\[\[\]]|[^\[\]])*)\](?:\[\])?/,reflinkSearch:"reflink|nolink(?!\\()",strong:{start:/^(?:(\*\*(?=[*punctuation]))|\*\*)(?![\s])|__/,middle:/^\*\*(?:(?:(?!overlapSkip)(?:[^*]|\\\*)|overlapSkip)|\*(?:(?!overlapSkip)(?:[^*]|\\\*)|overlapSkip)*?\*)+?\*\*$|^__(?![\s])((?:(?:(?!overlapSkip)(?:[^_]|\\_)|overlapSkip)|_(?:(?!overlapSkip)(?:[^_]|\\_)|overlapSkip)*?_)+?)__$/,endAst:/[^punctuation\s]\*\*(?!\*)|[punctuation]\*\*(?!\*)(?:(?=[punctuation_\s]|$))/,endUnd:/[^\s]__(?!_)(?:(?=[punctuation*\s])|$)/},em:{start:/^(?:(\*(?=[punctuation]))|\*)(?![*\s])|_/,middle:/^\*(?:(?:(?!overlapSkip)(?:[^*]|\\\*)|overlapSkip)|\*(?:(?!overlapSkip)(?:[^*]|\\\*)|overlapSkip)*?\*)+?\*$|^_(?![_\s])(?:(?:(?!overlapSkip)(?:[^_]|\\_)|overlapSkip)|_(?:(?!overlapSkip)(?:[^_]|\\_)|overlapSkip)*?_)+?_$/,endAst:/[^punctuation\s]\*(?!\*)|[punctuation]\*(?!\*)(?:(?=[punctuation_\s]|$))/,endUnd:/[^\s]_(?!_)(?:(?=[punctuation*\s])|$)/},code:/^(`+)([^`]|[^`][\s\S]*?[^`])\1(?!`)/,br:/^( {2,}|\\)\n(?!\s*$)/,del:F,text:/^(`+|[^`])(?:(?= {2,}\n)|[\s\S]*?(?:(?=[\\<!\[`*]|\b_|$)|[^ ](?= {2,}\n)))/,punctuation:/^([\s*punctuation])/,_punctuation:"!\"#$%&'()+\\-.,/:;<=>?@\\[\\]`^{|}~"};J.punctuation=H(J.punctuation).replace(/punctuation/g,J._punctuation).getRegex(),J._blockSkip="\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>",J._overlapSkip="__[^_]*?__|\\*\\*\\[^\\*\\]*?\\*\\*",J._comment=H(N._comment).replace("(?:--\x3e|$)","--\x3e").getRegex(),J.em.start=H(J.em.start).replace(/punctuation/g,J._punctuation).getRegex(),J.em.middle=H(J.em.middle).replace(/punctuation/g,J._punctuation).replace(/overlapSkip/g,J._overlapSkip).getRegex(),J.em.endAst=H(J.em.endAst,"g").replace(/punctuation/g,J._punctuation).getRegex(),J.em.endUnd=H(J.em.endUnd,"g").replace(/punctuation/g,J._punctuation).getRegex(),J.strong.start=H(J.strong.start).replace(/punctuation/g,J._punctuation).getRegex(),J.strong.middle=H(J.strong.middle).replace(/punctuation/g,J._punctuation).replace(/overlapSkip/g,J._overlapSkip).getRegex(),J.strong.endAst=H(J.strong.endAst,"g").replace(/punctuation/g,J._punctuation).getRegex(),J.strong.endUnd=H(J.strong.endUnd,"g").replace(/punctuation/g,J._punctuation).getRegex(),J.blockSkip=H(J._blockSkip,"g").getRegex(),J.overlapSkip=H(J._overlapSkip,"g").getRegex(),J._escapes=/\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/g,J._scheme=/[a-zA-Z][a-zA-Z0-9+.-]{1,31}/,J._email=/[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/,J.autolink=H(J.autolink).replace("scheme",J._scheme).replace("email",J._email).getRegex(),J._attribute=/\s+[a-zA-Z:_][\w.:-]*(?:\s*=\s*"[^"]*"|\s*=\s*'[^']*'|\s*=\s*[^\s"'=<>`]+)?/,J.tag=H(J.tag).replace("comment",J._comment).replace("attribute",J._attribute).getRegex(),J._label=/(?:\[(?:\\.|[^\[\]\\])*\]|\\.|`[^`]*`|[^\[\]\\`])*?/,J._href=/<(?:\\.|[^\n<>\\])+>|[^\s\x00-\x1f]*/,J._title=/"(?:\\"?|[^"\\])*"|'(?:\\'?|[^'\\])*'|\((?:\\\)?|[^)\\])*\)/,J.link=H(J.link).replace("label",J._label).replace("href",J._href).replace("title",J._title).getRegex(),J.reflink=H(J.reflink).replace("label",J._label).getRegex(),J.reflinkSearch=H(J.reflinkSearch,"g").replace("reflink",J.reflink).replace("nolink",J.nolink).getRegex(),J.normal=W({},J),J.pedantic=W({},J.normal,{strong:{start:/^__|\*\*/,middle:/^__(?=\S)([\s\S]*?\S)__(?!_)|^\*\*(?=\S)([\s\S]*?\S)\*\*(?!\*)/,endAst:/\*\*(?!\*)/g,endUnd:/__(?!_)/g},em:{start:/^_|\*/,middle:/^()\*(?=\S)([\s\S]*?\S)\*(?!\*)|^_(?=\S)([\s\S]*?\S)_(?!_)/,endAst:/\*(?!\*)/g,endUnd:/_(?!_)/g},link:H(/^!?\[(label)\]\((.*?)\)/).replace("label",J._label).getRegex(),reflink:H(/^!?\[(label)\]\s*\[([^\]]*)\]/).replace("label",J._label).getRegex()}),J.gfm=W({},J.normal,{escape:H(J.escape).replace("])","~|])").getRegex(),_extended_email:/[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,url:/^((?:ftp|https?):\/\/|www\.)(?:[a-zA-Z0-9\-]+\.?)+[^\s<]*|^email/,_backpedal:/(?:[^?!.,:;*_~()&]+|\([^)]*\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,del:/^(~~?)(?=[^\s~])([\s\S]*?[^\s~])\1(?=[^~]|$)/,text:/^([`~]+|[^`~])(?:(?= {2,}\n)|[\s\S]*?(?:(?=[\\<!\[`*~]|\b_|https?:\/\/|ftp:\/\/|www\.|$)|[^ ](?= {2,}\n)|[^a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-](?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@))|(?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@))/}),J.gfm.url=H(J.gfm.url,"i").replace("email",J.gfm._extended_email).getRegex(),J.breaks=W({},J.gfm,{br:H(J.br).replace("{2,}","*").getRegex(),text:H(J.gfm.text).replace("\\b_","\\b_| {2,}\\n").replace(/\{2,\}/g,"*").getRegex()});var X={block:N,inline:J},G=a.defaults,Z=X.block,Q=X.inline,V=E.repeatString;function Y(e){return e.replace(/---/g,"—").replace(/--/g,"–").replace(/(^|[-\u2014/(\[{"\s])'/g,"$1‘").replace(/'/g,"’").replace(/(^|[-\u2014/(\[{\u2018\s])"/g,"$1“").replace(/"/g,"”").replace(/\.{3}/g,"…")}function K(e){var t,n,o="",r=e.length;for(t=0;t<r;t++)n=e.charCodeAt(t),Math.random()>.5&&(n="x"+n.toString(16)),o+="&#"+n+";";return o}var ee=function(){function e(e){this.tokens=[],this.tokens.links=Object.create(null),this.options=e||G,this.options.tokenizer=this.options.tokenizer||new L,this.tokenizer=this.options.tokenizer,this.tokenizer.options=this.options;var t={block:Z.normal,inline:Q.normal};this.options.pedantic?(t.block=Z.pedantic,t.inline=Q.pedantic):this.options.gfm&&(t.block=Z.gfm,this.options.breaks?t.inline=Q.breaks:t.inline=Q.gfm),this.tokenizer.rules=t}e.lex=function(t,n){var o=new e(n);return o.lex(t)},e.lexInline=function(t,n){var o=new e(n);return o.inlineTokens(t)};var n=e.prototype;return n.lex=function(e){return e=e.replace(/\r\n|\r/g,"\n").replace(/\t/g,"    "),this.blockTokens(e,this.tokens,!0),this.inline(this.tokens),this.tokens},n.blockTokens=function(e,t,n){var o,r,i,a;void 0===t&&(t=[]),void 0===n&&(n=!0),e=e.replace(/^ +$/gm,"");while(e)if(o=this.tokenizer.space(e))e=e.substring(o.raw.length),o.type&&t.push(o);else if(o=this.tokenizer.code(e,t))e=e.substring(o.raw.length),o.type?t.push(o):(a=t[t.length-1],a.raw+="\n"+o.raw,a.text+="\n"+o.text);else if(o=this.tokenizer.fences(e))e=e.substring(o.raw.length),t.push(o);else if(o=this.tokenizer.heading(e))e=e.substring(o.raw.length),t.push(o);else if(o=this.tokenizer.nptable(e))e=e.substring(o.raw.length),t.push(o);else if(o=this.tokenizer.hr(e))e=e.substring(o.raw.length),t.push(o);else if(o=this.tokenizer.blockquote(e))e=e.substring(o.raw.length),o.tokens=this.blockTokens(o.text,[],n),t.push(o);else if(o=this.tokenizer.list(e)){for(e=e.substring(o.raw.length),i=o.items.length,r=0;r<i;r++)o.items[r].tokens=this.blockTokens(o.items[r].text,[],!1);t.push(o)}else if(o=this.tokenizer.html(e))e=e.substring(o.raw.length),t.push(o);else if(n&&(o=this.tokenizer.def(e)))e=e.substring(o.raw.length),this.tokens.links[o.tag]||(this.tokens.links[o.tag]={href:o.href,title:o.title});else if(o=this.tokenizer.table(e))e=e.substring(o.raw.length),t.push(o);else if(o=this.tokenizer.lheading(e))e=e.substring(o.raw.length),t.push(o);else if(n&&(o=this.tokenizer.paragraph(e)))e=e.substring(o.raw.length),t.push(o);else if(o=this.tokenizer.text(e,t))e=e.substring(o.raw.length),o.type?t.push(o):(a=t[t.length-1],a.raw+="\n"+o.raw,a.text+="\n"+o.text);else if(e){var s="Infinite loop on byte: "+e.charCodeAt(0);if(this.options.silent){console.error(s);break}throw new Error(s)}return t},n.inline=function(e){var t,n,o,r,i,a,s=e.length;for(t=0;t<s;t++)switch(a=e[t],a.type){case"paragraph":case"text":case"heading":a.tokens=[],this.inlineTokens(a.text,a.tokens);break;case"table":for(a.tokens={header:[],cells:[]},r=a.header.length,n=0;n<r;n++)a.tokens.header[n]=[],this.inlineTokens(a.header[n],a.tokens.header[n]);for(r=a.cells.length,n=0;n<r;n++)for(i=a.cells[n],a.tokens.cells[n]=[],o=0;o<i.length;o++)a.tokens.cells[n][o]=[],this.inlineTokens(i[o],a.tokens.cells[n][o]);break;case"blockquote":this.inline(a.tokens);break;case"list":for(r=a.items.length,n=0;n<r;n++)this.inline(a.items[n].tokens);break}return e},n.inlineTokens=function(e,t,n,o){var r;void 0===t&&(t=[]),void 0===n&&(n=!1),void 0===o&&(o=!1);var i,a,s,p=e;if(this.tokens.links){var l=Object.keys(this.tokens.links);if(l.length>0)while(null!=(i=this.tokenizer.rules.inline.reflinkSearch.exec(p)))l.includes(i[0].slice(i[0].lastIndexOf("[")+1,-1))&&(p=p.slice(0,i.index)+"["+V("a",i[0].length-2)+"]"+p.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex))}while(null!=(i=this.tokenizer.rules.inline.blockSkip.exec(p)))p=p.slice(0,i.index)+"["+V("a",i[0].length-2)+"]"+p.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);while(e)if(a||(s=""),a=!1,r=this.tokenizer.escape(e))e=e.substring(r.raw.length),t.push(r);else if(r=this.tokenizer.tag(e,n,o))e=e.substring(r.raw.length),n=r.inLink,o=r.inRawBlock,t.push(r);else if(r=this.tokenizer.link(e))e=e.substring(r.raw.length),"link"===r.type&&(r.tokens=this.inlineTokens(r.text,[],!0,o)),t.push(r);else if(r=this.tokenizer.reflink(e,this.tokens.links))e=e.substring(r.raw.length),"link"===r.type&&(r.tokens=this.inlineTokens(r.text,[],!0,o)),t.push(r);else if(r=this.tokenizer.strong(e,p,s))e=e.substring(r.raw.length),r.tokens=this.inlineTokens(r.text,[],n,o),t.push(r);else if(r=this.tokenizer.em(e,p,s))e=e.substring(r.raw.length),r.tokens=this.inlineTokens(r.text,[],n,o),t.push(r);else if(r=this.tokenizer.codespan(e))e=e.substring(r.raw.length),t.push(r);else if(r=this.tokenizer.br(e))e=e.substring(r.raw.length),t.push(r);else if(r=this.tokenizer.del(e))e=e.substring(r.raw.length),r.tokens=this.inlineTokens(r.text,[],n,o),t.push(r);else if(r=this.tokenizer.autolink(e,K))e=e.substring(r.raw.length),t.push(r);else if(n||!(r=this.tokenizer.url(e,K))){if(r=this.tokenizer.inlineText(e,o,Y))e=e.substring(r.raw.length),s=r.raw.slice(-1),a=!0,t.push(r);else if(e){var c="Infinite loop on byte: "+e.charCodeAt(0);if(this.options.silent){console.error(c);break}throw new Error(c)}}else e=e.substring(r.raw.length),t.push(r);return t},t(e,null,[{key:"rules",get:function(){return{block:Z,inline:Q}}}]),e}(),te=a.defaults,ne=E.cleanUrl,oe=E.escape,re=function(){function e(e){this.options=e||te}var t=e.prototype;return t.code=function(e,t,n){var o=(t||"").match(/\S*/)[0];if(this.options.highlight){var r=this.options.highlight(e,o);null!=r&&r!==e&&(n=!0,e=r)}return o?'<pre><code class="'+this.options.langPrefix+oe(o,!0)+'">'+(n?e:oe(e,!0))+"</code></pre>\n":"<pre><code>"+(n?e:oe(e,!0))+"</code></pre>\n"},t.blockquote=function(e){return"<blockquote>\n"+e+"</blockquote>\n"},t.html=function(e){return e},t.heading=function(e,t,n,o){return this.options.headerIds?"<h"+t+' id="'+this.options.headerPrefix+o.slug(n)+'">'+e+"</h"+t+">\n":"<h"+t+">"+e+"</h"+t+">\n"},t.hr=function(){return this.options.xhtml?"<hr/>\n":"<hr>\n"},t.list=function(e,t,n){var o=t?"ol":"ul",r=t&&1!==n?' start="'+n+'"':"";return"<"+o+r+">\n"+e+"</"+o+">\n"},t.listitem=function(e){return"<li>"+e+"</li>\n"},t.checkbox=function(e){return"<input "+(e?'checked="" ':"")+'disabled="" type="checkbox"'+(this.options.xhtml?" /":"")+"> "},t.paragraph=function(e){return"<p>"+e+"</p>\n"},t.table=function(e,t){return t&&(t="<tbody>"+t+"</tbody>"),"<table>\n<thead>\n"+e+"</thead>\n"+t+"</table>\n"},t.tablerow=function(e){return"<tr>\n"+e+"</tr>\n"},t.tablecell=function(e,t){var n=t.header?"th":"td",o=t.align?"<"+n+' align="'+t.align+'">':"<"+n+">";return o+e+"</"+n+">\n"},t.strong=function(e){return"<strong>"+e+"</strong>"},t.em=function(e){return"<em>"+e+"</em>"},t.codespan=function(e){return"<code>"+e+"</code>"},t.br=function(){return this.options.xhtml?"<br/>":"<br>"},t.del=function(e){return"<del>"+e+"</del>"},t.link=function(e,t,n){if(e=ne(this.options.sanitize,this.options.baseUrl,e),null===e)return n;var o='<a href="'+oe(e)+'"';return t&&(o+=' title="'+t+'"'),o+=">"+n+"</a>",o},t.image=function(e,t,n){if(e=ne(this.options.sanitize,this.options.baseUrl,e),null===e)return n;var o='<img src="'+e+'" alt="'+n+'"';return t&&(o+=' title="'+t+'"'),o+=this.options.xhtml?"/>":">",o},t.text=function(e){return e},e}(),ie=function(){function e(){}var t=e.prototype;return t.strong=function(e){return e},t.em=function(e){return e},t.codespan=function(e){return e},t.del=function(e){return e},t.html=function(e){return e},t.text=function(e){return e},t.link=function(e,t,n){return""+n},t.image=function(e,t,n){return""+n},t.br=function(){return""},e}(),ae=function(){function e(){this.seen={}}var t=e.prototype;return t.serialize=function(e){return e.toLowerCase().trim().replace(/<[!\/a-z].*?>/gi,"").replace(/[\u2000-\u206F\u2E00-\u2E7F\\'!"#$%&()*+,./:;<=>?@[\]^`{|}~]/g,"").replace(/\s/g,"-")},t.getNextSafeSlug=function(e,t){var n=e,o=0;if(this.seen.hasOwnProperty(n)){o=this.seen[e];do{o++,n=e+"-"+o}while(this.seen.hasOwnProperty(n))}return t||(this.seen[e]=o,this.seen[n]=0),n},t.slug=function(e,t){void 0===t&&(t={});var n=this.serialize(e);return this.getNextSafeSlug(n,t.dryrun)},e}(),se=a.defaults,pe=E.unescape,le=function(){function e(e){this.options=e||se,this.options.renderer=this.options.renderer||new re,this.renderer=this.options.renderer,this.renderer.options=this.options,this.textRenderer=new ie,this.slugger=new ae}e.parse=function(t,n){var o=new e(n);return o.parse(t)},e.parseInline=function(t,n){var o=new e(n);return o.parseInline(t)};var t=e.prototype;return t.parse=function(e,t){void 0===t&&(t=!0);var n,o,r,i,a,s,p,l,c,g,u,d,m,f,h,b,C,k,w="",v=e.length;for(n=0;n<v;n++)switch(g=e[n],g.type){case"space":continue;case"hr":w+=this.renderer.hr();continue;case"heading":w+=this.renderer.heading(this.parseInline(g.tokens),g.depth,pe(this.parseInline(g.tokens,this.textRenderer)),this.slugger);continue;case"code":w+=this.renderer.code(g.text,g.lang,g.escaped);continue;case"table":for(l="",p="",i=g.header.length,o=0;o<i;o++)p+=this.renderer.tablecell(this.parseInline(g.tokens.header[o]),{header:!0,align:g.align[o]});for(l+=this.renderer.tablerow(p),c="",i=g.cells.length,o=0;o<i;o++){for(s=g.tokens.cells[o],p="",a=s.length,r=0;r<a;r++)p+=this.renderer.tablecell(this.parseInline(s[r]),{header:!1,align:g.align[r]});c+=this.renderer.tablerow(p)}w+=this.renderer.table(l,c);continue;case"blockquote":c=this.parse(g.tokens),w+=this.renderer.blockquote(c);continue;case"list":for(u=g.ordered,d=g.start,m=g.loose,i=g.items.length,c="",o=0;o<i;o++)h=g.items[o],b=h.checked,C=h.task,f="",h.task&&(k=this.renderer.checkbox(b),m?h.tokens.length>0&&"text"===h.tokens[0].type?(h.tokens[0].text=k+" "+h.tokens[0].text,h.tokens[0].tokens&&h.tokens[0].tokens.length>0&&"text"===h.tokens[0].tokens[0].type&&(h.tokens[0].tokens[0].text=k+" "+h.tokens[0].tokens[0].text)):h.tokens.unshift({type:"text",text:k}):f+=k),f+=this.parse(h.tokens,m),c+=this.renderer.listitem(f,C,b);w+=this.renderer.list(c,u,d);continue;case"html":w+=this.renderer.html(g.text);continue;case"paragraph":w+=this.renderer.paragraph(this.parseInline(g.tokens));continue;case"text":c=g.tokens?this.parseInline(g.tokens):g.text;while(n+1<v&&"text"===e[n+1].type)g=e[++n],c+="\n"+(g.tokens?this.parseInline(g.tokens):g.text);w+=t?this.renderer.paragraph(c):c;continue;default:var y='Token with "'+g.type+'" type was not found.';if(this.options.silent)return void console.error(y);throw new Error(y)}return w},t.parseInline=function(e,t){t=t||this.renderer;var n,o,r="",i=e.length;for(n=0;n<i;n++)switch(o=e[n],o.type){case"escape":r+=t.text(o.text);break;case"html":r+=t.html(o.text);break;case"link":r+=t.link(o.href,o.title,this.parseInline(o.tokens,t));break;case"image":r+=t.image(o.href,o.title,o.text);break;case"strong":r+=t.strong(this.parseInline(o.tokens,t));break;case"em":r+=t.em(this.parseInline(o.tokens,t));break;case"codespan":r+=t.codespan(o.text);break;case"br":r+=t.br();break;case"del":r+=t.del(this.parseInline(o.tokens,t));break;case"text":r+=t.text(o.text);break;default:var a='Token with "'+o.type+'" type was not found.';if(this.options.silent)return void console.error(a);throw new Error(a)}return r},e}(),ce=E.merge,ge=E.checkSanitizeDeprecation,ue=E.escape,de=a.getDefaults,me=a.changeDefaults,fe=a.defaults;function he(e,t,n){if("undefined"===typeof e||null===e)throw new Error("marked(): input parameter is undefined or null");if("string"!==typeof e)throw new Error("marked(): input parameter is of type "+Object.prototype.toString.call(e)+", string expected");if("function"===typeof t&&(n=t,t=null),t=ce({},he.defaults,t||{}),ge(t),n){var o,r=t.highlight;try{o=ee.lex(e,t)}catch(p){return n(p)}var i=function(e){var i;if(!e)try{i=le.parse(o,t)}catch(p){e=p}return t.highlight=r,e?n(e):n(null,i)};if(!r||r.length<3)return i();if(delete t.highlight,!o.length)return i();var a=0;return he.walkTokens(o,(function(e){"code"===e.type&&(a++,setTimeout((function(){r(e.text,e.lang,(function(t,n){if(t)return i(t);null!=n&&n!==e.text&&(e.text=n,e.escaped=!0),a--,0===a&&i()}))}),0))})),void(0===a&&i())}try{var s=ee.lex(e,t);return t.walkTokens&&he.walkTokens(s,t.walkTokens),le.parse(s,t)}catch(p){if(p.message+="\nPlease report this to https://github.com/markedjs/marked.",t.silent)return"<p>An error occurred:</p><pre>"+ue(p.message+"",!0)+"</pre>";throw p}}he.options=he.setOptions=function(e){return ce(he.defaults,e),me(he.defaults),he},he.getDefaults=de,he.defaults=fe,he.use=function(e){var t=ce({},e);if(e.renderer&&function(){var n=he.defaults.renderer||new re,o=function(t){var o=n[t];n[t]=function(){for(var r=arguments.length,i=new Array(r),a=0;a<r;a++)i[a]=arguments[a];var s=e.renderer[t].apply(n,i);return!1===s&&(s=o.apply(n,i)),s}};for(var r in e.renderer)o(r);t.renderer=n}(),e.tokenizer&&function(){var n=he.defaults.tokenizer||new L,o=function(t){var o=n[t];n[t]=function(){for(var r=arguments.length,i=new Array(r),a=0;a<r;a++)i[a]=arguments[a];var s=e.tokenizer[t].apply(n,i);return!1===s&&(s=o.apply(n,i)),s}};for(var r in e.tokenizer)o(r);t.tokenizer=n}(),e.walkTokens){var n=he.defaults.walkTokens;t.walkTokens=function(t){e.walkTokens(t),n&&n(t)}}he.setOptions(t)},he.walkTokens=function(e,t){for(var n,o=r(e);!(n=o()).done;){var i=n.value;switch(t(i),i.type){case"table":for(var a,s=r(i.tokens.header);!(a=s()).done;){var p=a.value;he.walkTokens(p,t)}for(var l,c=r(i.tokens.cells);!(l=c()).done;)for(var g,u=l.value,d=r(u);!(g=d()).done;){var m=g.value;he.walkTokens(m,t)}break;case"list":he.walkTokens(i.items,t);break;default:i.tokens&&he.walkTokens(i.tokens,t)}}},he.parseInline=function(e,t){if("undefined"===typeof e||null===e)throw new Error("marked.parseInline(): input parameter is undefined or null");if("string"!==typeof e)throw new Error("marked.parseInline(): input parameter is of type "+Object.prototype.toString.call(e)+", string expected");t=ce({},he.defaults,t||{}),ge(t);try{var n=ee.lexInline(e,t);return t.walkTokens&&he.walkTokens(n,t.walkTokens),le.parseInline(n,t)}catch(o){if(o.message+="\nPlease report this to https://github.com/markedjs/marked.",t.silent)return"<p>An error occurred:</p><pre>"+ue(o.message+"",!0)+"</pre>";throw o}},he.Parser=le,he.parser=le.parse,he.Renderer=re,he.TextRenderer=ie,he.Lexer=ee,he.lexer=ee.lex,he.Tokenizer=L,he.Slugger=ae,he.parse=he;var be=he;return be}))},"1a30":function(e,t){var n='<h1 id="computer">Computer</h1> <h2 id="windows-10-安装教程">Windows 10 安装教程</h2> <p>🤣🤣🤣🤣</p> <p>工具：至少8GU盘 、 PE制作器（WePe）</p> <p>教程：</p> <p>1、使用ISO模式制作U盘启动器</p> <p>华硕主板 ： ESC 选择进入</p> <p>技嘉主板: F12 进入主板选择</p> <p>2、进主板U盘启动</p> <p>3、选择第二项的win8PE 新机器m</p> <p>4、格式化C盘，选择iOS文件目录 ， 直接安装即可。</p> <p><a href="https://msdn.itellyou.cn/">https://msdn.itellyou.cn/</a> //原版的Windows镜像下载</p> <h2 id="windows-service-2003-enterprise">WIndows Service 2003 Enterprise</h2> <p>x64 激活密钥：</p> <p>MR78C-GF2CY-KC864-DTG74-VMT73</p> <h2 id="windows-xp-密钥">Windows xp 密钥</h2> <p>MRX3F-47B9T-2487J-KWKMF-RPWBY</p> <pre><code></code></pre><h2 id="百度云高速下载">百度云高速下载</h2> <p>工具：IDM + 油猴脚本 、 速盘 、 百度云管家。等等各种程序</p> <p>chrome安装油猴插件 </p> <p>脚本下载：<a href="https://tampermonkey.net/scripts.php">https://tampermonkey.net/scripts.php</a></p> <p>百度云插件:<a href="https://openuserjs.org/scripts/gxvv/EX-%E7%99%BE%E5%BA%A6%E4%BA%91%E7%9B%98">https://openuserjs.org/scripts/gxvv/EX-%E7%99%BE%E5%BA%A6%E4%BA%91%E7%9B%98</a></p> <p>退出网页版的用户账户，复制下载连接</p> <p>在IDM里面下载即可。</p> <p>IDM可配合超线程下载，最高线程数量能达到256个</p> <p>星愿浏览器也可以高速下载，唯一的缺点是下载压缩包会很慢。</p> <h2 id="访问google及海外网站">访问Google及海外网站</h2> <p>使用VPN系列服务</p> <p>工具推荐：SSR、Hosts</p> <p>可用hosts网址：<a href="https://github.com/racaljk/hosts/blob/master/hosts">https://github.com/racaljk/hosts/blob/master/hosts</a></p> <p>服务器自己寻找即可</p> <h2 id="office-2019-安装">Office 2019 安装</h2> <p><a href="https://www.52pojie.cn/thread-781052-1-1.html">https://www.52pojie.cn/thread-781052-1-1.html</a></p> <p><a href="https://www.52pojie.cn/thread-719550-1-1.html">https://www.52pojie.cn/thread-719550-1-1.html</a></p> <h2 id="百度云搜索工具">百度云搜索工具</h2> <p><a href="http://www.banyungong.org">www.banyungong.org</a></p> <p><a href="https://www.fastsoso.cn/">https://www.fastsoso.cn/</a></p> <h2 id="adb常用命令">ADB常用命令</h2> <p>adb -d shell sh /data/data/me.piebridge.brevent/brevent.sh //黑域 adb shell dpm set-device-owner com.hld.apurikakusu/.receiver.DPMReceiver // 黑洞 adb shell dpm set-device-owner com.catchingnow.icebox/.receiver.DPMReceiver //冰箱</p> <p>adb shell wm overscan 0,0,0,0 //显示导航栏 adb shell wm overscan 0,0,0,-160 //隐藏导航栏 adb shell pm list packages -f // 获取安装列表和路径 adb shell pm list packages //获取包名 adb unistall xxx //卸载XX adb root //提权，输入完没提示。 adb shell //进入adb shell模式，类似DOS。 cd data/system //进入“data/system”目录，锁屏密码文件在这个目录里！删掉就没有密码了~ rm password.key //锁屏密码就也被清除了（要是是手势密码就“rm gesture.key ”） am force-stop XXXXX //强行停止XXX mount -o remount -o rw /system //回车，重新挂载下system ps // adb shell 下查看系统进程 kill pid xxx // 查看后强行停止进程，并无法自启 adb pull XXX E:\\Test\\ttt // 将XX中的包提出到XXX文件下（不能是根目录）</p> <h2 id="cmd命令">CMD命令</h2> <p>calc 调用计算器</p> <p>dir 当前文件目录</p> <p>tree 树形结构</p> <p>wmic cpu get 查看CPU的具体信息</p> <p>ipconfig/flushdns 刷新IE缓存</p> <p>ping 测试网络是否通畅</p> <p>cd 进入目录</p> <p>cd.. 返回上一层目录</p> <p>ping -t <a href="http://www.baidu.com">www.baidu.com</a> //ping Baidu n次</p> <h2 id="putty命令">Putty命令</h2> <p>从本地上传文件</p> <pre><code>pscp -i d:\\test.ppk c:\\test.txt  user_name@server_ip:/tmp</code></pre><pre><code class="language-c++">\npscp -i C:\\Users\\Alphabet\\Desktop\\google_privateKey.ppk C:\\Users\\Alphabet\\Documents\\HBuilderProjects\\Github\\index.html  gwangjiyuan@35.236.106.14:/home/gwangjiyuan</code></pre> <p>从服务器下载文件</p> <pre><code>pscp -i d:\\test.ppk user_name@server_ip:/var/www/test.txt d:\\</code></pre><pre><code>//路由器安装opkg\nwget http://pkg.entware.net/binaries/mipsel/installer/installer.sh &amp;&amp; chmod +x installer.sh  &amp;&amp; ./installer.sh </code></pre><h1 id="programming">Programming</h1> <h2 id="c">c++</h2> <h3 id="析构函数">析构函数</h3> <pre><code class="language-c++">class Stock{\npublic:\n    ~Stock()                     //定义析构函数\n    {\n       std::cout &lt;&lt; &quot;调用了析构函数 &quot; &lt;&lt; std::endl;\n    }\n};\n\nint main()\n{\n   {\n      Stock stock ;   \n   }               // 在部分开发环境中可能没有显示内容，把它放在块儿中即可\n    return 0;   //返回之前调用析构函数;\n}</code></pre> <h3 id="构造函数">构造函数</h3> <pre><code class="language-c++">#include &lt;iostream&gt;\nusing namespace std;\nclass A\n{\npublic:\n     A(){cout&lt;&lt;&quot;A::constructor&quot;&lt;&lt;endl;};\n     ~A(){cout&lt;&lt;&quot;A::deconstructor&quot;&lt;&lt;endl;};\n};\nclass B\n{\npublic:\n     B(){cout&lt;&lt;&quot;B::constructor&quot;&lt;&lt;endl;};\n     ~B(){cout&lt;&lt;&quot;B::deconstructor&quot;&lt;&lt;endl;};\n};\nclass C : public A\n{\npublic:\n     C(){cout&lt;&lt;&quot;C::constructor&quot;&lt;&lt;endl;};\n     ~C(){cout&lt;&lt;&quot;C::deconstructor&quot;&lt;&lt;endl;};\nprivate:\n//    static B b;\n     B b;\n};\nclass D : public C\n{\npublic:\n     D(){cout&lt;&lt;&quot;D::constructor&quot;&lt;&lt;endl;};\n     ~D(){cout&lt;&lt;&quot;D::deconstructor&quot;&lt;&lt;endl;};\n};\n\nint main(void)\n{\n    C* pd = new D();\n    delete pd;\n    return 0;\n}\n/* Output\n-----&gt;B b\nA::constructor\nB::constructor\nC::constructor\nD::constructor\nC::deconstructor\nB::deconstructor\nA::deconstructor\n\n-----&gt;static B b\nA::constructor\nC::constructor\nD::constructor\nC::deconstructor\nA::deconstructor\n */</code></pre> <h2 id="android-developer">Android Developer</h2> <h3 id="背景铺满">背景铺满</h3> <pre><code class="language-java">        android:layout_width=&quot;0dp&quot;\n        android:layout_height=&quot;0dp&quot;\n        android:scaleType=&quot;fitXY&quot;\n        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;\n        app:layout_constraintEnd_toEndOf=&quot;parent&quot;\n        app:layout_constraintHorizontal_bias=&quot;0.0&quot;\n        app:layout_constraintStart_toStartOf=&quot;parent&quot;\n        app:layout_constraintTop_toTopOf=&quot;parent&quot;\n        app:layout_constraintVertical_bias=&quot;0.0&quot;</code></pre> <h3 id="透明按钮">透明按钮</h3> <pre><code class="language-java"> app:layout_constraintTop_toTopOf=&quot;parent&quot; //全透明\n Android:background=&quot;#e0000000&quot;            //全透明\n android:background=&quot;#00000000&quot;            //半透明</code></pre> <h3 id="隐藏title">隐藏title</h3> <pre><code class="language-java">supportRequestWindowFeature(Window.FEATURE_NO_TITLE);\n\n</code></pre> <h3 id="toast-diy">Toast DIY</h3> <pre><code class="language-java">Toast toast(Avtivity , Text , Toast.LENGTH.SHORT);\ntoast.setGravity(Gravity.TOP , 0 , 0);    //最上方居中显示；\ntoast.show();</code></pre> <h1 id="tool">Tool</h1> <h2 id="git-命令：">Git 命令：</h2> <pre><code class="language-c++">//登陆账户和密码：\ngit config --global user.name &quot;wangjiyuanyo&quot;\ngit config --global user.email &quot;anonymous.z@yahoo.com&quot;\n//生成SSH key\ncd ~\nssh-keygen -t rsa -C &quot;anonymous.z@yahoo.com&quot;\n\n//测试git的连通性\nssh -T git@github.com\n\ngit clone \n\ngit status \n\ngit push\n\ngit pull\n\ngit --list\n\n//在当前目录新建一个Git代码库\n\n$ git init\n\n显示当前的Git配置\n$ git config --list\n\n编辑Git配置文件\n$ git config -e [--global]\n\n设置提交代码时的用户信息\n$ git config [--global] user.name &quot;[name]&quot;\n$ git config [--global] user.email &quot;[email address]&quot;\n\n添加指定文件到暂存区\n$ git add [file1][file2] ...\n\n添加指定目录到暂存区，包括子目录\n$ git add [dir]\n\n添加当前目录的所有文件到暂存区\n$ git add .\n\n对于同一个文件的多处变化，可以实现分次提交\n$ git add -p\n\n删除工作区文件，并且将这次删除放入暂存区\n$ git rm [file1][file2] ...\n\n停止追踪指定文件，但该文件会保留在工作区\n$ git rm --cached [file]\n\n改名文件，并且将这个改名放入暂存区\n$ git mv [file-original][file-renamed]\n\n提交暂存区到仓库区\n$ git commit -m [message]\n\n提交暂存区的指定文件到仓库区\n$ git commit [file1][file2] ... -m [message]\n\n提交工作区自上次commit之后的变化，直接到仓库区\n$ git commit -a\n\n提交时显示所有diff信息\n$ git commit -v\n\n使用一次新的commit，替代上一次提交\n\n如果代码没有任何新变化，则用来改写上一次commit的提交信息\n$ git commit --amend -m [message]\n\n重做上一次commit，并包括指定文件的新变化\n$ git commit --amend [file1][file2] ...\n\n 列出所有本地分支\n$ git branch\n\n列出所有远程分支\n$ git branch -r\n\n列出所有本地分支和远程分支\n$ git branch -a\n\n新建一个分支，但依然停留在当前分支\n$ git branch [branch-name]\n\n新建一个分支，并切换到该分支\n$ git checkout -b [branch]\n\n新建一个分支，指向指定commit\n$ git branch [branch] [commit]\n\n新建一个分支，与指定的远程分支建立追踪关系\n$ git branch --track [branch] [remote-branch]\n\n切换到指定分支，并更新工作区\n$ git checkout [branch-name]\n\n切换到上一个分支\n$ git checkout -\n\n 建立追踪关系，在现有分支与指定的远程分支之间\n$ git branch --set-upstream [branch] [remote-branch]\n\n 合并指定分支到当前分支\n$ git merge [branch]\n\n 选择一个commit，合并进当前分支\n$ git cherry-pick [commit]\n\n 删除分支\n git branch -d [branch-name]\n\n 删除远程分支\n$ git push origin --delete [branch-name]\n$ git branch -dr [remote/branch]\n标签\n\n 列出所有tag\n$ git tag\n\n 新建一个tag在当前commit\n$ git tag [tag]\n\n 新建一个tag在指定commit\n$ git tag [tag] [commit]\n\n 删除本地tag\n$ git tag -d [tag]\n\n 删除远程tag\n$ git push origin :refs/tags/[tagName]\n\n查看tag信息\n$ git show [tag]\n\n 提交指定tag\n$ git push [remote] [tag]\n\n 提交所有tag\n$ git push [remote] --tags\n\n 新建一个分支，指向某个tag\n$ git checkout -b [branch] [tag]\n七、查看信息\n\n 显示有变更的文件\n$ git status\n\n显示当前分支的版本历史\n$ git log\n\n 显示commit历史，以及每次commit发生变更的文件\n$ git log --stat\n\n 搜索提交历史，根据关键词\n$ git log -S [keyword]\n\n 显示某个commit之后的所有变动，每个commit占据一行\n$ git log [tag] HEAD --pretty=format:%s\n\n 显示某个commit之后的所有变动，其&quot;提交说明&quot;必须符合搜索条件\n$ git log [tag] HEAD --grep feature\n\n 显示某个文件的版本历史，包括文件改名\n$ git log --follow [file]\n$ git whatchanged [file]\n\n 显示指定文件相关的每一次diff\n$ git log -p [file]\n\n 显示过去5次提交\n$ git log -5 --pretty --oneline\n\n 显示所有提交过的用户，按提交次数排序\n$ git shortlog -sn\n\n 显示指定文件是什么人在什么时间修改过\n$ git blame [file]\n\n 显示暂存区和工作区的代码差异\n$ git diff\n\n 显示暂存区和上一个commit的差异\n$ git diff --cached [file]\n\n 显示工作区与当前分支最新commit之间的差异\n$ git diff HEAD\n\n 显示两次提交之间的差异\n$ git diff [first-branch]...[second-branch]\n\n 显示今天你写了多少行代码\n$ git diff --shortstat &quot;@{0 day ago}&quot;\n\n 显示某次提交的元数据和内容变化\n$ git show [commit]\n\n 显示某次提交发生变化的文件\n$ git show --name-only [commit]\n\n 显示某次提交时，某个文件的内容\n$ git show [commit]:[filename]\n\n 显示当前分支的最近几次提交\n$ git reflog\n\n 从本地master拉取代码更新当前分支：branch 一般为master\n$ git rebase [branch]\n八、远程同步\n\n 下载远程仓库的所有变动\n$ git fetch [remote]\n\n 显示所有远程仓库\n$ git remote -v\n\n 显示某个远程仓库的信息\n$ git remote show [remote]\n\n 增加一个新的远程仓库，并命名\n$ git remote add [shortname] [url]\n\n 取回远程仓库的变化，并与本地分支合并\n$ git pull [remote] [branch]\n\n 上传本地指定分支到远程仓库\n$ git push [remote] [branch]\n\n 强行推送当前分支到远程仓库，即使有冲突\n$ git push [remote] --force\n\n 推送所有分支到远程仓库\n$ git push [remote] --all\n九、撤销\n\n 恢复暂存区的指定文件到工作区\n$ git checkout [file]\n\n 恢复某个commit的指定文件到暂存区和工作区\n$ git checkout [commit] [file]\n\n 恢复暂存区的所有文件到工作区\n$ git checkout .\n\n 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变\n$ git reset [file]\n\n 重置暂存区与工作区，与上一次commit保持一致\n$ git reset --hard\n\n 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变\n$ git reset [commit]\n\n 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致\n$ git reset --hard [commit]\n\n 重置当前HEAD为指定commit，但保持暂存区和工作区不变\n$ git reset --keep [commit]\n\n 新建一个commit，用来撤销指定commit\n 后者的所有变化都将被前者抵消，并且应用到当前分支\n$ git revert [commit]\n\n 暂时将未提交的变化移除，稍后再移入\n$ git stash\n$ git stash pop\n十、其他\n\n 生成一个可供发布的压缩包\n$ git archive</code></pre> <h2 id="linux-常用命令">Linux 常用命令</h2> <p>1、cd命令</p> <p>这是一个非常基本，也是大家经常需要使用的命令，它用于切换当前目录，它的参数是要切换到的目录的路径，可以是绝对路径，也可以是相对路径。如：</p> <pre><code>cd /root/Docements # 切换到目录/root/Docements\n\ncd ./path          # 切换到当前目录下的path目录中，“.”表示当前目录  \n\ncd ../path         # 切换到上层目录中的path目录中，“..”表示上一层目录</code></pre><p>2、ls命令</p> <p>这是一个非常有用的查看文件与目录的命令，list之意，它的参数非常多，下面就列出一些我常用的参数吧，如下：</p> <pre><code>-l ：列出长数据串，包含文件的属性与权限数据等\n\n-a ：列出全部的文件，连同隐藏文件（开头为.的文件）一起列出来（常用）\n\n-d ：仅列出目录本身，而不是列出目录的文件数据\n\n-h ：将文件容量以较易读的方式（GB，kB等）列出来\n\n-R ：连同子目录的内容一起列出（递归列出），等于该目录下的所有文件都会显示出来</code></pre><p>注：这些参数也可以组合使用，下面举两个例子：</p> <pre><code>ls -l #以长数据串的形式列出当前目录下的数据文件和目录\n\nls -lR #以长数据串的形式列出当前目录下的所有文件</code></pre><p>3、grep命令</p> <p>该命令常用于分析一行的信息，若当中有我们所需要的信息，就将该行显示出来，该命令通常与管道命令一起使用，用于对一些命令的输出进行筛选加工等等，它的简单语法为</p> <pre><code>grep [-acinv] [--color=auto] &#39;查找字符串&#39; filename</code></pre><p>它的常用参数如下：</p> <pre><code>-a ：将binary文件以text文件的方式查找数据\n\n-c ：计算找到‘查找字符串’的次数\n\n-i ：忽略大小写的区别，即把大小写视为相同\n\n-v ：反向选择，即显示出没有‘查找字符串’内容的那一行\n\n# 例如：\n\n# 取出文件/etc/man.config中包含MANPATH的行，并把找到的关键字加上颜色\n\ngrep --color=auto &#39;MANPATH&#39; /etc/man.config\n\n# 把ls -l的输出中包含字母file（不区分大小写）的内容输出\n\nls -l | grep -i file</code></pre><p>4、find命令</p> <p>find是一个基于查找的功能非常强大的命令，相对而言，它的使用也相对较为复杂，参数也比较多，所以在这里将给把它们分类列出，它的基本语法如下：</p> <pre><code>find [PATH] [option] [action]\n\n# 与时间有关的参数：\n\n-mtime n : n为数字，意思为在n天之前的“一天内”被更改过的文件；\n\n-mtime +n : 列出在n天之前（不含n天本身）被更改过的文件名；\n\n-mtime -n : 列出在n天之内（含n天本身）被更改过的文件名；\n\n-newer file : 列出比file还要新的文件名\n\n# 例如：\n\nfind /root -mtime 0 # 在当前目录下查找今天之内有改动的文件\n\n# 与用户或用户组名有关的参数：\n\n-user name : 列出文件所有者为name的文件\n\n-group name : 列出文件所属用户组为name的文件\n\n-uid n : 列出文件所有者为用户ID为n的文件\n\n-gid n : 列出文件所属用户组为用户组ID为n的文件\n\n# 例如：\n\nfind /home/ljianhui -user ljianhui # 在目录/home/ljianhui中找出所有者为ljianhui的文件\n\n# 与文件权限及名称有关的参数：\n\n-name filename ：找出文件名为filename的文件\n\n-size [+-]SIZE ：找出比SIZE还要大（+）或小（-）的文件\n\n-tpye TYPE ：查找文件的类型为TYPE的文件，TYPE的值主要有：一般文件（f)、设备文件（b、c）、\n\n             目录（d）、连接文件（l）、socket（s）、FIFO管道文件（p）；\n\n-perm mode ：查找文件权限刚好等于mode的文件，mode用数字表示，如0755；\n\n-perm -mode ：查找文件权限必须要全部包括mode权限的文件，mode用数字表示\n\n-perm +mode ：查找文件权限包含任一mode的权限的文件，mode用数字表示\n\n# 例如：\n\nfind / -name passwd # 查找文件名为passwd的文件\n\nfind . -perm 0755 # 查找当前目录中文件权限的0755的文件\n\nfind . -size +12k # 查找当前目录中大于12KB的文件，注意c表示byte</code></pre><p>5、cp命令</p> <p>该命令用于复制文件，copy之意，它还可以把多个文件一次性地复制到一个目录下，它的常用参数如下：</p> <pre><code>-a ：将文件的特性一起复制\n\n-p ：连同文件的属性一起复制，而非使用默认方式，与-a相似，常用于备份\n\n-i ：若目标文件已经存在时，在覆盖时会先询问操作的进行\n\n-r ：递归持续复制，用于目录的复制行为\n\n-u ：目标文件与源文件有差异时才会复制</code></pre><p>例如 ：</p> <pre><code>cp -a file1 file2 #连同文件的所有特性把文件file1复制成文件file2\n\ncp file1 file2 file3 dir #把文件file1、file2、file3复制到目录dir中</code></pre><p>6、mv命令</p> <p>该命令用于移动文件、目录或更名，move之意，它的常用参数如下：</p> <pre><code>-f ：force强制的意思，如果目标文件已经存在，不会询问而直接覆盖\n\n-i ：若目标文件已经存在，就会询问是否覆盖\n\n-u ：若目标文件已经存在，且比目标文件新，才会更新</code></pre><p>注：该命令可以把一个文件或多个文件一次移动一个文件夹中，但是最后一个目标文件一定要是“目录”。</p> <p>例如：</p> <pre><code>mv file1 file2 file3 dir # 把文件file1、file2、file3移动到目录dir中\n\nmv file1 file2 # 把文件file1重命名为file2</code></pre><p>7、rm命令</p> <p>该命令用于删除文件或目录，remove之间，它的常用参数如下：</p> <pre><code>-f ：就是force的意思，忽略不存在的文件，不会出现警告消息\n\n-i ：互动模式，在删除前会询问用户是否操作\n\n-r ：递归删除，最常用于目录删除，它是一个非常危险的参数</code></pre><p>例如：</p> <pre><code>rm -i file # 删除文件file，在删除之前会询问是否进行该操作\n\nrm -fr dir # 强制删除目录dir中的所有文件</code></pre><p>8、ps命令</p> <p>该命令用于将某个时间点的进程运行情况选取下来并输出，process之意，它的常用参数如下：</p> <pre><code>-A ：所有的进程均显示出来\n\n-a ：不与terminal有关的所有进程\n\n-u ：有效用户的相关进程\n\n-x ：一般与a参数一起使用，可列出较完整的信息\n\n-l ：较长，较详细地将PID的信息列出</code></pre><p>其实我们只要记住ps一般使用的命令参数搭配即可，它们并不多，如下：</p> <pre><code>ps aux # 查看系统所有的进程数据\n\nps ax # 查看不与terminal有关的所有进程\n\nps -lA # 查看系统所有的进程数据\n\nps axjf # 查看连同一部分进程树状态</code></pre><p>9、kill命令</p> <p>该命令用于向某个工作（%jobnumber）或者是某个PID（数字）传送一个信号，它通常与ps和jobs命令一起使用，它的基本语法如下：</p> <pre><code>kill -signal PID</code></pre><p>signal的常用参数如下：</p> <p>注：最前面的数字为信号的代号，使用时可以用代号代替相应的信号。</p> <pre><code>1：SIGHUP，启动被终止的进程\n\n2：SIGINT，相当于输入ctrl+c，中断一个程序的进行\n\n9：SIGKILL，强制中断一个进程的进行\n\n15：SIGTERM，以正常的结束进程方式来终止进程\n\n17：SIGSTOP，相当于输入ctrl+z，暂停一个进程的进行</code></pre><p>例如：</p> <pre><code># 以正常的结束进程方式来终于第一个后台工作，可用jobs命令查看后台中的第一个工作进程\n\nkill -SIGTERM %1 \n\n# 重新改动进程ID为PID的进程，PID可用ps命令通过管道命令加上grep命令进行筛选获得\n\nkill -SIGHUP PID</code></pre><p>10、killall命令</p> <p>该命令用于向一个命令启动的进程发送一个信号，它的一般语法如下：</p> <pre><code>killall [-iIe] [command name]</code></pre><p>它的参数如下：</p> <pre><code>-i ：交互式的意思，若需要删除时，会询问用户\n\n-e ：表示后面接的command name要一致，但command name不能超过15个字符\n\n-I ：命令名称忽略大小写\n\n# 例如：\nkillall -SIGHUP syslogd # 重新启动syslogd</code></pre><p>11、file命令</p> <p>该命令用于判断接在file命令后的文件的基本数据，因为在Linux下文件的类型并不是以后缀为分的，所以这个命令对我们来说就很有用了，它的用法非常简单，基本语法如下：</p> <pre><code>file filename\n\n#例如：\n\nfile ./test</code></pre><p>12、tar命令</p> <p>该命令用于对文件进行打包，默认情况并不会压缩，如果指定了相应的参数，它还会调用相应的压缩程序（如gzip和bzip等）进行压缩和解压。它的常用参数如下：</p> <pre><code>-c ：新建打包文件\n\n-t ：查看打包文件的内容含有哪些文件名\n\n-x ：解打包或解压缩的功能，可以搭配-C（大写）指定解压的目录，注意-c,-t,-x不能同时出现在同一条命令中\n\n-j ：通过bzip2的支持进行压缩/解压缩\n\n-z ：通过gzip的支持进行压缩/解压缩\n\n-v ：在压缩/解压缩过程中，将正在处理的文件名显示出来\n\n-f filename ：filename为要处理的文件\n\n-C dir ：指定压缩/解压缩的目录dir</code></pre><p>上面的解说可以已经让你晕过去了，但是通常我们只需要记住下面三条命令即可：</p> <pre><code>压缩：tar -jcv -f filename.tar.bz2 要被处理的文件或目录名称\n\n查询：tar -jtv -f filename.tar.bz2\n\n解压：tar -jxv -f filename.tar.bz2 -C 欲解压缩的目录</code></pre><p>注：文件名并不定要以后缀tar.bz2结尾，这里主要是为了说明使用的压缩程序为bzip2</p> <p>13、cat命令</p> <p>该命令用于查看文本文件的内容，后接要查看的文件名，通常可用管道与more和less一起使用，从而可以一页页地查看数据。例如：</p> <pre><code>cat text | less # 查看text文件中的内容\n\n# 注：这条命令也可以使用less text来代替</code></pre><p>14、chgrp命令</p> <p>该命令用于改变文件所属用户组，它的使用非常简单，它的基本用法如下：</p> <pre><code>chgrp [-R] dirname/filename\n\n-R ：进行递归的持续对所有文件和子目录更改\n\n# 例如：\nchgrp users -R ./dir # 递归地把dir目录下中的所有文件和子目录下所有文件的用户组修改为users</code></pre><p>15、chown命令</p> <p>该命令用于改变文件的所有者，与chgrp命令的使用方法相同，只是修改的文件属性不同，不再详述。</p> <p>16、chmod命令</p> <p>该命令用于改变文件的权限，一般的用法如下：</p> <pre><code>chmod [-R] xyz 文件或目录\n\n-R：进行递归的持续更改，即连同子目录下的所有文件都会更改</code></pre><p>同时，chmod还可以使用u（user）、g（group）、o（other）、a（all）和+（加入）、-（删除）、=（设置）跟rwx搭配来对文件的权限进行更改。</p> <pre><code># 例如：\n\n\n\nchmod 0755 file # 把file的文件权限改变为-rxwr-xr-x\n\n\n\nchmod g+w file # 向file的文件权限中加入用户组可写权限</code></pre><p>18、vim命令</p> <p>该命令主要用于文本编辑，它接一个或多个文件名作为参数，如果文件存在就打开，如果文件不存在就以该文件名创建一个文件。vim是一个非常好用的文本编辑器，它里面有很多非常好用的命令，在这里不再多说。你可以从这里下载<a href="http://download.csdn.net/detail/ljianhui/6215287">vim常用操作</a>的详细说明。</p> <p>19、gcc命令</p> <p>对于一个用Linux开发C程序的人来说，这个命令就非常重要了，它用于把C语言的源程序文件，编译成可执行程序，由于g++的很多参数跟它非常相似，所以这里只介绍gcc的参数，它的常用参数如下：</p> <pre><code>-o ：output之意，用于指定生成一个可执行文件的文件名\n\n-c ：用于把源文件生成目标文件（.o)，并阻止编译器创建一个完整的程序\n\n-I ：增加编译时搜索头文件的路径\n\n-L ：增加编译时搜索静态连接库的路径\n\n-S ：把源文件生成汇编代码文件\n\n-lm：表示标准库的目录中名为libm.a的函数库\n\n-lpthread ：连接NPTL实现的线程库\n\n-std= ：用于指定把使用的C语言的版本\n\n# 例如：\n\n# 把源文件test.c按照c99标准编译成可执行程序test\n\ngcc -o test test.c -lm -std=c99\n\n#把源文件test.c转换为相应的汇编程序源文件test.s\n\ngcc -S test.c</code></pre><p>20、time命令</p> <p>该命令用于测算一个命令（即程序）的执行时间。它的使用非常简单，就像平时输入命令一样，不过在命令的前面加入一个time即可，例如：</p> <pre><code>time ./process\n\ntime ps aux</code></pre><p>在程序或命令运行结束后，在最后输出了三个时间，它们分别是：</p> <p>user：用户CPU时间，命令执行完成花费的用户CPU时间，即命令在用户态中执行时间总和；</p> <p>system：系统CPU时间，命令执行完成花费的系统CPU时间，即命令在核心态中执行时间总和；</p> <p>real：实际时间，从command命令行开始执行到运行终止的消逝时间；</p> <p>注：用户CPU时间和系统CPU时间之和为CPU时间，即命令占用CPU执行的时间总和。实际时间要大于CPU时间，因为Linux是多任务操作系统，往往在执行一条命令时，系统还要处理其它任务。另一个需要注意的问题是即使每次执行相同命令，但所花费的时间也是不一样，其花费时间是与系统运行相关的。</p> <h1 id="vps搭建website">VPS搭建website</h1> <p>安装 yum 命令：sudo su apt-get install yum\\</p> <h1 id="computer-network">Computer Network</h1> <h3 id="三次握手">三次握手</h3> <h3 id="四次挥手">四次挥手</h3> <h1 id="os">OS</h1> <h1 id="mysql-错误">MySQL 错误</h1> <p>Unable to load authentication plugin &#39;caching_sha2_password&#39;.</p> <pre><code class="language-sql">ALTER USER &#39;student&#39;@&#39;localhost&#39; IDENTIFIED WITH mysql_native_password BY &#39;pass123&#39;;</code></pre> <h1 id="frp-配置文件">Frp 配置文件</h1> <h2 id="server-">Server :</h2> <pre><code class="language-json">[common]\nbind_port = 7000\nvhost_http_port =80\ndashboard_port = 8080\ndashboard_user = wongjiyuan\ndashboard_pwd = www.gogole.com\nprivilege_token = qq794439137</code></pre> <h2 id="cilent-">Cilent :</h2> <pre><code>[common]\nserver_addr = 35.229.211.122\nserver_port = 7000\nprivilege_token = qq794439137\nlogin_fail_exit = false\n\n[ssh]\ntype = tcp\nlocal_ip = 127.0.0.1\nlocal_port = 22\n\nremote_port = 8888\n\n[ssh]\ntype = tcp\nlocal_ip = 127.0.0.1\nlocal_port = 22\nremote_port = 6000\n\n[mikutap]\ntype = http\nlocal_ip = 192.168.1.1\nlocal_port = 80\ncustom_domains = router.wongjiyuan.top\n\n[myweb01]\ntype = http\nlocal_ip = 192.168.1.2\nlocal_port = 8080\ncustom_domains = web.wongjiyuan.top\nlocations = /\n\n[myweb02]\ntype = http\nlocal_port = 8080\ncustom_domains = web.wongjiyuan.top\nlocations = /hrmapp\n\n[ftp21]\ntype = tcp\nlocal_ip = 127.0.0.1\nlocal_port = 21\nremote_port = 2121\n</code></pre><h2 id="frp-自启文件配置">Frp 自启文件配置</h2> <pre><code class="language-shell">sudo -i\ncd /lib/systemd/system\n然后使用nano编辑器新建frpc.service服务文件：\n\nnano frpc.service\n在文件中加入如下代码：\n[Unit]\nDescription=frpc\ndaemonAfter=network.target\n\n[Service]\nUser=root\nType=simple\nExecStartPre=/bin/sleep 10\nExecStart=/usr/local/frp/frpc -c /usr/local/frp/frpc.ini\n\n[Install]\nWantedBy=multi-user.target\n\n\n最后使用systemctl将frpc.service启动，同时设置frpc开机自启：\nsystemctl start frpc\nsystemctl enable frpc</code></pre> <h2 id="网站证书申请">网站证书申请</h2> <pre><code class="language-bash">apt update &amp;&amp; apt full-upgrade -y\napt install certbot\ncertbot certonly --standalone -n --agree-tos --email 794439137@qq.com --preferred-challenges http -d wongjiyuan.top</code></pre> <h1 id="nginx-部署vue">Nginx 部署VUE</h1> <pre><code>配置文件路径： /etc/nginx/sites-enabled\n项目部署路径：    /var/www\n</code></pre><p>Nginx 命令：</p> <pre><code class="language-bash">nginx                             #打开 nginx\nnginx -t                           #测试配置文件是否有语法错误\nnginx -s reopen                    #重启Nginx\nnginx -s reload                      #重新加载Nginx配置文件，然后以优雅的方式重启Nginx\nnginx -s stop                          #强制停止Nginx服务\nnginx -s quit                          #优雅地停止Nginx服务（即处理完所有请求后再停止服务）原文出处链接及本声明。</code></pre> ';e.exports=n},"1f64d":function(e,t,n){},3976:function(e,t,n){},4536:function(e,t,n){var o={"./MySql.md":"cbfa","./Spring.md":"5cd4","./SpringBoot.md":"550d","./computer.md":"ef4c","./technology.md":"1a30"};function r(e){var t=i(e);return n(t)}function i(e){if(!n.o(o,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return o[e]}r.keys=function(){return Object.keys(o)},r.resolve=i,e.exports=r,r.id="4536"},"550d":function(e,t){var n='<h1 id="spring-boot入门">Spring Boot入门</h1> <h2 id="1springboot简介">1.SpringBoot简介</h2> <blockquote> <p>简化SPring开发的一个框架；</p> <p>整合Spring技术栈的一个大集合</p> <p>J2EE开发的一站式解决方案</p> </blockquote> <h2 id="微服务">微服务</h2> <p>微服务是一种架构风格</p> <p>一个应用应该是一组小型服务：可以通过HTTP的方式进行互通</p> <p>每一个功能元素最终都是一个可独立替换和升级的软件单元</p> <p><a href="https://www.martinfowler.com/articles/microservices.html">微服务文档</a></p> <h1 id="spring-boot-helloworld">Spring Boot HelloWorld</h1> <p>1.创建Maven 工程</p> <p>2.导入相关依赖</p> <pre><code class="language-xml">&lt;parent&gt;\n        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;\n        &lt;version&gt;1.5.2.RELEASE&lt;/version&gt;\n    &lt;/parent&gt;\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;</code></pre> <p>3.主程序启动SpringBoot</p> <pre><code class="language-Java">@SpringBootApplication\npublic class HelloWorldMainApplication {\n    public static void main(String[] args) {\n        //启动\n        SpringApplication.run(HelloWorldMainApplication.class,args);\n    }\n}</code></pre> <p>4编写相关的Controller、、、</p> <pre><code class="language-Java">@Controller\npublic class HelloController {\n\n    @ResponseBody\n    @RequestMapping(&quot;/hello&quot;)\n    public String hello(){\n        return &quot;Hello World&quot;;\n    }\n}</code></pre> <p>5.运行主程序测试</p> <p>6.简化部署</p> <pre><code class="language-xml">    &lt;build&gt;\n        &lt;plugins&gt;\n            &lt;plugin&gt;\n                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;\n            &lt;/plugin&gt;\n        &lt;/plugins&gt;\n    &lt;/build&gt;</code></pre> <p>将这个应用打包成Jar包，直接使用-java -jar运行</p> <h1 id="springboot配置文件">SpringBoot配置文件</h1> <p>​ SpringBoot使用一个全局配置文件</p> <p>​ application.properties</p> <p>​ application.yml</p> <p>作用：修改Spring Boot的默认值；</p> <p>YAML：一个标记语言</p> <p>标记语言：以前大多数配置文件都是 xxx.xml文件</p> <p>以数据为中心，比Json\\xml等更适合做配置文件</p> <h3 id="1三种配置方式">1.三种配置方式</h3> <p>xml配置方式：</p> <pre><code class="language-xml">&lt;server&gt;\n    &lt;port&gt;8081&lt;/port&gt;\n&lt;/server&gt;</code></pre> <p>application.properties配置方式</p> <pre><code class="language-properties">server.port=8081</code></pre> <p>application.yml配置方式</p> <pre><code class="language-yaml">server:\n  port: 8081</code></pre> <h3 id="2yaml语法">2.YAML语法</h3> <h4 id="1基本语法：">1.基本语法：</h4> <p>K: v：表示一对键值对(必须有空格)</p> <p>以<strong>空格</strong>的缩进来控制层级的关系；只要左对齐的一列数据，都是同一个层级的</p> <pre><code class="language-yml">server:\n  port:8080\n  path:/hello</code></pre> <p>属性和值大小写敏感</p> <h4 id="2值的写法字面量">2.值的写法字面量</h4> <p><strong>（数字，字符串，布尔）</strong></p> <p>​ K:v：字面直接来写</p> <p>​ 字符串默认不加单引号或双引号</p> <p>​ &quot;&quot;：双引号会转义字符串里面的特殊字符</p> <p>​ name:&quot;zhangsan \\n lisi&quot; 输出：zhangsan 换行 lisi</p> <p>​ &#39;&#39;：单引号不会转义特殊字符</p> <p>​ name:&quot;zhangsan \\n lisi&quot; 输出：zhangsan \\n lisi</p> <p><strong>对象，Map（属性和值）（键值对）</strong></p> <p>​ 对象还是k:v的值</p> <pre><code class="language-yaml">friends:\n    lastname:zhangsan\n    age:20</code></pre> <p>行内写法</p> <pre><code>friends:{lastName:zhangsan,age:20}</code></pre><p><strong>数组（List Set）</strong></p> <p>用值表示数组中的一个元素</p> <pre><code class="language-yaml">pets:\n- cat\n- dog\n- pig</code></pre> <p>行内写法</p> <pre><code class="language-yaml">pets:[cat,dog,pig]</code></pre> <h4 id="3配置文件注入">3.配置文件注入</h4> <p>配置文件：</p> <pre><code class="language-yaml">server:\n  port: 8081\n\nperson:\n   lastName: zhangsan\n   age: 18\n   boss: false\n   birth: 2017/12/12\n   maps: {k1: v1,k2: v2}\n   lists:\n     - lisi\n     - zhaoliu\n   dog:\n     name: 小狗\n     age: 2</code></pre> <p>JavaBean:</p> <pre><code class="language-java">@Component\n@ConfigurationProperties(prefix = &quot;person&quot;)\npublic class Person {\n\n     /**\n      * @description: 把每一个属性的值映射到组件中\n      */\n    private String lastName;\n    private Integer age;\n    private Boolean boss;\n    private Date birth;\n\n    private Map&lt;String ,Object &gt; maps;\n    private List&lt;Object&gt;lists;\n    private Dog dog;\n</code></pre> <p>我们可以导入配置文件处理器。以后编写配置文件就有提示了</p> <pre><code class="language-xml">&lt;dependency&gt;\n    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-boot-configuration-processor&lt;/artifactId&gt;\n    &lt;optional&gt;true&lt;/optional&gt;\n&lt;/dependency&gt;</code></pre> <h4 id="两种注解的比较">两种注解的比较</h4> <p><img src="C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200816000153150.png" alt="image-20200816000153150"></p> <h1 id="propertysourceimportresource">@PropertySource&amp;@ImportResource</h1> <p>@PropertySource：加载指定的配置文件</p> <p><img src="C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200816225818485.png" alt="image-20200816225818485"></p> <p>@ImportResource：导入Spring的配置文件，让配置文件内的内容生效</p> <p>SpringBoot里面没有Spring的配置文件。我们自己写的配置文件，也不能自动识别</p> <p>想让Spring的配置文件生效，加载进来；<strong>@ImportResource</strong>标注在一个<strong>配置类</strong>上</p> <p><img src="C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200816230827053.png" alt="image-20200816230827053"></p> <p><img src="C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200816230924331.png" alt="image-20200816230924331"></p> <p>SptringBoot推荐给容器中添加组建的方式：推荐使用全注解方式</p> <p>1.配置类====Spring配置文件</p> <p>2.使用@Bean给容器添加组件</p> <p><img src="C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200816231834694.png" alt="image-20200816231834694"></p> <h1 id="配置文件占位符">配置文件占位符</h1> <h2 id="1、随机数">1、随机数</h2> <p><img src="C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200817113435140.png" alt="image-20200817113435140"></p> <h2 id="2占位符获取之前配置的值，如果没有可以设置默认值">2.占位符获取之前配置的值，如果没有可以设置默认值</h2> <p><img src="C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200817113548183.png" alt="image-20200817113548183"></p> <h1 id="profile">Profile</h1> <h2 id="1多profile文件">1.多Profile文件</h2> <p>我们在配置文件编写的时候，文件名可以是<strong>application-{profile}.properties/yml</strong></p> <p>默认使用application.properties</p> <p><img src="C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200817114905310.png" alt="image-20200817114905310"></p> <h2 id="2yml支持多文档块方式">2.yml支持多文档块方式</h2> <p><img src="C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200817115454532.png" alt="image-20200817115454532"></p> <h2 id="3激活指定profile">3.激活指定Profile</h2> <p><img src="C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200817114925425.png" alt="image-20200817114925425"></p> <p>1.在配置文件中指定 spring.profiles.cative=dev</p> <p>2.命令行:</p> <p>​ <strong>--spring.profiles.active=dev</strong></p> <p>打包后的命令行</p> <p><strong>java -jar spring-boot-02-config-0.0.1-SNAPSHOT.jar --spring.profiles.active=prod</strong></p> <p>可以直接在测试时，传入命令行参数</p> <p><img src="C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200817115817429.png" alt="image-20200817115817429"></p> <p><img src="C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200817120220370.png" alt="image-20200817120220370"></p> <p>3.虚拟机参数</p> <p><strong>-Dspring.profiles.active=dev</strong></p> <p><img src="C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200817120505331.png" alt="image-20200817120505331"></p> <h1 id="配置文件加载位置（优先级）">配置文件加载位置（优先级）</h1> <p><img src="C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200817171214218.png" alt="image-20200817171214218"></p> <p><img src="C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200818175136302.png" alt="image-20200818175136302"></p> <p>优先级由高到低，高优先级配置会覆盖低优先级的配置；</p> <p>SpringBoot会从这四个位置全部加载主配置文件：<strong>互补配置</strong></p> <p><img src="C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200817171943050.png" alt="image-20200817171943050"></p> <p><img src="C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200817172015097.png" alt="image-20200817172015097">、</p> <p>==我们还可以通过spring.config.location来改变默认的配置文件位置==</p> <p>项目打包后，可以使用命令行参数的形式，启动项目的时候来指定配置文件的新位置；指定配置文件和默认加载的这些配置文件共同起作用形成互补配置</p> <p><img src="C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200817172748534.png" alt="image-20200817172748534"></p> <h1 id="自动配置原理">自动配置原理</h1> <p><strong>自动配置原理</strong></p> <p>1）SpringBoot启动的时候加载主配置类，开启了自动配置功能<strong>@EnableAutoConfiguration</strong></p> <p>2)@EnableAutoConfiguration作用：</p> <p>​ 利用EnableAutoConfigurationImportSelector给容器中导入一些组件？</p> <p>​ 可以插件selectImports()的内容 获取候选的配置</p> <pre><code class="language-java"> List&lt;String&gt; configurations = SpringFactoriesLoader.loadFactoryNames(this.getSpringFactoriesLoaderFactoryClass(), this.getBeanClassLoader());</code></pre> <p>将类路径下META/INF/spring.factories里面所用EnableAutoConfigration的值加入到容器中</p> <pre><code class="language-properties"># Auto Configure\norg.springframework.boot.autoconfigure.EnableAutoConfiguration=\\\norg.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration,\\\norg.springframework.boot.autoconfigure.aop.AopAutoConfiguration,\\\norg.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration,\\\norg.springframework.boot.autoconfigure.batch.BatchAutoConfiguration,\\\norg.springframework.boot.autoconfigure.cache.CacheAutoConfiguration,\\\norg.springframework.boot.autoconfigure.cassandra.CassandraAutoConfiguration,\\\norg.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration,\\\norg.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration,\\\norg.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration,\\\norg.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration,\\\norg.springframework.boot.autoconfigure.couchbase.CouchbaseAutoConfiguration,\\\norg.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.cassandra.CassandraDataAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.cassandra.CassandraReactiveDataAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.cassandra.CassandraReactiveRepositoriesAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.cassandra.CassandraRepositoriesAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.couchbase.CouchbaseDataAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.couchbase.CouchbaseReactiveDataAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.couchbase.CouchbaseReactiveRepositoriesAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.couchbase.CouchbaseRepositoriesAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchDataAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchRepositoriesAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.elasticsearch.ReactiveElasticsearchRepositoriesAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.elasticsearch.ReactiveElasticsearchRestClientAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.jdbc.JdbcRepositoriesAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.ldap.LdapRepositoriesAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.mongo.MongoReactiveDataAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.mongo.MongoReactiveRepositoriesAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.mongo.MongoRepositoriesAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.neo4j.Neo4jRepositoriesAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.solr.SolrRepositoriesAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.r2dbc.R2dbcDataAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.r2dbc.R2dbcRepositoriesAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.r2dbc.R2dbcTransactionManagerAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.redis.RedisReactiveAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.rest.RepositoryRestMvcAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration,\\\norg.springframework.boot.autoconfigure.elasticsearch.ElasticsearchRestClientAutoConfiguration,\\\norg.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration,\\\norg.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration,\\\norg.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration,\\\norg.springframework.boot.autoconfigure.gson.GsonAutoConfiguration,\\\norg.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration,\\\norg.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration,\\\norg.springframework.boot.autoconfigure.hazelcast.HazelcastAutoConfiguration,\\\norg.springframework.boot.autoconfigure.hazelcast.HazelcastJpaDependencyAutoConfiguration,\\\norg.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration,\\\norg.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration,\\\norg.springframework.boot.autoconfigure.influx.InfluxDbAutoConfiguration,\\\norg.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration,\\\norg.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration,\\\norg.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration,\\\norg.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,\\\norg.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration,\\\norg.springframework.boot.autoconfigure.jdbc.JndiDataSourceAutoConfiguration,\\\norg.springframework.boot.autoconfigure.jdbc.XADataSourceAutoConfiguration,\\\norg.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration,\\\norg.springframework.boot.autoconfigure.jms.JmsAutoConfiguration,\\\norg.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration,\\\norg.springframework.boot.autoconfigure.jms.JndiConnectionFactoryAutoConfiguration,\\\norg.springframework.boot.autoconfigure.jms.activemq.ActiveMQAutoConfiguration,\\\norg.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfiguration,\\\norg.springframework.boot.autoconfigure.jersey.JerseyAutoConfiguration,\\\norg.springframework.boot.autoconfigure.jooq.JooqAutoConfiguration,\\\norg.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration,\\\norg.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration,\\\norg.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration,\\\norg.springframework.boot.autoconfigure.ldap.embedded.EmbeddedLdapAutoConfiguration,\\\norg.springframework.boot.autoconfigure.ldap.LdapAutoConfiguration,\\\norg.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration,\\\norg.springframework.boot.autoconfigure.mail.MailSenderAutoConfiguration,\\\norg.springframework.boot.autoconfigure.mail.MailSenderValidatorAutoConfiguration,\\\norg.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongoAutoConfiguration,\\\norg.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration,\\\norg.springframework.boot.autoconfigure.mongo.MongoReactiveAutoConfiguration,\\\norg.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration,\\\norg.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration,\\\norg.springframework.boot.autoconfigure.quartz.QuartzAutoConfiguration,\\\norg.springframework.boot.autoconfigure.r2dbc.R2dbcAutoConfiguration,\\\norg.springframework.boot.autoconfigure.rsocket.RSocketMessagingAutoConfiguration,\\\norg.springframework.boot.autoconfigure.rsocket.RSocketRequesterAutoConfiguration,\\\norg.springframework.boot.autoconfigure.rsocket.RSocketServerAutoConfiguration,\\\norg.springframework.boot.autoconfigure.rsocket.RSocketStrategiesAutoConfiguration,\\\norg.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration,\\\norg.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration,\\\norg.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration,\\\norg.springframework.boot.autoconfigure.security.reactive.ReactiveSecurityAutoConfiguration,\\\norg.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration,\\\norg.springframework.boot.autoconfigure.security.rsocket.RSocketSecurityAutoConfiguration,\\\norg.springframework.boot.autoconfigure.security.saml2.Saml2RelyingPartyAutoConfiguration,\\\norg.springframework.boot.autoconfigure.sendgrid.SendGridAutoConfiguration,\\\norg.springframework.boot.autoconfigure.session.SessionAutoConfiguration,\\\norg.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration,\\\norg.springframework.boot.autoconfigure.security.oauth2.client.reactive.ReactiveOAuth2ClientAutoConfiguration,\\\norg.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration,\\\norg.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerAutoConfiguration,\\\norg.springframework.boot.autoconfigure.solr.SolrAutoConfiguration,\\\norg.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration,\\\norg.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration,\\\norg.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration,\\\norg.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration,\\\norg.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration,\\\norg.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration,\\\norg.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration,\\\norg.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration,\\\norg.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration,\\\norg.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration,\\\norg.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration,\\\norg.springframework.boot.autoconfigure.web.reactive.error.ErrorWebFluxAutoConfiguration,\\\norg.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration,\\\norg.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration,\\\norg.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration,\\\norg.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration,\\\norg.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration,\\\norg.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration,\\\norg.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration,\\\norg.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration,\\\norg.springframework.boot.autoconfigure.websocket.reactive.WebSocketReactiveAutoConfiguration,\\\norg.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration,\\\norg.springframework.boot.autoconfigure.websocket.servlet.WebSocketMessagingAutoConfiguration,\\\norg.springframework.boot.autoconfigure.webservices.WebServicesAutoConfiguration,\\\norg.springframework.boot.autoconfigure.webservices.client.WebServiceTemplateAutoConfiguration</code></pre> <p>3)每一个这样的类：xxxAutoConfigration类都是容器中的一个组件；都加入到容器中；用他们来做自动配置</p> <p>4)以<strong>HttpEncodingAutoConfiguration</strong>为例解释自动配置原理</p> <pre><code class="language-java">@Configuration(\n    proxyBeanMethods = false\n)   //表示这是一个配置类，和配置文件一样，向容器中添加组件\n@EnableConfigurationProperties({ServerProperties.class}) //启动指定的ConfigurationProperties功能；将配置文件中对应的值和HttpEncodingProperties绑定起来；并把HttpEncodingProperties加入到IOC容器中\n@ConditionalOnWebApplication(  //Spring底层@Conditional注解，根据不同的条件，如果满足指定的条件，整个配置类里面的配置就会生效；  判断当前应用是否是web应用，如果是当前配置类生效。\n    type = Type.SERVLET\n)\n@ConditionalOnClass({CharacterEncodingFilter.class}) //判断当前项目是否存在这个类CharacterEncodingFilter；SpringMVC中进行乱码解决的过滤器\n\n@ConditionalOnProperty( //判断配置文件中是否存在某个配置server.servlet.encoding.enable;如果不存在也为true；\n    //即使不配置为true也默认为生效\n    prefix = &quot;server.servlet.encoding&quot;,\n    value = {&quot;enabled&quot;},\n    matchIfMissing = true\n)\n\n\npublic class HttpEncodingAutoConfiguration {\n\n    //他已经和springBoot的配置文件映射\n    private final Encoding properties;\n    //只有一个油藏构造器的情况下，参数的值从容器中拿\n    public HttpEncodingAutoConfiguration(ServerProperties properties) {\n        this.properties = properties.getServlet().getEncoding();\n    }\n\n\n    @Bean //给容器中添加一个组件；这个组件的某些值需要从properties中获取\n    @ConditionalOnMissingBean\n    public CharacterEncodingFilter characterEncodingFilter() {\n        CharacterEncodingFilter filter = new OrderedCharacterEncodingFilter();\n        filter.setEncoding(this.properties.getCharset().name());\n        filter.setForceRequestEncoding(this.properties.shouldForce(org.springframework.boot.web.servlet.server.Encoding.Type.REQUEST));\n        filter.setForceResponseEncoding(this.properties.shouldForce(org.springframework.boot.web.servlet.server.Encoding.Type.RESPONSE));\n        return filter;\n    }\n}\n</code></pre> <p>根据当前不同的条件判断，决定这个配置类是否生效</p> <p>一旦这个配置类生效；这个配置类就会给容器中添加各种组件；这些组件的属性是从对应的properties类中获取的，这些类里面的每一个属性又是和配置文件绑定的；</p> <p>5）所有配置文件中能配置的属性都是在xxxProperties类中的封装者；配置文件将能配置什么就可以参照某个功能对应的这个属性类</p> <pre><code class="language-java">@ConfigurationProperties(   //从配置文件中获取指定的值和Bean的属性进行绑定\n    prefix = &quot;server&quot;,\n    ignoreUnknownFields = true\n)</code></pre> <p><strong>精髓：</strong></p> <p>​ <strong>1）SpringBoot启动会加载大量的自动配置类</strong></p> <p>​ <strong>2）我们看我们需要的功能有没有SpringBoot默认写好的自动配置类</strong></p> <p>​ <strong>3）我们在看这个自动配置类中到底配置了那些组件（只要我们要用到的组件有，我们就不需要再来配置类）</strong></p> <p>​ <strong>4）给容器中自动配置类添加组件的时候，会从Properties类中获取某些属性。我们就可以在配置文件中指定这些属性</strong></p> <p>xxxAutoConfigurartion：自动配置类</p> <p>给容器中添加组件</p> <p>xxxProperties：封装配置文件中相关属性；</p> <h2 id="细节："><strong>细节</strong>：</h2> <p>@Conditional：条件为true则像容器中添加组件，配置里面的所有内容才生效</p> <p><img src="C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200818190716900.png" alt="image-20200818190716900"></p> <p><strong>自动配置类必须在一定条件下才能生效</strong></p> <p>我们怎么知道那些自动配置类生效</p> <p>启动Debug=ture属性让控制台打印报告，我们就可以很方便的知道那些配置类生效</p> <p><img src="C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200818191548079.png" alt="image-20200818191548079"></p> <h1 id="spring-boot与日志">Spring Boot与日志</h1> <h1 id="日志">日志</h1> <h2 id="1日志框架">1.日志框架</h2> <p>底层是SpringBoot；底层是Spring框架，Spring框架默认用的是JCL</p> <p> <strong>SpringBoot选用SLF4和logback</strong></p> <h2 id="2slfj的使用">2.SLFj的使用</h2> <h3 id="1如何在系统中使用slf4j">1.如何在系统中使用SLF4j</h3> <p>开发的时候，日志记录方法的调用，不应该来直接俄调用日志的实现类，而是调用日志抽象层的方法：</p> <p>给系统里面导入slf4j的Jar和logback的实现Jar </p> <pre><code class="language-java">import org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\npublic class HelloWorld {\n  public static void main(String[] args) {\n    Logger logger = LoggerFactory.getLogger(HelloWorld.class);\n    logger.info(&quot;Hello World&quot;);\n  }</code></pre> <p><img src="C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200819230535396.png" alt="image-20200819230535396"></p> <p>每一个日志的实现框架都有自己的配置文件，使用slf4j以后<strong>，配置文件还是做成日志实现框架自己本身的配置文件</strong></p> <h3 id="2依赖框架">2.依赖框架</h3> <p>a（slf4j+logback）：Spring（commons-logging）Hibernate(jboss-logging) </p> <p>统一日志记录，即使是别的框架和我一起统一使用slf4j进行输出</p> <p><img src="C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200819231517927.png" alt="image-20200819231517927"></p> <p><strong>==如何让系统中所有的日志统一到dslf4j？</strong>==</p> <ol> <li>==将系统中其他日志框架先排除出去：==</li> <li>==用中间包来替换原有的日志框架；==</li> <li>==导入slf4j其他的实现==</li> </ol> <h2 id="3spring-boot日志关系">3.Spring Boot日志关系</h2> <pre><code class="language-xml">    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n        &lt;/dependency&gt;</code></pre> <p>​ SpringBoot使用它来</p> <pre><code class="language-xml">    &lt;dependency&gt;\n      &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n      &lt;artifactId&gt;spring-boot-starter-logging&lt;/artifactId&gt;\n      &lt;version&gt;2.3.3.RELEASE&lt;/version&gt;\n      &lt;scope&gt;compile&lt;/scope&gt;\n    &lt;/dependency&gt;</code></pre> <p><img src="C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200819232853247.png" alt="image-20200819232853247"></p> <p>总结：</p> <p>1）SB底层也是使用slf4j+logback的记录方式进行日志记录</p> <p>2) SB也把其他的日志都替换成了slf4j</p> <p>3) 中间替换包</p> <p>4）如果要引入其他框架，一定要把这个框架的默认依赖移除掉</p> <p>​ SP使用的是commons-logging</p> <p>SP能自动适配所有的日志，而且底层使用slf4j_logback的方式记录日志，引入其他框架的时候自动排出</p> <h2 id="4日志使用；">4.日志使用；</h2> <h3 id="1默认配置">1.默认配置</h3> <p>​ SP默认配置好了日志；</p> <p><img src="C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200819235036010.png" alt="image-20200819235036010"></p> <p><img src="C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200819235053431.png" alt="image-20200819235053431"></p> <h4 id="loggingfilename">Logging.file.name</h4> <p><img src="C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200819235804460.png" alt="image-20200819235804460"></p> <h4 id="loggingfilepath">Logging.file.path</h4> <p><img src="C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200819235712590.png" alt="image-20200819235712590"></p> <h4 id="loggingpatternfile---loggingpatternconsole">Logging.pattern.file &amp; Logging.pattern.console</h4> <p><img src="C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200820000418187.png" alt="image-20200820000418187"></p> <h1 id="四、web开发">四、Web开发</h1> <p>使用SB开发</p> <p>1）创建项目应用选中所需要的组件</p> <p>2）SB默认配置好场景，只需要在配置文件中指定少量配置就可以运行起来</p> <p>3）自己编写业务代码</p> <p>自动配置原理：</p> <h1 id="五、整合数据库">五、整合数据库</h1> <h2 id="1整合druid">1.整合Druid</h2> <p><img src="C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201004002500755.png" alt="image-20201004002500755"></p> <pre><code class="language-yaml">spring:\n  datasource:\n    username: root\n    password: root\n    url: jdbc:mysql://localhost:3306/plant\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.alibaba.druid.pool.DruidDataSource\n\n    initiaSize: 5\n    minIdle: 5\n    maxActive: 20\n    maxWait: 60000\n    timeBetweenEvictionRunsMillis: 60000\n    minEvictableIdleTimeMillis: 300000\n    validationQuery: SELECT 1 FROM DUAL\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n    filters: stat,wall,log4j\n    MaxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    ConnectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500</code></pre> <p>config/DruidConfig</p> <pre><code class="language-java">\n@Configuration\npublic class DruidConfig {\n\n    @ConfigurationProperties(prefix = &quot;spring.datasource&quot;)\n    @Bean\n    public DataSource druid() {\n        return new DruidDataSource();\n    }\n\n    //配置监控\n    //1. 管理后台的Servlet\n\n    @Bean\n    public ServletRegistrationBean statViewServlet() {\n        ServletRegistrationBean bean = new ServletRegistrationBean(new StatViewServlet(), &quot;/druid/*&quot;);\n        Map&lt;String, String&gt; initMaps = new HashMap&lt;&gt;();\n\n        initMaps.put(&quot;loginUsername&quot;, &quot;admin&quot;);\n        initMaps.put(&quot;loginPassword&quot;, &quot;admin&quot;);\n        // 不写允许所有\n        initMaps.put(&quot;allow&quot;, &quot;&quot;);\n\n        bean.setInitParameters(initMaps);\n        return bean;\n    }\n\n    //2. 配置Filtter\n    public FilterRegistrationBean WebStatFilter() {\n        FilterRegistrationBean bean = new FilterRegistrationBean();\n        bean.setFilter(new WebStatFilter());\n\n        Map&lt;String, String&gt; initParams = new HashMap&lt;&gt;();\n        initParams.put(&quot;exclusions&quot;,&quot;*.js,*.css,/druid/*&quot;);\n        bean.setInitParameters(initParams);\n\n        bean.setUrlPatterns(Arrays.asList(&quot;/*&quot;));\n        return bean;\n    }\n}</code></pre> <h2 id="2整合mybatis">2.整合Mybatis</h2> <h3 id="配置druid">配置Druid</h3> <h3 id="配置mybatis驼峰命名">配置MyBatis驼峰命名</h3> <p>路径在/config/MyBatisConfig</p> <pre><code class="language-java">@org.springframework.context.annotation.Configuration\npublic class MyBatisConfig {\n\n    @Bean\n    public ConfigurationCustomizer configurationCustomizer() {\n        return new ConfigurationCustomizer() {\n            @Override\n            public void customize(Configuration configuration) {\n                configuration.setMapUnderscoreToCamelCase(true);\n            }\n        };\n    }\n}\n</code></pre> <pre><code class="language-Java">使用MapperScan批量扫描Mapper所有的接口\n@MapperScan(value = &quot;com.atfuigu.springboot06mybatis.mapper&quot;)</code></pre> <p>xml文件使用驼峰命名</p> <pre><code class="language-xml">resources/mybatis/mybatis-config.xml\n\n&lt;configuration&gt;\n    &lt;settings&gt;\n        &lt;setting name=&quot;mapUnderscoreToCamelCase&quot; value=&quot;true&quot;/&gt;\n    &lt;/settings&gt;\n&lt;/configuration&gt;</code></pre> ';e.exports=n},"5cd4":function(e,t){var n='<p>[TOC]</p> <h1 id="spring-farmwork">Spring Farmwork</h1> <h1 id="官网：">官网：</h1> <blockquote> <p>Spring.io</p> </blockquote> <h1 id="spring-是什么：">Spring 是什么：</h1> <blockquote> <p>Spring是分层的Java SE/EE应用<font color="red">full-stack</font>轻量级开源框架</p> </blockquote> <h1 id="spring的两大核心：">Spring的两大核心：</h1> <p><font color="red">IOC（反转控制）</font> </p> <blockquote> <p><font color="red">削减耦合</font>，降低依赖关系(把创建对象的权力交给框架或者工厂)</p> </blockquote> <p><font color="red">AOP（面向切面编程）</font>为内核，提供展现层Spring MVC和持久层Spring JDBC以及业务层事务管理等众多的企业级应用技术。</p> <h1 id="创建bean的三种方式">创建Bean的三种方式</h1> <p>创建Bean的三种方式:</p> <p>第一种方式：使用默认构造函数创建。 在Spring的配置文件中使用Bean标签，配以ID和CLASS属性之后，且没有其他属性和标签时 采用的就是默认构造函数创建Bean对象，此时如果类中没有构造函数，则对象无法创建</p> <pre><code class="language-xml"> &lt;bean id=&quot;accountService&quot; class=&quot;com.itheima.service.impl.AccountServiceImpl&quot;&gt;&lt;/bean&gt;</code></pre> <p>第二种方式：使用普通工厂中的方法创建对象（使用某个类中的方法创建对象，并存入Spring容器）</p> <pre><code class="language-xml">     &lt;bean id=&quot;instanceFactory&quot; class=&quot;com.itheima.factory.InstanceFactory&quot;&gt;&lt;/bean&gt;\n\n    &lt;bean id=&quot;accountService&quot; factory-bean=&quot;instanceFactory&quot; factory-method=&quot;getAccountService&quot;&gt;&lt;/bean&gt;</code></pre> <p>第三种方法： 使用工厂中的静态方法创建对象，(使用某个类中的静态方法创建对象，并存入Spring容器)</p> <pre><code class="language-xml">&lt;bean id=&quot;accountService&quot; class=&quot;com.itheima.factory.StaticFactory&quot; factory-method=&quot;getAccountService&quot;&gt;&lt;/bean&gt;</code></pre> <h1 id="bean的作用范围">Bean的作用范围</h1> <p>Bean标签的Scope属性:</p> <pre><code>作用：用于指定Bean的作用范围\n取值：\nsingleton : 单例的（默认值）\nprototype :多例的\nrequest   :作用域Web应用的请求范围\nsession   :作用域Web应用的会话范围\nglobal-session：作用域集群环境的会话范围（全局会话范围），不是集群环境时，他就是Session</code></pre><pre><code class="language-xml"> &lt;bean id=&quot;accountService&quot; class=&quot;com.itheima.factory.StaticFactory&quot; factory-method=&quot;getAccountService&quot; scope=&quot;prototype&quot;&gt;&lt;/bean&gt;\n</code></pre> <h1 id="bean对象的生命周期">Bean对象的生命周期</h1> <pre><code>单例对象：\n    出生：容器创建出生\n    活着：只要容器在，对象一直存活\n    死亡：容器消失，对象消亡\n    总结：单例对象的生命周期和容器相同\n多例对象：\n    出生：使用对象时，Spring创建\n    活着：对象在使用过程中，一直活着\n    死亡：当对象长时间不用，且没有其他对象引用时由Java垃圾回收机制回收；</code></pre><h1 id="spring的依赖注入">Spring的依赖注入</h1> <ol> <li><p>Spring中的依赖注入 Dependency Injection IOC的作用：降低耦合（依赖关系） 依赖关系的管理：以后交给Spring维护 在当前类需要用到其他类的对象，由Spring为我们提供。我们只需要在配置文件中 说明</p> </li> <li><p>依赖关系的维护： 就称之为依赖注入 依赖注入：</p> <blockquote> <p>​ 能注入的数据：有三类 ​ 1.基本类型和String</p> <p>​ 2.其他的Bean类型</p> <p>​ 3.复杂类型/集合类型</p> <p> 注入的方式有三种：</p> <p>​ 1.第一种：使用构造函数提供</p> <p>​ 2.第二种：使用set方法提供</p> <p>​ 3.第三种：使用注解提供</p> </blockquote> </li> </ol> <h2 id="构造函数注入：">构造函数注入：</h2> <p>第一种：构造函数注入 constructor-arg 在Bean标签的内部使用</p> <pre><code class="language-xml">&lt;bean&gt;\n&lt;constructor-arg&gt;\n&lt;/bean&gt;</code></pre> <p>属性：</p> <blockquote> <p>type：用于指定要注入的数据的数据类型 index：用于指定要注入的数据给构造函数的索引位置 name:用于指定给构造函数中指定名称的参数赋值</p> </blockquote> <p><font color="red">以上三个用于指定给构造函数中哪个参数赋值</font></p> <hr> <blockquote> <p>value:用于提供基本类型过和String类型的数据</p> <p>ref : 用于指定其他的Bean类型数据。在Spring的IOC核心容器中出现过的Bean对象</p> </blockquote> <p>总结：</p> <blockquote> <p>优势： 在获Bean对象时，注入是必须的操作，否则无法创建成功 弊端： 该拜年了Bean对象的实例化方式，使我们在创建对象时，如果用不到这些数据也必须提供</p> </blockquote> <pre><code class="language-xml">    &lt;bean id=&quot;accountService&quot; class=&quot;com.itheima.service.impl.AccountServiceImpl&quot;&gt;\n        &lt;constructor-arg name=&quot;name&quot; value=&quot;泰斯特&quot;&gt;&lt;/constructor-arg&gt;\n        &lt;constructor-arg name=&quot;age&quot; value=&quot;18&quot;&gt;&lt;/constructor-arg&gt;\n        &lt;constructor-arg name=&quot;birthday&quot; ref=&quot;now&quot;&gt;&lt;/constructor-arg&gt;\n    &lt;/bean&gt;\n\n    &lt;!--    配置一个日期--&gt;\n    &lt;bean id=&quot;now&quot; class=&quot;java.util.Date&quot;&gt;&lt;/bean&gt;\n\n</code></pre> <h2 id="set注入">Set注入</h2> <p>涉及的标签：property</p> <p>出现的位置：Bean标签的内部</p> <p>标签的属性：</p> <blockquote> <p>name:用于指定注入时所调用的set方法名称；</p> <p>value:用于提供基本类型过和String类型的数据</p> <p>ref : 用于指定其他的Bean类型数据。在Spring的IOC核心容器中出现过的Bean对象</p> </blockquote> <p>总结：</p> <blockquote> <p>优势：</p> <p>​ 创建时有明确的限制，可以直接使用默认构造函数</p> <p>弊端：</p> <p>​ 如果有某个成员必须有值，则获取对象有可能Set方法没有执行</p> </blockquote> <pre><code class="language-xml">    &lt;!--    Set 注入--&gt;\n    &lt;bean id=&quot;accountService2&quot; class=&quot;com.itheima.service.impl.AccountServiceImpl2&quot;&gt;\n        &lt;property name=&quot;name&quot; value=&quot;特斯拉&quot;&gt;&lt;/property&gt;\n        &lt;property name=&quot;age&quot; value=&quot;21&quot;&gt;&lt;/property&gt;\n        &lt;property name=&quot;birthday&quot; ref=&quot;now&quot;&gt;&lt;/property&gt;\n    &lt;/bean&gt;\n</code></pre> <h2 id="复杂类型的注入">复杂类型的注入</h2> <p>用于给List集合注入的标签：list array set</p> <p>用于给Map结构集合注入的标签：map props</p> <p>结构相同，标签可以互换</p> <h1 id="注解：">注解：</h1> <p>XML文件配置：</p> <pre><code class="language-xml">&lt;bean id=&quot;accountService&quot; class=&quot;com.itheima.service.impl.AccountServiceImpl&quot;&gt;&lt;/bean&gt;\n\n* 用于创建对象过的注解\n    在XML配置文件中编写一个&lt;bean&gt;表爱去哪实现功能是一样的\n     @Component:\n        作用：把当前类对象存入Spring容器中\n        属性：value用于指定Bean的id。不写时默认值为当前类名，且首字母小写\n   @Controller    ：用于表现层\n   @Service      ：用于业务层\n   @Respository    ：用于持久层\n        以上三个注解，他们的作用和属性与Compontent是一模一样的，\n        是Spring框架为我们提供明确的三层使用的注解，是我们的三层对象更加清晰\n* 用于注入数据的        \n        在XML配置中的bean中写一个&lt;property&gt;标签一样\n   @Autowired:\n        作用：自动按照类型注入，只要容器中有唯一的一个Bean对象类型和要注入的变量类型匹配，就可以注入成功；\n              如果IOC容器中没有任何Bean的类型和要注入的变量类型匹配，则报错\n              如果有多个类型匹配时\n        出现位置：可以是变量上，可以是方法上\n        细节：在使用注解时,set方法就可以不用\n   @Qualified：必须依赖于Autowired\n        作用：在按按照而理性注入的基础上再按照名称注入。它在给类成员注入时不能单独使用；但给参数注入时可以\n           属性：value：用于指定注入bean的ID\n   @Resource\n        作用：直接按照bean的ID注入，可以单独使用\n        属性：\n              name:用于指定bean的ID\n           以上三个注解，只能注入其他Bean类型的术后据，而基本类型和String类型无法使用上述注解实现。\n        另外，类型集合的注入只能通过XML实现\n\n\n   @Value：\n        作用：用于注入基本类型和String类型\n        属性：value：用于指定数据的值，可以使用Spring中SpEL（Spring中的el表达式）\n             SpEL写法：${表达式}\n* 改变作用范围的\n        作用集合在bean标签中使用scop标签是一样的\n   @Scope \n        作用：用于指定Bean的作用范围\n        属性：\n            Value：指定范围的取值，Singleton、Prototype\n* 生命周期相关（了解）\n        作用和bean标签中使用init-method,destroy-method\n   @PreDestroy：\n           指定销毁方法\n  @ PostContruct：\n        指定初始化方法\n</code></pre> <h1 id="configration注解：">Configration注解：</h1> <pre><code class="language-xml">@Configuration    \n    作用：\n        指定当前类是一个配置类\n    细节：\n        1.当配置类作为AnnotationCondifApplicationContext对象创建时，该注解可不写\n        2.\n@ComponentsScan：\n    作用：\n        用于指定Spring创建容器时所需要扫描的包\n    属性：\n        value:它和basePackkages的作用是一样的，都是指定窗户将容器时所要扫描的包\n              此注解等同与在XML中配置了&lt;context:component-scan base-package=&quot;com.itheima&quot;&gt;&lt;/context:component-scan&gt;\n@Bean:\n    作用：\n        把当前方法的返回值作为Bean对象存入Spring容器中\n    属性：\n        naem:用于指定bean的ID，不写诗，默认值为当前方法的名称\n    细节：\n        当使用注解配置方法时，如果方法有参数，Spring框架会去容器中查找有没有可用的Bean对象，查找的方式和Autowied一致\n@Import\n    作用：用于导入其它的配置类\n    属性：\n        value:用于指定其他配置类的字节码\n              放我们使用Import注释的是父配置类，而导入的是子配置类\n@PropertySource :\n        作用：用于指定Peoperties文件的位置\n属性：values:指定文件路径和名册和名称\n        关键字classpath</code></pre> <h1 id="spring-test注解">Spring Test注解</h1> <pre><code class="language-java">\n\n@Runwith\n        :提供一个注解，把原有的main方法替换了，替换成Spring提供的\n\n@ContextConfigration\n        ：location：指定xml位置，加上class path关键字，表示在类路径下（@ContextConfiguration(locations = &quot;classpath:bean.xml&quot;)\n）\n        classes：指定注解类所在位置</code></pre> <h1 id="aop">AOP</h1> <h2 id="实例分析：">实例分析：</h2> <p>解决多个进程问题，无法回滚</p> <h2 id="动态代理对象">动态代理对象</h2> <h3 id="demo基于接口的动态代理">Demo:基于接口的动态代理</h3> <blockquote> <pre><code>   动态代理\n\n   特点：字节码随用随创建、加载\n       不修改源码的基础上对方法进行增强\n   分类：\n\n           基于接口的动态代理\n           基于子类的动态代理\n\n           基于接口的动态代理：\n                   涉及的类Proxy\n                   提供者：JDK官方\n            如何创建代理对象：\n                   使用Proxy类中的 newProxyInstance\n            创建代理对象的要求：\n                   被代理类最少实现一个接口，如果没有则不能使用\n           newProxyInstance方法的参数：\n                   ClassLoader : 用于加载对象字节码。和被代理对象使用相同的类加载器；固定写法\n                   Class[]：         让代理对象和被代理对象有相同的方法。固定写法\n                   InvocationHandle：  让我们写如何代理，我们一般都是写一个该接口的实现类，通常情况下都是匿名内部类；但不是必须的\n            此接口的实现类都是谁用谁写</code></pre></blockquote> <p><img src="C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200811222212008.png" alt="image-20200811222212008"></p> <h3 id="demo基于子类的动态代理">Demo:基于子类的动态代理</h3> <blockquote> <pre><code>   动态代理\n\n   特点：字节码随用随创建、加载\n       不修改源码的基础上对方法进行增强\n   分类：\n\n   ​    基于接口的动态代理\n   ​    基于子类的动态代理\n\n   基于子类的动态代理：\n            涉及的类:Enhancer\n           提供者：第三方 cglib\n    如何创建代理对象：\n           使用Proxy类中的 Ehancer类中的Create方法\n    创建代理对象的要求：\n           被代理类不能是最终类\n   cerate方法的参数：\n           Class：字节码，用于指定被代理对象的字节码\n           Callback：  让我们写如何代理，我们一般都是写一个该接口的实现类，通常情况下都是匿名内部类；但不是必须的\n   ​    此接口的实现类都是谁用谁写\n   ​    我们一般写的都是该接口的子接口实现类:MethodInterceptor</code></pre></blockquote> <p><img src="C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200811224451387.png" alt="image-20200811224451387"></p> <h2 id="aop概念及作用">AOP概念及作用</h2> <p>AOP：面向切面编程，是OOP的延续，是函数式编程的延续</p> <p>作用：在程序运行期间，不修改源码对已有方法进行增强</p> <p>优势：</p> <p>​ 减少重复代码</p> <p>​ 提高开发效率</p> <p>​ 维护方便</p> <h3 id="通知的类型：">通知的类型：</h3> <p><img src="C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200813155631126.png" alt="image-20200813155631126"></p> <h1 id="spring基于xml的aop配置步骤">Spring基于XML的AOP配置步骤</h1> <p>​ 1.把通知的Bean交给Logger来管理 ​ 2.使用AOP：config标签表示开始AOP的配置 ​ 3.使用Aop：aspect标签表明配置切面： ​ id属性：给切面提供一个唯一标志 ​ ref属性：指定通知类的Bean ID ​ 4.在aop:aspect内部使用对应标签来配置通知的类型 ​ aop:before 配置前置通知 ​ method属性：用于指定Logger类中哪个方法作为前置通知 ​ pointcut属性：用于指定切入点表达式。对业务层哪些方法进行增强</p> <p>​ 切入点从表达式的写法： ​ 关键字：execution(表达式) ​ 表达式：访问修饰符 返回值 包名.包名.类名.方法名（参数列表） ​ 标准的表达式写法:public void com.itheima.service.impl.AccountServiceImpl.saveAccount()</p> <p><img src="C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200813163613547.png" alt="image-20200813163613547"></p> <pre><code class="language-xml">&lt;!--    配置Spring的IOC，把service对象配置进来--&gt;\n&lt;bean id=&quot;accountService&quot; class=&quot;com.itheima.service.impl.AccountServiceImpl&quot;&gt;&lt;/bean&gt;\n\n&lt;!--    Spring基于XML的AOP配置步骤\n    1.把通知的Bean交给Logger来管理\n    2.使用AOP：config标签表示开始AOP的配置\n    3.使用Aop：aspect标签表明配置切面：\n            id属性：给切面提供一个唯一标志\n            ref属性：指定通知类的Bean ID\n     4.在aop:aspect内部使用对应标签来配置通知的类型\n            aop:before 配置前置通知\n                method属性：用于指定Logger类中哪个方法作为前置通知\n                pointcut属性：用于指定切入点表达式。对业务层哪些方法进行增强\n\n             切入点从表达式的写法：\n             关键字：execution(表达式)\n             表达式：访问修饰符 返回值 包名.包名.类名.方法名（参数列表）\n              标准的表达式写法:public void com.itheima.service.impl.AccountServiceImpl.saveAccount()\n--&gt;\n&lt;!--    配置Logger类--&gt;\n&lt;bean id=&quot;logger&quot; class=&quot;com.itheima.utils.Logger&quot;&gt;&lt;/bean&gt;\n&lt;!--配置AOP--&gt;\n&lt;aop:config&gt;\n    &lt;!--        配置切面--&gt;\n    &lt;aop:aspect id=&quot;logAdvice&quot; ref=&quot;logger&quot;&gt;\n        &lt;!--            配置通知的类型并且建立通知方法和切入点方法的关联--&gt;\n        &lt;aop:before method=&quot;printLog&quot;\n                    pointcut=&quot;execution(public void com.itheima.service.impl.AccountServiceImpl.saveAccount())&quot;&gt;&lt;/aop:before&gt;\n    &lt;/aop:aspect&gt;\n&lt;/aop:config&gt;</code></pre> <h3 id="通配表达式的写法">通配表达式的写法</h3> <pre><code>             切入点从表达式的写法：\n             关键字：execution(表达式)\n             表达式：访问修饰符 返回值 包名.包名.类名.方法名（参数列表）\n              标准的表达式写法:&lt;font color=red&gt;public void com.itheima.service.impl.AccountServiceImpl.saveAccount()&lt;/font&gt;\n                  访问修饰符可以省略：\n                        &lt;font color=red&gt;void com.itheima.service.impl.AccountServiceImpl.saveAccount()&lt;/font&gt;\n                  返回值可以使用*，表示任意返回值\n\n                    *   &lt;font color=red&gt;com.itheima.service.impl.AccountServiceImpl.saveAccount()&lt;/font&gt;\n                                      包名可以使用通配符，表示任意包，但是有几级包就需要写几个*.\n\n                                           * *.*.*.*.AccountServiceImpl.saveAccount()\n                                                                  包名可以使用..表示当前包及其子包\n                                                                       * *..AccountServiceImpl.saveAccount();\n                                                                                         类名和方法名都可以使用*通配\n\n                                                                                                   * *..*.*()\n                                                                                                                参数列表：\n                                                可以直接写数据类型：\n                                            基本类型直接写名称 int\n                                                              应用类型写包名.类名方式 java.lang.String\n                                                                                                                                    可以使用通配符表示任意类型，但必须有参数，\n                                                                                                                          可以使用..表示有无参数均可，有参数可以是任意类型\n                                                                                  全通配写法：* *..*.*(..)</code></pre><p> <font color="red">实际开发中通常写法：切到业务层实现类的所有方法: </font></p> <p>​ <font color="red"> * com.itheima.service.impl.<em>.</em>(..) </font></p> <p><img src="C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200813170532038.png" alt="image-20200813170532038"></p> <h2 id="环绕通知的写法：">环绕通知的写法：</h2> <pre><code>/**\n * 问题：\n * 当配置了环绕通知后，切入点方法没有执行，而通知方法执行了\n * 分析：\n * 通过对比动态代理中的环绕通知代码，发现动态代理中的环绕通知有明确的切入点调用方法，而我们代码中没有\n * 解决：\n * Spring框架为我们提供一个接口：ProceedingJoinPoint，该接口有一个方法Proceed（）。此方法明确调用切入点方法\n * 该接口可以作为环绕方法的通知参数，在程序执行时，Spring框架会为我们提供该接口方法的实现类供我们使用\n *\n * Spring环绕通知\n *      他是Spring框架为我们提供的一种可以在代码中手动控制增强方法何时执行的方式\n **/</code></pre><p><img src="C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200813175349451.png" alt="image-20200813175349451"></p> <p><img src="C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200813175330483.png" alt="image-20200813175330483"></p> <h2 id="注解通知：">注解通知：</h2> <p><img src="C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200813181443487.png" alt="image-20200813181443487"></p> <p><img src="C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200813181513663.png" alt="image-20200813181513663"></p> <p><img src="C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200813181530691.png" alt="image-20200813181530691"></p> <h1 id="spring中基于xml的声明式事务控制配置">Spring中基于XML的声明式事务控制配置</h1> <p>​ 1.配置事务管理器 ​ 2.配置事务的通知，需要约束,同时也需要AOP ​ 属性：</p> <p>​ id 给事务通知一个标识 ​ transaction-manager：给事务管理器通知提供一个事务管理器的引用 ​ 3.配置AOP通用切入点表达式 ​ 4.建立事务通知和表达式的关系 ​ 5.配置事务的属性: ​ 是在事务通知的tx:advice标签内部 ​ isolation=&quot;&quot; : 用于指定事务的隔离界别，默认值default表示使用数据库的级别 ​ propagation=&quot;&quot; ：用于指定十五点额传播行为，默认值时REQUIRED，表示一定有事务，增删改的选择。查询方法可以选择 SUPPORT ​ read-only=&quot;&quot;：用于指定事务是否支付，只有查询方法才能设置为True默认值为false，表示为可读写 ​ timeout=&quot;&quot;：事务的超时时间，默认值-1.永不超时；若指定了数值，以秒为单位 ​ rollback-for=&quot;&quot;：用于指定一个异常；但产生异常时；事务回滚；产生其它异常时，事务不回滚没有默认值。表示人任何异常都回 滚 ​ no-rollback-for=&quot;&quot; ：用于指定一个异常，但产生该异常时事务不回滚。产生其他异常时事务会回滚，没有默认值表示任何异常都 回滚</p> <p><img src="C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200814224346045.png" alt="image-20200814224346045"></p> <h1 id="spring中基于aopl的声明式事务控制配置">Spring中基于AOPL的声明式事务控制配置</h1> <p>​ 1.配置事务管理器 ​ 2.开启Spring对注解事务的支持 ​ 3.在需要事务支持的地方使用@Transactionz注解</p> <p><img src="C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200814225219908.png" alt="image-20200814225219908"></p> <p><img src="C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200814225246382.png" alt="image-20200814225246382"></p> ';e.exports=n},"6fca":function(e,t,n){"use strict";n.r(t);var o=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"divBackground"},[e._v(" "+e._s(e.list)+" "),n("div",{directives:[{name:"highlight",rawName:"v-highlight"}],staticClass:"docBackground",staticStyle:{"font-family":"'DejaVu Sans Mono'","text-align":"left","font-size":"20px"},attrs:{id:"doc"},domProps:{innerHTML:e._s(e.msg)}})])},r=[],i=(n("d3b7"),{name:"DocumentSpringCloud",data:function(){return{md:"",msg:"",key:0,list:Object}},methods:{testMd:function(e){var t=this;n("dcab")("./"+e+".md").then((function(e){t.msg=e.default})),this.key+=1}},mounted:function(){this.testMd("Spring"),this.list=n("4536")}}),a=i,s=(n("bfac"),n("2877")),p=Object(s["a"])(a,o,r,!1,null,"4c9a5c66",null);t["default"]=p.exports},"7b54":function(e,t,n){"use strict";n("abfd")},"7bbe":function(e,t,n){e.exports=n.p+"img/github.85f8d56b.png"},9516:function(e,t,n){e.exports=n.p+"img/gmail.964b840e.png"},9727:function(e,t,n){"use strict";n.r(t);var o=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{attrs:{id:"test"}},[n("div",{domProps:{innerHTML:e._s(e.compileMarkdown)}})])},r=[],i=n("0e54"),a=n.n(i),s=new a.a.Renderer;a.a.setOptions({renderer:s,gfm:!0,tables:!0,breaks:!1,pedantic:!1,sanitize:!1,smartLists:!0,smartypants:!1});var p={name:"DocumentMySql",data:function(){return{input:"# hello `java` "}},computed:{compiledMarkdown:function(){return a()(this.input,{sanitize:!0})}}},l=p,c=n("2877"),g=Object(c["a"])(l,o,r,!1,null,"0028535b",null);t["default"]=g.exports},"9bb5":function(e,t,n){"use strict";n("d117")},abfd:function(e,t,n){},af3a:function(e,t,n){e.exports=n.p+"img/wechat.a8fee2c3.png"},bb51:function(e,t,n){"use strict";n.r(t);var o=function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("div",{staticClass:"divBackground",staticStyle:{"font-family":"'DejaVu Sans Mono'"}},[o("h1",[e._v(e._s(e.$t("message.saying")))]),o("el-divider"),o("div",{staticClass:"paragraph",attrs:{id:"info"}},[o("h2",{attrs:{id:"about_me"}},[e._v("About Me")]),o("p",{staticStyle:{margin:"2%"}},[e._v(" "+e._s(e.profession)+" ")]),o("br"),o("el-divider"),e._m(0),o("h3",[e._v("2016-2020")]),o("p",{staticStyle:{margin:"2%"}},[e._v(" School of Computer Science & Technology , Tianjin University of Commerce ,Tianjin , China ")]),o("el-divider"),e._m(1),o("i",{staticClass:"el-icon-message",staticStyle:{"font-family":"'DejaVu Sans Mono'"}},[e._v(" "+e._s(e.Contact.email))]),o("br"),o("br"),o("img",{staticStyle:{height:"20px",width:"20px"},attrs:{src:n("af3a")}}),o("i",[e._v(" WeChat ID:"+e._s(e.Contact.wechat))]),o("el-divider"),e._m(2),e._m(3)],1),e._m(4)],1)},r=[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h2",{attrs:{id:"experience"}},[n("i",{staticClass:"el-icon-info"}),e._v("Experience")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h2",{attrs:{id:"Contact"}},[n("i",{staticClass:"el-icon-message"}),e._v("Contact")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h2",{attrs:{id:"Links"}},[n("i",{staticClass:"el-icon-share"}),e._v("Links")])},function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("div",{staticStyle:{margin:"2%"},attrs:{id:"links_ico"}},[o("a",{attrs:{href:"https://github.com/WangJiyuanYo"}},[o("img",{staticStyle:{width:"4%",height:"4%"},attrs:{src:n("7bbe")}})]),o("a",{attrs:{href:"https://t.me/tokrn"}},[o("img",{staticStyle:{width:"4%",height:"4%"},attrs:{src:n("f5f9")}})]),o("a",{attrs:{href:"https://mail.google.com/"}},[o("img",{staticStyle:{width:"4%",height:"4%"},attrs:{src:n("9516")}})])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("footer",{staticClass:"footer",staticStyle:{"font-family":"Meath"}},[n("div",[e._v(" MIT Licensed | Copyright © 2018-2020 Vue.js ")])])}],i=(n("e4cb"),n("1f64d"),n("3976"),n("5cd4")),a=n.n(i),s={name:"Home",data:function(){return{saying:"Anything can't kill me , it will make me be better",profession:"Work as Computer Programmer Designer\n",imgSrc:n("cb54"),Contact:{email:" Gwangjiyuan@gmail.com",wechat:"Gwangjiyuan"},user:{},responseResult:{},language:{},md:a.a}}},p=s,l=(n("9bb5"),n("2877")),c=Object(l["a"])(p,o,r,!1,null,"7a0c25fa",null);t["default"]=c.exports},bfac:function(e,t,n){"use strict";n("fe00")},c305:function(e,t,n){"use strict";n.r(t);var o=function(){var e=this,t=e.$createElement;e._self._c;return e._m(0)},r=[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[n("h1",[e._v("404 Not Found")])])}],i={name:"notFound404"},a=i,s=n("2877"),p=Object(s["a"])(a,o,r,!1,null,"32235ab8",null);t["default"]=p.exports},cbfa:function(e,t){var n='<p>[TOC]</p> <h1 id="解决mysql时区问题">解决MySQL时区问题</h1> <p>1.查询时区</p> <pre><code class="language-sql">select timediff(now(),convert_tz(now(),@@session.time_zone,&#39;+00:00&#39;)); \n或者:\n\nSELECT TIMEDIFF(NOW(), UTC_TIMESTAMP); </code></pre> <p>2.修改时区</p> <pre><code class="language-sql">set global time_zone = &#39;+8:00&#39;;  ##修改mysql全局时区为北京时间，即我们所在的东8区\nset time_zone = &#39;+8:00&#39;;  ##修改当前会话时区\nflush privileges;  #立即生效</code></pre> <p>3.JDBC连接数据库时</p> <pre><code>设置SetTimeZone = &quot;Asia/ShangHai&quot;\nGMT\njdbc.url = jdbc:mysql://localhost:3306/mybatis?serverTimezone=GMT%2B8</code></pre><h2 id="学习笔记：">学习笔记：</h2> <h2 id="sqlmapconfigxml">SqlMapConfig.xml</h2> <p>1.头标签：</p> <pre><code class="language-xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;!DOCTYPE configuration\n        PUBLIC &quot;-//mybatis.org//DTD Config 3.0//EN&quot;\n        &quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;&gt;</code></pre> <h2 id="一级缓存的分析">一级缓存的分析</h2> <p>一级缓存是SqlSession对象的缓存。当SqlSession对象消失时，一级缓存也会消失 </p> <p>一级缓存是Sqlsession 范围的缓存，当调用SqlSession的修改i、添加、删除、commit()、close()、clearCache()；方法的时候会清除一级缓存</p> <h2 id="二级缓存的分析">二级缓存的分析</h2> <p>​ 二级缓存是SqlsessionFactory的对象缓存（存放的是数据），由同一个SqlSessionFactory对象创建对策SqlSession共享其缓存</p> <p>使用步骤：</p> <p>​ 第一步：Mybatis框架支持二级缓存（SqlMapConfig.xml）</p> <p>​ 第二步：让当前因施工和文件支持二级缓存（IUserDao.xml文件中）</p> <p>​ 第三步：让当前操作支持二级缓存（在Select标签中）</p> <p><img src="C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200803224025883.png" alt="image-20200803224025883"></p> <p>调用结果：</p> <p><img src="C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200803223903545.png" alt="image-20200803223903545"></p> <h1 id="注解开发">注解开发</h1> <p>在MyBatis中针对CRUD一共有四个注解：@SELECT @INSERT @UPDATE @DELETE</p> <h1 id="mysql语句优化">MySQL语句优化</h1> <h3 id="1-所有表必须使用-innodb-存储引擎">1. 所有表必须使用 Innodb 存储引擎</h3> <p>没有特殊要求（即 Innodb 无法满足的功能如：列存储，存储空间数据等）的情况下，所有表必须使用 Innodb 存储引擎（MySQL5.5 之前默认使用 Myisam，5.6 以后默认的为 Innodb）。</p> <p>Innodb 支持事务，支持行级锁，更好的恢复性，高并发下性能更好。</p> <h3 id="2-数据库和表的字符集统一使用-utf8">2. 数据库和表的字符集统一使用 UTF8</h3> <p>兼容性更好，统一字符集可以避免由于字符集转换产生的乱码，不同的字符集进行比较前需要进行转换会造成索引失效，如果数据库中有存储 emoji 表情的需要，字符集需要采用 utf8mb4 字符集。</p> <h3 id="3-所有表和字段都需要添加注释">3. 所有表和字段都需要添加注释</h3> <p>使用 comment 从句添加表和列的备注，从一开始就进行数据字典的维护</p> <h3 id="4-尽量控制单表数据量的大小建议控制在-500-万以内。">4. 尽量控制单表数据量的大小,建议控制在 500 万以内。</h3> <p>500 万并不是 MySQL 数据库的限制，过大会造成修改表结构，备份，恢复都会有很大的问题。</p> <p>可以用历史数据归档（应用于日志数据），分库分表（应用于业务数据）等手段来控制数据量大小</p> <h3 id="5-谨慎使用-mysql-分区表">5. 谨慎使用 MySQL 分区表</h3> <p>分区表在物理上表现为多个文件，在逻辑上表现为一个表；</p> <p>谨慎选择分区键，跨分区查询效率可能更低；</p> <p>建议采用物理分表的方式管理大数据。</p> <h3 id="6尽量做到冷热数据分离减小表的宽度">6.尽量做到冷热数据分离,减小表的宽度</h3> <blockquote> <p>MySQL 限制每个表最多存储 4096 列，并且每一行数据的大小不能超过 65535 字节。</p> </blockquote> <p>减少磁盘 IO,保证热数据的内存缓存命中率（表越宽，把表装载进内存缓冲池时所占用的内存也就越大,也会消耗更多的 IO）；</p> <p>更有效的利用缓存，避免读入无用的冷数据；</p> <p>经常一起使用的列放到一个表中（避免更多的关联操作）。</p> <h3 id="7-禁止在表中建立预留字段">7. 禁止在表中建立预留字段</h3> <p>预留字段的命名很难做到见名识义。</p> <p>预留字段无法确认存储的数据类型，所以无法选择合适的类型。</p> <p>对预留字段类型的修改，会对表进行锁定。</p> <h3 id="8-禁止在数据库中存储图片文件等大的二进制数据">8. 禁止在数据库中存储图片,文件等大的二进制数据</h3> <p>通常文件很大，会短时间内造成数据量快速增长，数据库进行数据库读取时，通常会进行大量的随机 IO 操作，文件很大时，IO 操作很耗时。</p> <p>通常存储于文件服务器，数据库只存储文件地址信息</p> <h3 id="9-禁止在线上做数据库压力测试">9. 禁止在线上做数据库压力测试</h3> <h3 id="10-禁止从开发环境测试环境直接连接生成环境数据库">10. 禁止从开发环境,测试环境直接连接生成环境数据库</h3> <h1 id="qa">Q&amp;A</h1> <h2 id="一条sql语句执行得很慢的原因有哪些？">一条SQL语句执行得很慢的原因有哪些？</h2> <p>​ 分类讨论：</p> <p>​ 1.大多数情况下正常，偶尔的情况下很慢</p> <p>​ 2.在数据量不变的情况下，一直执行很慢</p> <h3 id="针对偶尔很慢的情况（1）">针对偶尔很慢的情况（1）</h3> <ol> <li><p>数据库在刷新脏页（Flush）</p> <p>当内存数据页跟磁盘数据页内容不一致的时候，我们称这个内存页为“脏页”。内存数据写入到磁盘后，内存和磁盘上的数据页的内容就一致了，称为“干净页”</p> <ol> <li><p><strong>redolog满了：</strong> redo log的容量有限，如果数据库一直处于繁忙，更新也很频繁数据库很快就会被写满；数据库只能暂停其他的操作，用来将数据同步到磁盘当中</p> </li> <li><p><strong>内存不够用：</strong> 如果一次查询较多的数据，恰好碰到所查数据页不在内存中时，需要申请内存，若此时内存不够就需要释放一些数据页，干净页直接释放；脏页就需要刷新脏页</p> </li> <li><p><strong>MySQL 认为系统“空闲”的时候：</strong>这时系统没什么压力。</p> </li> <li><p><strong>MySQL 正常关闭的时候：</strong>这时候，MySQL 会把内存的脏页都 flush 到磁盘上，这样下次 MySQL 启动的时候，就可以直接从磁盘上读数据，启动速度会很快。</p> </li> <li><p>拿不到锁</p> </li> </ol> <p>如果所需要执行的表被其他的操作所上锁，只能在其他操作释放锁后再执行；判断是否在等待可以使用 show processlist查看当前的状态</p> </li> </ol> <h3 id="针对一直比较慢的情况（2）">针对一直比较慢的情况（2）</h3> <pre><code class="language-sql">#案例表\nmysql&gt; CREATE TABLE `t` (\n  `id` int(11) NOT NULL,\n  `c` int(11) DEFAULT NULL,\n  `d` int(11) DEFAULT NULL,\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB;</code></pre> <ol> <li><p><strong>没有用到索引：</strong> </p> <p>​ <strong>(1) 字段没有索引</strong></p> <pre><code class="language-sql">select * from t where 100 &lt;c and c &lt; 100000;</code></pre> <p>​ <strong>(2) 字段有索引，却没有用索引(此时，字段C有索引)</strong></p> <pre><code class="language-sql">select * from t where c - 1 = 1000;</code></pre> <pre><code class="language-sql">#正确的操作\nselect * from t where c = 1000 + 1S;</code></pre> <p>​ <strong>(3) 函数操作导致没有用上索引</strong></p> <p>​ </p> <pre><code class="language-sql">select * from t where pow(c,2) = 1000;</code></pre> </li> </ol> <pre><code> 2. 数据库自己选错了索引\n\n ### 总结\n\n ![image-20200914145026526](C:\\Users\\79443\\AppData\\Roaming\\Typora\\typora-user-images\\image-20200914145026526.png)</code></pre>';e.exports=n},d117:function(e,t,n){},d180:function(e,t,n){"use strict";n.r(t);var o=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[n("div",{staticClass:"divBackground"},[n("div",{staticStyle:{"margin-left":"5%",width:"15%","margin-top":"5em"},attrs:{id:"timeLine"}},[n("h2",[e._v("博客进展")]),n("Timeline")],1),n("h2",[e._v("TO DO")]),n("el-divider",{staticClass:"divider_class"}),e._m(0)],1)])},r=[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticStyle:{"margin-left":"5%",width:"20%","text-align":"left"},attrs:{id:"TO DO"}},[n("h3",[e._v("添加ME页面内容")]),n("h3",[e._v("添加项目内容")]),n("h3",[e._v("抽离时间栏")]),n("h3",[e._v("抽离Markdown组件")]),n("h3",[e._v("增加en语言")]),n("h3",[e._v("增加平台适配")])])}],i=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"block"},[n("el-timeline",e._l(e.activities,(function(t,o){return n("el-timeline-item",{key:o,attrs:{icon:t.icon,type:t.type,color:t.color,size:t.size,timestamp:t.timestamp}},[e._v(" "+e._s(t.content)+" ")])})),1)],1)},a=[],s={name:"Timeline",data:function(){return{activities:[{content:"开始项目",timestamp:"2020-06-28",size:"large",type:"primary",icon:"el-icon-more"},{content:"构建框架",timestamp:"2020-06-28",color:"#0bbd87"},{content:"导航栏背景",timestamp:"2020-06-30",color:" #0bbd87"},{content:"引入Markdown文件",timestamp:"2020-07-01",color:" #0bbd87"},{content:"修改路由",timestamp:"2020-07-01",color:" #0bbd87"},{content:"Beta 1版本发布",timestamp:"2020-07-04",color:" #0bbd87"},{content:"修改主页内容",timestamp:"2020-07-09",color:"#0bbd87"},{content:"调试后端API",timestamp:"2020-11-22",color:"#0bbd87"},{content:"引入语言切换",timestamp:"2020-11-29",color:"#0bbd87"},{content:"引入自定义字体",timestamp:"2020-12-07",color:"#0bbd87"},{content:"主页语言配置",timestamp:"2020年12月13日",color:"#0bbd87"},{content:"其他待加入",timestamp:"2020-11-22",color:"red"}]}}},p=s,l=n("2877"),c=Object(l["a"])(p,i,a,!1,null,"6ed9d9e0",null),g=c.exports,u=(n("1f64d"),{name:"Other",components:{Timeline:g}}),d=u,m=(n("7b54"),Object(l["a"])(d,o,r,!1,null,"3e32bf9f",null));t["default"]=m.exports},dcab:function(e,t,n){var o={"./MySql.md":"cbfa","./Spring.md":"5cd4","./SpringBoot.md":"550d","./computer.md":"ef4c","./technology.md":"1a30"};function r(e){return Promise.resolve().then((function(){if(!n.o(o,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}var r=o[e];return n.t(r,7)}))}r.keys=function(){return Object.keys(o)},r.id="dcab",e.exports=r},e4cb:function(e,t,n){},ef4c:function(e,t){var n='<p>昨晚安装搜狗输入法，最后电脑里除了输入法以外还多了爱奇艺、搜狗浏览器、QQ音乐、浏览器默认首页也被篡改。。。国产软件全家桶防不胜防（无奈 ╮(╯▽╰)╭ ）因此分享下各类干净安全的软件。</p> <p>拒绝安装软件：360旗下所有产品、2345旗下所有产品、百度旗下所有产品、腾讯管家、金山旗下所有产品（WPS，毒霸等等）、国产特供系列、还有各种下载站。</p> <p>我自己安装软件的原则就是能避开国产就避开国产软件，国产里面也要挑几个可靠的。</p> <p>能用付费就不用免费，Microsoft的东西就是最好的例子，人家服务好啊，付费和盗版就是不一样。</p> <p>免费里面选择开源的软件。</p> <p>下载东西一般都去官方网站直接下载，不考虑特供版的情况下都比较安全。Adobe Flash这种东西就呵呵。。精简破解的软件就去可靠的网站找比如<a href="http://www.52pojie.cn">www.52pojie.cn</a> 。</p> <p>推荐一些自己用的软件，部分附带链接：</p> <p>1.杀毒软件：火绒 <a href="http://www.huorong.cn">www.huorong.cn</a> （国产里面比较有良心的。。用的是Win10的话按时更新补丁自带的Defender够用。。杀毒软件一个就够了，拜托小姐姐们不要装那么多，除了电脑速度越来越慢以外并没有什么实际的用途。）</p> <p>你也可以去买卡巴斯基、诺顿、麦咖啡之类的国外杀毒软件。但这些软件对开发人员不友好。</p> <p>2.通讯软件：TIM、精简QQ、WeChat</p> <p>3.压缩软件：7zip <a href="https://www.7-zip.org%EF%BC%88%E5%BC%80%E6%BA%90%E3%80%81%E5%85%8D%E8%B4%B9%EF%BC%89">https://www.7-zip.org（开源、免费）</a></p> <p>4.浏览器：</p> <p>Chrome <a href="https://www.google.cn/intl/zh-CN/chrome/">https://www.google.cn/intl/zh-CN/chrome/</a></p> <p>Firefox <a href="https://www.mozilla.org/">https://www.mozilla.org/</a></p> <p>5.输入法：微软自带</p> <p>6.办公软件：Microsoft Office 365（家庭版500RMB/年。拒绝WPS）</p> <p>7.记事本：</p> <p>Notepad++：<a href="https://notepad-plus-plus.org/">https://notepad-plus-plus.org/</a></p> <p>Typora：<a href="https://typora.io/">https://typora.io/</a></p> <p>8.视频类：爱奇艺 、优酷 （Win10商店版 无广告）</p> <p>9.音乐：YouTube 网页 ：<a href="https://www.youtube.com">https://www.youtube.com</a></p> <p>10.邮件：Windows自带</p> <p>11.查找工具：Everything <a href="https://www.52pojie.cn/thread-998833-1-1.html">https://www.52pojie.cn/thread-998833-1-1.html</a></p> <p>12.视频播放：Potplayer （可以自己添加字幕等等）<a href="http://www.potplayer.org/">http://www.potplayer.org/</a></p> <p>13.重装系统：微Pe启动器：<a href="http://www.wepe.com.cn/">http://www.wepe.com.cn/</a></p> <p>14.Windows系统下载：<a href="https://msdn.itellyou.cn/">https://msdn.itellyou.cn/</a></p> <p>15.Linus系统下载：<a href="https://mirrors.tuna.tsinghua.edu.cn/">https://mirrors.tuna.tsinghua.edu.cn/</a> （清华大学开源网站）</p> <p>16.桌面美化：WallPaper Engine（Steam版本）</p> <p>17.广告拦截工具：Adguard：<a href="https://adguard.com/en/welcome.html">https://adguard.com/en/welcome.html</a> （圣诞节+黑色星期五 优惠力度超级大，85元一台电脑永久期限）</p> <p>BT资源（视频资源下载站）：</p> <p>有了这些网站都不要视频会员了，没有枪版资源。都是高清的</p> <p>1.六维空间：<a href="http://bt.neu6.edu.cn/forum.php">http://bt.neu6.edu.cn/forum.php</a> （东北大学 需要教育网）</p> <p>2.蒲公英：<a href="https://npupt.com/">https://npupt.com/</a> （西北工业大学 ipv6/教育网）</p> <p>3.北洋园：<a href="https://tjupt.org/">https://tjupt.org/</a> （天津大学 支持公网/ipv4/ipv6）</p> ';e.exports=n},f5f9:function(e,t,n){e.exports=n.p+"img/telegram.edc9a0ed.png"},fe00:function(e,t,n){}}]);
//# sourceMappingURL=about.fcb6a913.js.map
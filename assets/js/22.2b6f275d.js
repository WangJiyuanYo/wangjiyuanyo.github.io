(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{375:function(t,a,s){"use strict";s.r(a);var n=s(6),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"官网"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#官网"}},[t._v("#")]),t._v(" 官网：")]),t._v(" "),s("blockquote",[s("p",[t._v("Spring.io")])]),t._v(" "),s("h2",{attrs:{id:"spring-是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-是什么"}},[t._v("#")]),t._v(" Spring 是什么：")]),t._v(" "),s("blockquote",[s("p",[t._v("Spring是分层的Java SE/EE应用"),s("font",{attrs:{color:"red"}},[t._v("full-stack")]),t._v("轻量级开源框架")],1)]),t._v(" "),s("h2",{attrs:{id:"spring的两大核心"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring的两大核心"}},[t._v("#")]),t._v(" Spring的两大核心：")]),t._v(" "),s("p",[s("font",{attrs:{color:"red"}},[t._v("IOC（反转控制）")])],1),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{color:"red"}},[t._v("削减耦合")]),t._v("，降低依赖关系(把创建对象的权力交给框架或者工厂)")],1)]),t._v(" "),s("p",[s("font",{attrs:{color:"red"}},[t._v("AOP（面向切面编程）")]),t._v("为内核，提供展现层Spring MVC和持久层Spring JDBC以及业务层事务管理等众多的企业级应用技术。")],1),t._v(" "),s("h2",{attrs:{id:"创建bean的三种方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建bean的三种方式"}},[t._v("#")]),t._v(" 创建Bean的三种方式")]),t._v(" "),s("p",[t._v("创建Bean的三种方式:")]),t._v(" "),s("p",[t._v("第一种方式：使用默认构造函数创建。\n在Spring的配置文件中使用Bean标签，配以ID和CLASS属性之后，且没有其他属性和标签时\n采用的就是默认构造函数创建Bean对象，此时如果类中没有构造函数，则对象无法创建")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("bean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("accountService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("com.itheima.service.impl.AccountServiceImpl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("bean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("第二种方式：使用普通工厂中的方法创建对象（使用某个类中的方法创建对象，并存入Spring容器）")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[t._v("     "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("bean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("instanceFactory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("com.itheima.factory.InstanceFactory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("bean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("bean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("accountService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("factory-bean")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("instanceFactory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("factory-method")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("getAccountService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("bean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("第三种方法： 使用工厂中的静态方法创建对象，(使用某个类中的静态方法创建对象，并存入Spring容器)")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("bean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("accountService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("com.itheima.factory.StaticFactory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("factory-method")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("getAccountService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("bean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("h2",{attrs:{id:"bean的作用范围"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bean的作用范围"}},[t._v("#")]),t._v(" Bean的作用范围")]),t._v(" "),s("p",[t._v("Bean标签的Scope属性:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("作用：用于指定Bean的作用范围\n取值：\nsingleton : 单例的（默认值）\nprototype :多例的\nrequest   :作用域Web应用的请求范围\nsession   :作用域Web应用的会话范围\nglobal-session：作用域集群环境的会话范围（全局会话范围），不是集群环境时，他就是Session\n")])])]),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("bean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("accountService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("com.itheima.factory.StaticFactory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("factory-method")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("getAccountService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("scope")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("bean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n")])])]),s("h1",{attrs:{id:"bean对象的生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bean对象的生命周期"}},[t._v("#")]),t._v(" Bean对象的生命周期")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("单例对象：\n    出生：容器创建出生\n    活着：只要容器在，对象一直存活\n    死亡：容器消失，对象消亡\n    总结：单例对象的生命周期和容器相同\n多例对象：\n    出生：使用对象时，Spring创建\n    活着：对象在使用过程中，一直活着\n    死亡：当对象长时间不用，且没有其他对象引用时由Java垃圾回收机制回收；\n")])])]),s("h1",{attrs:{id:"spring的依赖注入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring的依赖注入"}},[t._v("#")]),t._v(" Spring的依赖注入")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("Spring中的依赖注入 Dependency Injection\nIOC的作用：降低耦合（依赖关系）\n依赖关系的管理：以后交给Spring维护\n在当前类需要用到其他类的对象，由Spring为我们提供。我们只需要在配置文件中   说明")])]),t._v(" "),s("li",[s("p",[t._v("依赖关系的维护：    就称之为依赖注入\n依赖注入：")]),t._v(" "),s("blockquote",[s("p",[t._v("​    能注入的数据：有三类\n​    \t\t1.基本类型和String")]),t._v(" "),s("p",[t._v("​\t\t\t2.其他的Bean类型")]),t._v(" "),s("p",[t._v("​\t\t\t3.复杂类型/集合类型")]),t._v(" "),s("p",[t._v("注入的方式有三种：")]),t._v(" "),s("p",[t._v("​\t       1.第一种：使用构造函数提供")]),t._v(" "),s("p",[t._v("​\t\t\t2.第二种：使用set方法提供")]),t._v(" "),s("p",[t._v("​\t\t\t3.第三种：使用注解提供")])])])]),t._v(" "),s("h2",{attrs:{id:"构造函数注入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构造函数注入"}},[t._v("#")]),t._v(" 构造函数注入：")]),t._v(" "),s("p",[t._v("第一种：构造函数注入\nconstructor-arg 在Bean标签的内部使用")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("bean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("constructor-arg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("bean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("属性：")]),t._v(" "),s("blockquote",[s("p",[t._v("type：用于指定要注入的数据的数据类型\nindex：用于指定要注入的数据给构造函数的索引位置\nname:用于指定给构造函数中指定名称的参数赋值")])]),t._v(" "),s("p",[s("font",{attrs:{color:"red"}},[t._v("以上三个用于指定给构造函数中哪个参数赋值")])],1),t._v(" "),s("hr"),t._v(" "),s("blockquote",[s("p",[t._v("value:用于提供基本类型过和String类型的数据")]),t._v(" "),s("p",[t._v("ref  : 用于指定其他的Bean类型数据。在Spring的IOC核心容器中出现过的Bean对象")])]),t._v(" "),s("p",[t._v("总结：")]),t._v(" "),s("blockquote",[s("p",[t._v("优势：\n在获Bean对象时，注入是必须的操作，否则无法创建成功\n弊端：\n该拜年了Bean对象的实例化方式，使我们在创建对象时，如果用不到这些数据也必须提供")])]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("bean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("accountService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("com.itheima.service.impl.AccountServiceImpl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("constructor-arg")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("泰斯特"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("constructor-arg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("constructor-arg")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("18"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("constructor-arg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("constructor-arg")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("birthday"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("ref")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("now"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("constructor-arg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("bean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!--    配置一个日期--\x3e")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("bean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("now"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("java.util.Date"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("bean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n\n")])])]),s("h2",{attrs:{id:"set注入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#set注入"}},[t._v("#")]),t._v(" Set注入")]),t._v(" "),s("p",[t._v("涉及的标签：property")]),t._v(" "),s("p",[t._v("出现的位置：Bean标签的内部")]),t._v(" "),s("p",[t._v("标签的属性：")]),t._v(" "),s("blockquote",[s("p",[t._v("name:用于指定注入时所调用的set方法名称；")]),t._v(" "),s("p",[t._v("value:用于提供基本类型过和String类型的数据")]),t._v(" "),s("p",[t._v("ref  : 用于指定其他的Bean类型数据。在Spring的IOC核心容器中出现过的Bean对象")])]),t._v(" "),s("p",[t._v("总结：")]),t._v(" "),s("blockquote",[s("p",[t._v("优势：")]),t._v(" "),s("p",[t._v("​\t\t创建时有明确的限制，可以直接使用默认构造函数")]),t._v(" "),s("p",[t._v("弊端：")]),t._v(" "),s("p",[t._v("​\t\t如果有某个成员必须有值，则获取对象有可能Set方法没有执行")])]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!--    Set 注入--\x3e")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("bean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("accountService2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("com.itheima.service.impl.AccountServiceImpl2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("property")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("特斯拉"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("property")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("property")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("21"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("property")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("property")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("birthday"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("ref")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("now"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("property")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("bean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n")])])]),s("h2",{attrs:{id:"复杂类型的注入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#复杂类型的注入"}},[t._v("#")]),t._v(" 复杂类型的注入")]),t._v(" "),s("p",[t._v("用于给List集合注入的标签：list array set")]),t._v(" "),s("p",[t._v("用于给Map结构集合注入的标签：map props")]),t._v(" "),s("p",[t._v("结构相同，标签可以互换")]),t._v(" "),s("h1",{attrs:{id:"注解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注解"}},[t._v("#")]),t._v(" 注解：")]),t._v(" "),s("p",[t._v("XML文件配置：")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("bean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("accountService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("com.itheima.service.impl.AccountServiceImpl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("bean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n* 用于创建对象过的注解\n\t在XML配置文件中编写一个"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("bean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("表爱去哪实现功能是一样的\n \t@Component:\n        作用：把当前类对象存入Spring容器中\n        属性：value用于指定Bean的id。不写时默认值为当前类名，且首字母小写\n   @Controller\t：用于表现层\n   @Service  \t：用于业务层\n   @Respository\t：用于持久层\n        以上三个注解，他们的作用和属性与Compontent是一模一样的，\n        是Spring框架为我们提供明确的三层使用的注解，是我们的三层对象更加清晰\n* 用于注入数据的        \n        在XML配置中的bean中写一个"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("property")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("标签一样\n   @Autowired:\n        作用：自动按照类型注入，只要容器中有唯一的一个Bean对象类型和要注入的变量类型匹配，就可以注入成功；\n        \t  如果IOC容器中没有任何Bean的类型和要注入的变量类型匹配，则报错\n        \t  如果有多个类型匹配时\n        出现位置：可以是变量上，可以是方法上\n        细节：在使用注解时,set方法就可以不用\n   @Qualified：必须依赖于Autowired\n        作用：在按按照而理性注入的基础上再按照名称注入。它在给类成员注入时不能单独使用；但给参数注入时可以\n\t\t   属性：value：用于指定注入bean的ID\n   @Resource\n        作用：直接按照bean的ID注入，可以单独使用\n        属性：\n        \t  name:用于指定bean的ID\n  \t\t 以上三个注解，只能注入其他Bean类型的术后据，而基本类型和String类型无法使用上述注解实现。\n        另外，类型集合的注入只能通过XML实现\n        \n        \n   @Value：\n        作用：用于注入基本类型和String类型\n        属性：value：用于指定数据的值，可以使用Spring中SpEL（Spring中的el表达式）\n        \t SpEL写法：${表达式}\n* 改变作用范围的\n        作用集合在bean标签中使用scop标签是一样的\n   @Scope \n        作用：用于指定Bean的作用范围\n        属性：\n        \tValue：指定范围的取值，Singleton、Prototype\n* 生命周期相关（了解）\n        作用和bean标签中使用init-method,destroy-method\n   @PreDestroy：\n       \t指定销毁方法\n  @ PostContruct：\n        指定初始化方法\n        \t\n")])])]),s("h1",{attrs:{id:"configration注解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#configration注解"}},[t._v("#")]),t._v(" Configration注解：")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[t._v("@Configuration\t\n\t作用：\n\t\t指定当前类是一个配置类\n\t细节：\n\t\t1.当配置类作为AnnotationCondifApplicationContext对象创建时，该注解可不写\n\t\t2.\n@ComponentsScan：\n\t作用：\n\t\t用于指定Spring创建容器时所需要扫描的包\n\t属性：\n\t\tvalue:它和basePackkages的作用是一样的，都是指定窗户将容器时所要扫描的包\n\t\t\t  此注解等同与在XML中配置了"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("context:")]),t._v("component-scan")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("base-package")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("com.itheima"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("context:")]),t._v("component-scan")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n@Bean:\n\t作用：\n\t\t把当前方法的返回值作为Bean对象存入Spring容器中\n\t属性：\n\t\tnaem:用于指定bean的ID，不写诗，默认值为当前方法的名称\n\t细节：\n\t\t当使用注解配置方法时，如果方法有参数，Spring框架会去容器中查找有没有可用的Bean对象，查找的方式和Autowied一致\n@Import\n\t作用：用于导入其它的配置类\n\t属性：\n\t\tvalue:用于指定其他配置类的字节码\n\t\t\t  放我们使用Import注释的是父配置类，而导入的是子配置类\n@PropertySource :\n\t\t作用：用于指定Peoperties文件的位置\n属性：values:指定文件路径和名册和名称\n\t\t关键字classpath\n")])])]),s("h1",{attrs:{id:"spring-test注解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-test注解"}},[t._v("#")]),t._v(" Spring Test注解")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Runwith")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("提供一个注解，把原有的main方法替换了，替换成"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Spring")]),t._v("提供的\n\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@ContextConfigration")]),t._v("\n\t\t：location：指定xml位置，加上"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" path关键字，表示在类路径下（"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@ContextConfiguration")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("locations "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"classpath:bean.xml"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n）\n\t\tclasses：指定注解类所在位置\n")])])]),s("h1",{attrs:{id:"aop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aop"}},[t._v("#")]),t._v(" AOP")]),t._v(" "),s("h2",{attrs:{id:"实例分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例分析"}},[t._v("#")]),t._v(" 实例分析：")]),t._v(" "),s("p",[t._v("解决多个进程问题，无法回滚")]),t._v(" "),s("h2",{attrs:{id:"动态代理对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动态代理对象"}},[t._v("#")]),t._v(" 动态代理对象")]),t._v(" "),s("h3",{attrs:{id:"demo-基于接口的动态代理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#demo-基于接口的动态代理"}},[t._v("#")]),t._v(" Demo:基于接口的动态代理")]),t._v(" "),s("blockquote",[s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("  动态代理\n  \n  特点：字节码随用随创建、加载\n      不修改源码的基础上对方法进行增强\n  分类：\n  \n  \t\t基于接口的动态代理\n  \t\t基于子类的动态代理\n  \t\n  \t\t基于接口的动态代理：\n  \t\t\t\t涉及的类Proxy\n  \t\t\t\t提供者：JDK官方\n  \t\t 如何创建代理对象：\n  \t\t\t\t使用Proxy类中的 newProxyInstance\n  \t\t 创建代理对象的要求：\n  \t\t\t\t被代理类最少实现一个接口，如果没有则不能使用\n  \t\tnewProxyInstance方法的参数：\n  \t\t\t\tClassLoader : 用于加载对象字节码。和被代理对象使用相同的类加载器；固定写法\n  \t\t\t\tClass[]：\t\t 让代理对象和被代理对象有相同的方法。固定写法\n  \t\t\t\tInvocationHandle：  让我们写如何代理，我们一般都是写一个该接口的实现类，通常情况下都是匿名内部类；但不是必须的\n  \t\t 此接口的实现类都是谁用谁写\n")])])])]),t._v(" "),s("p",[s("img",{attrs:{src:"C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200811222212008.png",alt:"image-20200811222212008"}})]),t._v(" "),s("h3",{attrs:{id:"demo-基于子类的动态代理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#demo-基于子类的动态代理"}},[t._v("#")]),t._v(" Demo:基于子类的动态代理")]),t._v(" "),s("blockquote",[s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("  动态代理\n  \n  特点：字节码随用随创建、加载\n      不修改源码的基础上对方法进行增强\n  分类：\n  \n  ​\t基于接口的动态代理\n  ​\t基于子类的动态代理\n  \n  基于子类的动态代理：\n  \t\t 涉及的类:Enhancer\n  \t\t提供者：第三方 cglib\n   如何创建代理对象：\n  \t\t使用Proxy类中的 Ehancer类中的Create方法\n   创建代理对象的要求：\n  \t\t被代理类不能是最终类\n  cerate方法的参数：\n  \t\tClass：字节码，用于指定被代理对象的字节码\n  \t\tCallback：  让我们写如何代理，我们一般都是写一个该接口的实现类，通常情况下都是匿名内部类；但不是必须的\n  ​\t此接口的实现类都是谁用谁写\n  ​\t我们一般写的都是该接口的子接口实现类:MethodInterceptor\n")])])])]),t._v(" "),s("h2",{attrs:{id:"aop概念及作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aop概念及作用"}},[t._v("#")]),t._v(" AOP概念及作用")]),t._v(" "),s("p",[t._v("AOP：面向切面编程，是OOP的延续，是函数式编程的延续")]),t._v(" "),s("p",[t._v("作用：在程序运行期间，不修改源码对已有方法进行增强")]),t._v(" "),s("p",[t._v("优势：")]),t._v(" "),s("p",[t._v("​\t\t减少重复代码")]),t._v(" "),s("p",[t._v("​\t\t提高开发效率")]),t._v(" "),s("p",[t._v("​\t\t维护方便")]),t._v(" "),s("h3",{attrs:{id:"通知的类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通知的类型"}},[t._v("#")]),t._v(" 通知的类型：")]),t._v(" "),s("h1",{attrs:{id:"spring基于xml的aop配置步骤"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring基于xml的aop配置步骤"}},[t._v("#")]),t._v(" Spring基于XML的AOP配置步骤")]),t._v(" "),s("p",[t._v("​    1.把通知的Bean交给Logger来管理\n​    2.使用AOP：config标签表示开始AOP的配置\n​    3.使用Aop：aspect标签表明配置切面：\n​            id属性：给切面提供一个唯一标志\n​            ref属性：指定通知类的Bean ID\n​     4.在aop:aspect内部使用对应标签来配置通知的类型\n​            aop:before 配置前置通知\n​                method属性：用于指定Logger类中哪个方法作为前置通知\n​                pointcut属性：用于指定切入点表达式。对业务层哪些方法进行增强")]),t._v(" "),s("p",[t._v("​     切入点从表达式的写法：\n​     关键字：execution(表达式)\n​     表达式：访问修饰符 返回值 包名.包名.类名.方法名（参数列表）\n​     标准的表达式写法:public void com.itheima.service.impl.AccountServiceImpl.saveAccount()")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!--    配置Spring的IOC，把service对象配置进来--\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("bean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("accountService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("com.itheima.service.impl.AccountServiceImpl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("bean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!--    Spring基于XML的AOP配置步骤\n    1.把通知的Bean交给Logger来管理\n    2.使用AOP：config标签表示开始AOP的配置\n    3.使用Aop：aspect标签表明配置切面：\n            id属性：给切面提供一个唯一标志\n            ref属性：指定通知类的Bean ID\n     4.在aop:aspect内部使用对应标签来配置通知的类型\n            aop:before 配置前置通知\n                method属性：用于指定Logger类中哪个方法作为前置通知\n                pointcut属性：用于指定切入点表达式。对业务层哪些方法进行增强\n\n             切入点从表达式的写法：\n             关键字：execution(表达式)\n             表达式：访问修饰符 返回值 包名.包名.类名.方法名（参数列表）\n              标准的表达式写法:public void com.itheima.service.impl.AccountServiceImpl.saveAccount()\n--\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!--    配置Logger类--\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("bean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("logger"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("com.itheima.utils.Logger"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("bean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!--配置AOP--\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("aop:")]),t._v("config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!--        配置切面--\x3e")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("aop:")]),t._v("aspect")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("logAdvice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("ref")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("logger"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!--            配置通知的类型并且建立通知方法和切入点方法的关联--\x3e")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("aop:")]),t._v("before")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("method")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("printLog"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("pointcut")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("execution(public void com.itheima.service.impl.AccountServiceImpl.saveAccount())"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("aop:")]),t._v("before")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("aop:")]),t._v("aspect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("aop:")]),t._v("config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("h3",{attrs:{id:"通配表达式的写法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通配表达式的写法"}},[t._v("#")]),t._v(" 通配表达式的写法")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("\t\t\t切入点从表达式的写法：\n             关键字：execution(表达式)\n             表达式：访问修饰符 返回值 包名.包名.类名.方法名（参数列表）\n              标准的表达式写法:<font color=red>public void com.itheima.service.impl.AccountServiceImpl.saveAccount()</font>\n                  访问修饰符可以省略：\n                        <font color=red>void com.itheima.service.impl.AccountServiceImpl.saveAccount()</font>\n                  返回值可以使用*，表示任意返回值\n\n                    *   <font color=red>com.itheima.service.impl.AccountServiceImpl.saveAccount()</font>\n                                      包名可以使用通配符，表示任意包，但是有几级包就需要写几个*.\n                                            \n                                           * *.*.*.*.AccountServiceImpl.saveAccount()\n                                                                  包名可以使用..表示当前包及其子包\n                                                                       * *..AccountServiceImpl.saveAccount();\n                                                                                         类名和方法名都可以使用*通配\n                                                                                     \n                                                                                                   * *..*.*()\n                                                                                                                参数列表：\n                                                可以直接写数据类型：\n                                            基本类型直接写名称 int\n                                                              应用类型写包名.类名方式 java.lang.String\n                                                                                                                                    可以使用通配符表示任意类型，但必须有参数，\n                                                                                                                          可以使用..表示有无参数均可，有参数可以是任意类型\n                                                                                  全通配写法：* *..*.*(..)\n")])])]),s("p",[s("font",{attrs:{color:"red"}},[t._v("实际开发中通常写法：切到业务层实现类的所有方法:  ")])],1),t._v(" "),s("p",[t._v("​          "),s("font",{attrs:{color:"red"}},[t._v("  *  com.itheima.service.impl."),s("em",[t._v(".")]),t._v("(..) ")])],1),t._v(" "),s("h2",{attrs:{id:"环绕通知的写法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#环绕通知的写法"}},[t._v("#")]),t._v(" 环绕通知的写法：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("/**\n * 问题：\n * 当配置了环绕通知后，切入点方法没有执行，而通知方法执行了\n * 分析：\n * 通过对比动态代理中的环绕通知代码，发现动态代理中的环绕通知有明确的切入点调用方法，而我们代码中没有\n * 解决：\n * Spring框架为我们提供一个接口：ProceedingJoinPoint，该接口有一个方法Proceed（）。此方法明确调用切入点方法\n * 该接口可以作为环绕方法的通知参数，在程序执行时，Spring框架会为我们提供该接口方法的实现类供我们使用\n *\n * Spring环绕通知\n *      他是Spring框架为我们提供的一种可以在代码中手动控制增强方法何时执行的方式\n **/\n")])])]),s("h2",{attrs:{id:"注解通知"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注解通知"}},[t._v("#")]),t._v(" 注解通知：")]),t._v(" "),s("h1",{attrs:{id:"spring中基于xml的声明式事务控制配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring中基于xml的声明式事务控制配置"}},[t._v("#")]),t._v(" Spring中基于XML的声明式事务控制配置")]),t._v(" "),s("p",[t._v("​        1.配置事务管理器\n​        2.配置事务的通知，需要约束,同时也需要AOP\n​                属性：")]),t._v(" "),s("p",[t._v('​\t\t\t\t\t id 给事务通知一个标识\n​                     transaction-manager：给事务管理器通知提供一个事务管理器的引用\n​         3.配置AOP通用切入点表达式\n​         4.建立事务通知和表达式的关系\n​         5.配置事务的属性:\n​            是在事务通知的tx:advice标签内部\n​             isolation="" : 用于指定事务的隔离界别，默认值default表示使用数据库的级别\n​             propagation="" ：用于指定十五点额传播行为，默认值时REQUIRED，表示一定有事务，增删改的选择。查询方法可以选择\t\t\tSUPPORT\n​             read-only=""：用于指定事务是否支付，只有查询方法才能设置为True默认值为false，表示为可读写\n​             timeout=""：事务的超时时间，默认值-1.永不超时；若指定了数值，以秒为单位\n​             rollback-for=""：用于指定一个异常；但产生异常时；事务回滚；产生其它异常时，事务不回滚没有默认值。表示人任何异常都回\t\t\t滚\n​             no-rollback-for="" ：用于指定一个异常，但产生该异常时事务不回滚。产生其他异常时事务会回滚，没有默认值表示任何异常都\t\t\t回滚')]),t._v(" "),s("p",[s("img",{attrs:{src:"C:%5CUsers%5C79443%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200814224346045.png",alt:"image-20200814224346045"}})]),t._v(" "),s("h1",{attrs:{id:"spring中基于aopl的声明式事务控制配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring中基于aopl的声明式事务控制配置"}},[t._v("#")]),t._v(" Spring中基于AOPL的声明式事务控制配置")]),t._v(" "),s("p",[t._v("​        1.配置事务管理器\n​        2.开启Spring对注解事务的支持\n​        3.在需要事务支持的地方使用@Transactionz注解")])])}),[],!1,null,null,null);a.default=e.exports}}]);